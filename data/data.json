[
{"Type":"note","Id":"note-0friction","NoteType":"Game","Date":{"Unix":1567900800},"Uri":"https://smitop.com/no-friction.html","Title":"0friction","Verbose":0,"Text":"\nA game with slippery controls.\n"},
{"Type":"note","Id":"note-bash-eof","Date":{"Unix":1626307200},"Title":"CTRL-D exits bash right away","Verbose":1,"NoteType":"tip","Text":"\nFun fact! You can hit CTRL-D to exit bash (and most Unix shells) quickly. CTRL-D is the combination for EOF, and most Unix programs stop when they hit EOF, bash included.\n\n"},
{"Type":"note","Id":"note-battle-fight-icon","NoteType":"Art","Title":"Battle/fight icon","Date":{"Unix":1551916800},"Uri":"https://opengameart.org/content/battlefight-icon-with-two-swords-svg-vector","Thumb":"/fight.svg","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-cookie","NoteType":"Art","Title":"Cookie","Date":{"Unix":1512691200},"Uri":"https://archive.org/details/Cookie_vector","Thumb":"/cookie.svg","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-donut","NoteType":"Art","Title":"Donut","Date":{"Unix":1512691200},"Uri":"https://archive.org/details/donut_vector","Thumb":"/donut.svg","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-h1-1887917","Date":{"Unix":1696809600},"Title":"IRCCloud XSS from Mastodon embeds","Verbose":0,"NoteType":"Report","Uri":"https://hackerone.com/reports/1887917","Text":"\n\n"},
{"Type":"note","Id":"note-int-mod-n","NoteType":"Math demo","Title":"Integers mod ùëõ under multiplication","Date":{"Unix":1617926400},"Uri":"https://smitop.com/int-mod-n.html","Thumb":"/intmod200.png","Verbose":0,"Text":"\n"},
{"Type":"note","Id":"note-learnlake","NoteType":"Game","Title":"LearnLake","Date":{"Unix":1523577600},"Uri":"https://learnlake.com/","Verbose":0,"Text":"A small educational website.\n\n"},
{"Type":"note","Id":"note-mova","NoteType":"Game","Date":{"Unix":1578009600},"Uri":"https://smitop.com/mova.html","Title":"Mova","Verbose":0,"Text":"\nA game where you avoid tiny squares.\n\n"},
{"Type":"note","Id":"note-nini","Title":"Nini","Date":{"Unix":1547424000},"Uri":"https://nini.smitop.com/","NoteType":"Website","Verbose":0,"Text":"Tools for the Nimiq blockchain.\n\n"},
{"Type":"note","Id":"note-review-snakes-tale","Date":{"Unix":1659830400},"Uri":"https://itch.io/e/11809602/smitop-rated-a-snakes-tale","Title":"Review: A Snake's Tale","NoteType":"Review","Verbose":1,"Stars":"5","Text":"\nA fun puzzle game with snakes!\n\n"},
{"Type":"note","Id":"note-segme","NoteType":"Web app","Title":"Segme","Date":{"Unix":1633305600},"Uri":"https://smitop.com/segme/","Thumb":"/segme.png","Verbose":-1,"Text":"\nUnicode text segmentation online.\n"},
{"Type":"note","Id":"note-shift-key","Date":{"Unix":1571875200},"Uri":"https://smitop.com/shift-key.html","Title":"Is your shift key pressed?","NoteType":"Web app","Verbose":0,"Text":"\nWondering if your shift key is pressed? Not anymore.\n"},
{"Type":"note","Id":"note-sm-explorer","NoteType":"Web app","Date":{"Unix":1543104000},"Uri":"https://sm.smitop.com/","Title":"Splinterlands explorer","Verbose":0,"Text":"\nExplore operations that have happened on Splinterlands.\n"},
{"Type":"note","Id":"note-speakscribe","NoteType":"Web app","Date":{"Unix":1561593600},"Uri":"https://speakscribe.com/","Title":"SpeakScribe","Verbose":0,"Text":"\nA dictation website that uses Web APIs.\n"},
{"Type":"note","Id":"note-sqgame","NoteType":"Game","Date":{"Unix":1567296000},"Uri":"https://smitop.com/square-game/","Title":"Square game","Verbose":0,"Text":"\nA game that involves squares.\n\n"},
{"Type":"note","Id":"note-transform","NoteType":"Web app","Date":{"Unix":1615593600},"Uri":"https://smitop.com/transform-playground/","Title":"Linear transformation playground","Verbose":0,"Text":"\nPlay with some linear transformations in your browser!\n\n"},
{"Type":"note","Id":"note-tree","NoteType":"Art","Title":"Stylized tree","Date":{"Unix":1628985600},"Uri":"https://opengameart.org/content/stylized-tree","Thumb":"/tree.png","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-ttw","Title":"TagTime Web","Uri":"https://ttw.smitop.com/","NoteType":"Web app","Date":{"Unix":1597881600},"Verbose":0,"Text":"Time tracking that randomly samples you.\n\n"},
{"Type":"note","Id":"note-upload2ipfs","Title":"Upload2IPFS","Uri":"https://upload2ipfs.smitop.com/","NoteType":"Web app","Date":{"Unix":1559606400},"Verbose":0,"Text":"Upload files to the IPFS network online.\n\n"},
{"Type":"gh-pr","Id":"gh-pr-2251882849","CommentCount":3,"Text":"This PR is identical to #2577, which was (accidentally?) reverted by @jahooma in d3483dfba19f601a34bd1cfadfe446e48e529f80.","Date":{"Unix":1713490285},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2589","Title":"Say \"for MÃ∂250\" not \"for $MÃ∂250\", again","Verbose":1,"GhIssueNumber":2589,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-2244936456","CommentCount":3,"Text":"There shouldn't be a dollar sign here:\r\n\r\n![Refer a friend for for $MÃ∂250 each!](https://github.com/manifoldmarkets/manifold/assets/10530973/90abab65-1a0f-445f-8980-1ef250848501)\r\n\r\nThe code does `${formatMoney(REFERRAL_AMOUNT)}` as if it was in a format string, but it's actually in a JSX markup expression which doesn't require a `$` there.","Date":{"Unix":1713245670},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2577","Title":"Say \"for MÃ∂250\" not \"for $MÃ∂250\"","Verbose":1,"GhIssueNumber":2577,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-2182874716","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements `console.count` and `console.countReset`.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes\r\n  - WPT also has manual tests for console.count/countReset - `console/console-count-logging-manual.html` passes, and `console/console-countReset-logging-manual.html` fails because of a problem with the test (https://github.com/web-platform-tests/wpt/pull/45072)\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1710672738},"Uri":"https://github.com/servo/servo/pull/31635","Title":"Implement console.count/countReset","Verbose":1,"GhIssueNumber":31635,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2182853698","CommentCount":0,"Text":"The test wasn't resetting the count between blocks of console calls, so a spec-compliant browser would produce output that doesn't match the expectation. Also, it wasn't specifying the label in the \"a label\" test, so it was unintentionally resetting the default count instead of the \"a label\" count.\r\n\r\n(In Firefox, the test outputs \"default: 0\" in the console a lot - this is actually a spec violation.)","Date":{"Unix":1710335050},"Uri":"https://github.com/web-platform-tests/wpt/pull/45072","Title":"Fix `console.countReset` manual test","Verbose":1,"GhIssueNumber":45072,"GhRepo":"web-platform-tests/wpt"},
{"Type":"gh-pr","Id":"gh-pr-2170465276","CommentCount":0,"Text":"Some tests in `html/semantics/scripting-1/the-script-element/module` do `window.addEventListener(\"onunhandledrejection\", unreachable)`, when they should do `window.addEventListener(\"unhandledrejection\", unreachable);` - the event is called `unhandledrejection`, not `onunhandledrejection`.\r\n\r\nThis event handler should never be run when these tests pass, so this change ensures that `unhandledrejection` must not be fired to pass the test.","Date":{"Unix":1709692208},"Uri":"https://github.com/web-platform-tests/wpt/pull/44943","Title":"Name unhandledrejection event correctly","Verbose":1,"GhIssueNumber":44943,"GhRepo":"web-platform-tests/wpt"},
{"Type":"gh-pr","Id":"gh-pr-2170416402","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nFixes a build error when building on NixOS. This build error was introduced by #31465, which changed filterlock without also updating the `vendorTarball` hash in `etc/shell.nix`. (filterlock is not a part of the main Servo workspace (it has its own lockfile and target directory), since it has to be executed before any other Rust code can be compiled on NixOS)\r\n\r\n```\r\n$ nix-shell etc/shell.nix \r\n...\r\nRunning phase: buildPhase\r\nerror: failed to select a version for the requirement `toml = \"^0.8.9\"`\r\ncandidate versions found which didn't match: 0.8.8\r\nlocation searched: directory source `/build/filterlock/vendor` (which is replacing registry `crates-io`)\r\nrequired by package `filterlock v0.1.0 (/build/filterlock)`\r\nperhaps a crate was updated and forgotten to be re-vendored?\r\nAs a reminder, you're using offline mode (--offline) which can sometimes cause surprising resolution failures, if this error is too confusing you may wish to retry without the offline flag.\r\n```\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] These changes do not require tests because none of the Nix configuration is tested in CI\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709704519},"Uri":"https://github.com/servo/servo/pull/31515","Title":"Fix build failure on NixOS","Verbose":1,"GhIssueNumber":31515,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2162464038","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements support for  `<meta http-equiv=\"refresh\" content=\"‚Ä¶; url=‚Ä¶\">` meta tags.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [x] `./mach build -d` does not report any errors\r\n- [x] `./mach test-tidy` does not report any errors\r\n- [x] These changes fix #25082\r\n- [x] There are tests for these changes\r\n\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709282539},"Uri":"https://github.com/servo/servo/pull/31468","Title":"script: Implement `<meta http-equiv=\"refresh\">`","Verbose":1,"GhIssueNumber":31468,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2162432257","CommentCount":3,"Text":"`getContractsCreatedProgress` checks for markets where `data->>uniqueBettorCount` is ‚â•20, but it should be checking `data->uniqueBettorCount`.\r\n\r\n`->>` casts the count to a string, which results in the unique bettor count being lexicographically compared to \"20\", when it should be numerically compared to 20. As a result, the query includes all markets where the first digit of the bettor count is 2 to 9. (e.g. bettor counts of 5 and 50 are included, but 1 and 100 aren't).\r\n\r\ncc @jahooma ","Date":{"Unix":1709258473},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2500","Title":"Compute partner progress for ‚â•20 trader markets correctly","Verbose":1,"GhIssueNumber":2500,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-2160205798","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nFixes the test-tidy output so that it recommends the correct WHATWG URL\r\n```\r\n‚Ä¶use this format instead: https://html.spec.whatwg.org/multipage/#dom-context-2d-shadowoffsetx\r\n```\r\nInstead of a URL containing `b'`\r\n```\r\n‚Ä¶use this format instead: https://html.spec.whatwg.org/multipage/#b'dom-context-2d-shadowoffsetx'\r\n```\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes OR\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709190735},"Uri":"https://github.com/servo/servo/pull/31449","Title":"tidy: Fix WHATWG replacement links","Verbose":1,"GhIssueNumber":31449,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2157928861","CommentCount":5,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements `process_resolved_font_style_query` in layout 2020 to the same extent it's supported by layout 2013, to add support for setting the font of a Canvas2D context.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709158179},"Uri":"https://github.com/servo/servo/pull/31436","Title":"layout: Add an implementation of `process_resolved_font_style_query` for Layout 2020","Verbose":1,"GhIssueNumber":31436,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2145607222","CommentCount":1,"Text":"<!-- üôå Thanks for contributing to MDN Web Docs. Adding details below will help us to merge your PR faster. -->\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è Summarize your changes in one or two sentences -->\r\nUpdates the page for `window.blur()` to reflect that it does nothing - [according to the spec](https://html.spec.whatwg.org/#dom-window-blur):\r\n\r\n> The `blur()` method steps are to do nothing.\r\n\r\n### Motivation\r\n\r\n<!-- ‚ùì Why are you making these changes and how do they help readers? -->\r\nThis helps readers who may be confused as to why `blur()` doesn't work.\r\n\r\n### Additional details\r\n\r\n<!-- üîó Link to release notes, vendor docs, bug trackers, source control, or other places providing more context -->\r\n- [Chromium's no-op `blur()` implementation](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/dom_window.cc;l=588;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090)\r\n- [Mozilla's check for if `blur()` should be allowed](https://github.com/mozilla/gecko-dev/blob/c26f7461fc2a51196b7f517c7f98a1e271dc9ec0/docshell/base/BrowsingContext.cpp#L2337) (only for browser chrome and when `dom.disable_window_flip` is off)\r\n\r\n\r\n<!-- üî® If this fully resolves a GitHub issue, use \"Fixes #123\" -->\r\n<!-- üëâ Highlight related pull requests using \"Relates to #123\" -->\r\n<!-- ‚ùó If another pull request should be merged first, use \"**Depends on:** #123\" -->\r\n\r\n\r\n<!-- üë∑‚Äç‚ôÄÔ∏è After submitting, go to the \"Checks\" tab of your PR for the build status -->\r\n","Date":{"Unix":1708506002},"Uri":"https://github.com/mdn/content/pull/32374","Title":"Update window.blur() to reflect that it does nothing","Verbose":1,"GhIssueNumber":32374,"GhRepo":"mdn/content"},
{"Type":"gh-pr","Id":"gh-pr-2145578590","CommentCount":0,"Text":"Some types in this crate don't have Debug implemented, but it's annoying\nto use a non-Debug type in a struct with Debug derived. I just used the\nautomatic impl from `#[derive(Debug)]` for all of these (although in the\nfuture it might be good to have custom implementations for types with\ncomplex internals).\n\nCloses #95.","Date":{"Unix":1708482704},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/131","Title":"Implement Debug on all public structs","Verbose":1,"GhIssueNumber":131,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-2145516888","CommentCount":0,"Text":"# Motivation\r\n<!-- Briefly explain what the change is about and why it is desirable. -->\r\nSpecify how many channels were unpacked in the `nix-channel` output. E.g.\r\n```sh\r\n$ nix-channel --update\r\nunpacking 1 channels...\r\n```\r\n\r\n# Context\r\n<!-- Provide context. Reference open issues if available. -->\r\n\r\n<!-- Non-trivial change: Briefly outline the implementation strategy. -->\r\nSometimes `nix-channel` doesn't expect the number of channels I expect (e.g. when I forget to run it with `sudo`). Specifying the number of channels created helps verify if `nix-channel --update` did what I expected.\r\n<!-- Invasive change: Discuss alternative designs or approaches you considered. -->\r\n\r\n<!-- Large change: Provide instructions to reviewers how to read the diff. -->\r\n\r\n# Priorities and Process\r\n\r\nAdd :+1: to [pull requests you find important](https://github.com/NixOS/nix/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc).\r\n\r\nThe Nix maintainer team uses a [GitHub project board](https://github.com/orgs/NixOS/projects/19) to [schedule and track reviews](https://github.com/NixOS/nix/tree/master/maintainers#project-board-protocol). \r\n","Date":{"Unix":1708514637},"Uri":"https://github.com/NixOS/nix/pull/10054","Title":"Say how many channels were unpacked in nix-channel","Verbose":1,"GhIssueNumber":10054,"GhRepo":"NixOS/nix"},
{"Type":"gh-pr","Id":"gh-pr-2137792566","CommentCount":11,"Text":"Adds basic support for `AbortController`/`AbortSignal`, and implements the `signal` parameter to `addEventListener` to support cancelling event listeners with `AbortSignal`.\r\n\r\nThis PR doesn't implement  `AbortSignal`  dependent signals or fetch cancellation.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [x] `./mach build -d` does not report any errors\r\n- [x] `./mach test-tidy` does not report any errors\r\n- [x] There are tests for these changes\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1714838537},"Uri":"https://github.com/servo/servo/pull/31361","Title":"script: implement AbortController","Verbose":1,"GhIssueNumber":31361,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2128787049","CommentCount":0,"Text":"This fixes a warning from Cargo about relying on deprecated behavior:\n```\nwarning: /home/loops/src/servo/servo/components/script/Cargo.toml: dependency (num_cpus) specified without providing a local path, Git repository, version, or workspace dependency to use. This will be considered an error in future versions\nwarning: /home/loops/src/servo/servo/components/config/Cargo.toml: dependency (num_cpus) specified without providing a local path, Git repository, version, or workspace dependency to use. This will be considered an error in future versions\n```\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [X] `./mach build -d` does not report any errors\n- [X] `./mach test-tidy` does not report any errors\n- [X] These changes do not require tests because there isn't a way to test this, since Cargo doesn't support promoting warnings from Cargo itself into errors\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707647435},"Uri":"https://github.com/servo/servo/pull/31310","Title":"Cargo.toml: explictly specify num_cpus version","Verbose":1,"GhIssueNumber":31310,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2126418915","CommentCount":0,"Text":"There are [a few places in Servo](https://github.com/search?q=repo%3Aservo%2Fservo%20asbits_&type=code) where we need to check if two structs from mozjs-sys are equal, but since Bindgen doesn't automatically derive `PartialEq` by default, the code has to compare the inner `asBits_` field.\r\n\r\nThis PR tells Bindgen to automatically derive `PartialEq` where possible, to allow making such code simpler.","Date":{"Unix":1707463307},"Uri":"https://github.com/servo/mozjs/pull/451","Title":"Derive `PartialEq` in `mozjs-sys` ","Verbose":1,"GhIssueNumber":451,"GhRepo":"servo/mozjs"},
{"Type":"gh-pr","Id":"gh-pr-2121745906","CommentCount":0,"Text":"The documentation on `unicode-rs.github.io` hasn't been updated in three\nyears (since Travis CI stopped working), and docs.rs works fine for this\ncrate.","Date":{"Unix":1707258529},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/130","Title":"Remove outdated documentation link in Cargo.toml","Verbose":1,"GhIssueNumber":130,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-2119648704","CommentCount":0,"Text":"Implements [`navigator.hardwareConcurrency`](https://html.spec.whatwg.org/multipage/#dom-navigator-hardwareconcurrency), which returns the number of logical processors available.\n\nI used the `num_cpus` library (which is already used by Servo in other places), and cache the result since it can be slow to query that information on some operating systems.\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [x] `./mach build -d` does not report any errors\n- [x] `./mach test-tidy` does not report any errors\n- [x] There are tests for these changes\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707338892},"Uri":"https://github.com/servo/servo/pull/31268","Title":"script: implement navigator.hardwareConcurrency","Verbose":1,"GhIssueNumber":31268,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2119219878","CommentCount":1,"Text":"<!-- Please describe your changes on the following line: -->\nI checked for very deep objects in when adding object logging support in #31241, but didn't check for objects with many elements (usually large arrays). This caused crashes with code like `console.log(new Array(10000000).fill(\"x\"))`.\n\nThis PR fixes that by only logging the first 15 elements of objects.\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [X] `./mach build -d` does not report any errors\n- [X] `./mach test-tidy` does not report any errors\n- [X] There are tests for these changes\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707213940},"Uri":"https://github.com/servo/servo/pull/31267","Title":"Fix crash on console logging large array","Verbose":1,"GhIssueNumber":31267,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2117489303","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\nConverts  `etc/profilicate.py` (a script for processing raw profiler samples) from Python 2 to Python 3, to make it easier to run on modern systems. I used `2to3`, then removed unnecessary double brackets and updated the shebang.\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [X] `./mach build -d` does not report any errors\n- [X] `./mach test-tidy` does not report any errors\n- [ ] These changes fix #___ (GitHub issue number if applicable)\n- [X] These changes do not require tests because it is a testing script\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707117100},"Uri":"https://github.com/servo/servo/pull/31259","Title":"Convert etc/profilicate.py to Python 3","Verbose":1,"GhIssueNumber":31259,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2117407778","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements [`.reset()`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/reset) for `CanvasRenderingContext2D`, which resets the rendering context to its default state. There is already logic for resetting the rendering context for when the width/height is changed, so the implementation is similar.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [x] `./mach build -d` does not report any errors\r\n- [x] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes (already in WPT)\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1707126947},"Uri":"https://github.com/servo/servo/pull/31258","Title":"canvas2d: Implement `.reset()`","Verbose":1,"GhIssueNumber":31258,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2115885686","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nThe `HTMLImageElement.prototype.width/height` attributes [should provide](https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-width) the rendered width/height of images that are being rendered, and the natural width/height of images that are not being rendered. In Servo, these attributes call `bounding_content_box` on the node, treating `None` as an indication that the element is not being rendered (and returning the natural width/height). But Layout 2020 returns a 0x0 bounding box for elements that are not being rendered, instead of `None`.\r\n\r\nAs a result:\r\n```js\r\nlet image = new Image();\r\nimage.src = \"...\";\r\nimage.onload = () => {\r\n    const [width, height] = [image.width, image.height];\r\n    // use width/height\r\n};\r\n```\r\nalways gets 0/0 for the width/height (instead of the natural width/height) in Layout 2020.\r\n\r\nThis PR makes it so requests to Layout 2020 for the bounding box of a node that isn't being rendered return `None` instead of a 0x0 bounding box, which matches the Layout 2013 behavior.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes (which already exist in WPT)\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1706919985},"Uri":"https://github.com/servo/servo/pull/31253","Title":"layout: return None bounding box when no nodes found","Verbose":1,"GhIssueNumber":31253,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2111501630","CommentCount":5,"Text":"<!-- Please describe your changes on the following line: -->\r\nMatch the [Console spec](https://console.spec.whatwg.org/) by having the console methods take `any` instead of a string. This fixes #29460, where `console.log(Symbol())` throws because Symbols can't be implicitly converted to a string.\r\n\r\nI used `JS_ValueToSource` to convert all JS values to strings. This change results in better logging for objects (`({a:{b:{c:5, d:new Number(3), e:new Boolean(false), g:4324324423432423423423n, h:3.333, i:(void 0)}}})` instead of `[object Object]`).\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] These changes fix #29460\r\n\r\n<!-- Either: -->\r\n- [X] There are tests for these changes OR\r\n- [ ] These changes do not require tests because ___\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->","Date":{"Unix":1707147851},"Uri":"https://github.com/servo/servo/pull/31241","Title":"Make console methods take `any` instead of `string`","Verbose":1,"GhIssueNumber":31241,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2109120389","CommentCount":2,"Text":"<!-- Please describe your changes on the following line: -->\r\nI want to build Servo on NixOS, without installing the non-free Android SDK. This PR makes it so Android support is only built if the `buildAndroid` argument is true (e.g. by running `nix-shell --arg buildAndroid true etc/shell.nix`)\r\n\r\nI've verified that you can still build/run non-Android Servo with this change, but I haven't tested on Android (it should still work though, since the derivation is unaffected by this change when `buildAndroid` is true).\r\n\r\n---\r\n\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [ ] `./mach test-tidy` does not report any errors - it reports a diff in `components/config/prefs.rs`, which this PR didn't change (I think #31223 caused this by adding a trailing space?)\r\n- [ ] These changes fix #___ (GitHub issue number if applicable)\r\n\r\n<!-- Either: -->\r\n- [ ] There are tests for these changes OR\r\n- [X] These changes do not require tests because the Nix configuration doesn't have tests\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1706843687},"Uri":"https://github.com/servo/servo/pull/31231","Title":"Make Android build optional on Nix","Verbose":1,"GhIssueNumber":31231,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2106615108","CommentCount":0,"Text":"`BoxMeUp::box_me_up` was renamed to `take_box` in https://github.com/rust-lang/rust/pull/66766, and `BoxMeUp` was renamed to `PanicPayload` in https://github.com/rust-lang/rust/pull/116008. Updates the panic implementation docs to reflect that.","Date":{"Unix":1706608603},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1878","Title":"Update uses of renamed BoxMeUp to PanicPayload","Verbose":1,"GhIssueNumber":1878,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-2034202430","CommentCount":2,"Text":"## Description of changes\r\n\r\nAudioTube depends on the Purpose library, and fails to launch if Purpose is not in the environment. This PR fixes that by adding `kpurpose` as a build dependency.\r\n\r\nCloses #228179.\r\n\r\n## Things done\r\n\r\n- Built on platform(s)\r\n  - [X] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- For non-Linux: Is sandboxing enabled in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n  - [ ] `sandbox = relaxed`\r\n  - [ ] `sandbox = true`\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [X] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [24.05 Release Notes](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md) (or backporting [23.05](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md) and [23.11](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md) Release notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n- [X] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\n\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n---\r\n\r\nAdd a :+1: [reaction] to [pull requests you find important].\r\n\r\n[reaction]: https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\r\n[pull requests you find important]: https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\r\n","Date":{"Unix":1707146863},"Uri":"https://github.com/NixOS/nixpkgs/pull/273263","Title":"libsForQt515.audiotube: depend on kpurpose","Verbose":1,"GhIssueNumber":273263,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1970934573","CommentCount":1,"Text":"Updates the TimescaleDB Toolkit formula to use Toolkit 1.17.0 and PG15. Also updates pgrx (renamed from pgx) to the latest version so it can build properly.\r\n\r\nCloses #41 #39.","Date":{"Unix":1699017678},"Uri":"https://github.com/timescale/homebrew-tap/pull/42","Title":"Update Toolkit formula","Verbose":1,"GhIssueNumber":42,"GhRepo":"timescale/homebrew-tap"},
{"Type":"gh-pr","Id":"gh-pr-1964677578","CommentCount":3,"Text":null,"Date":{"Unix":1698376002},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2117","Title":"Mark my bot as a bot","Verbose":1,"GhIssueNumber":2117,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-1909546798","CommentCount":1,"Text":"Adds Unicode 15.1 support.\r\n\r\n## Updating tests\r\n\r\nTurns out `scripts/unicode_gen_breaktests.py` was last run for Unicode 11 - every subsequent updater forgot to run it. I updated the GitHub Action that checks `scripts/unicode.py` was run to also check for `scripts/unicode_gen_breaktests.py` being run.\r\n\r\n### Devanagari mis-segmentation\r\n\r\nThere are a few cases where Devanagari grapheme segmentation fails after updating the test data from Unicode 11 to Unicode 15. I just skipped those failing tests for now.","Date":{"Unix":1695673921},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/124","Title":"Support Unicode 15.1","Verbose":1,"GhIssueNumber":124,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-1803472359","CommentCount":4,"Text":"Implements the \"items do not inherit unsafety from separate enclosing items\" note from the MIR unsafety checker in the THIR unsafety checker (`-Z thir-unsafeck`) to maintain parity between the two unsafety checkers. The logic to find the separate enclosing item is nearly the same as in the MIR unsafety checker.","Date":{"Unix":1689453101},"Uri":"https://github.com/rust-lang/rust/pull/113663","Title":"Implement \"items do not inherit unsafety\" note for THIR unsafeck","Verbose":1,"GhIssueNumber":113663,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-1788272716","CommentCount":11,"Text":"Fixes #11099 \r\nFixes #11064 \r\n\r\nI'm running into #11099 (cc @y21) on my Rust codebase. Clippy ICEs on this code when evaluating the `unnecessary_literal_unwrap` lint:\r\n```rust\r\nfn main() {\r\n    let val1: u8 = None.unwrap_or_default();\r\n}\r\n```\r\n\r\nThis fixes that ICE and adds an message specifically for that case:\r\n\r\n```\r\nerror: used `unwrap_or_default()` on `None` value\r\n  --> $DIR/unnecessary_literal_unwrap.rs:26:5\r\n   |\r\nLL |     None::<String>.unwrap_or_default();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove the `None` and `unwrap_or_default()`: `String::default()`\r\n```\r\n\r\nThis PR also fixes the same ICE with `None.unwrap_or_else` (by giving the generic error message for the lint in that case).\r\n\r\nchangelog: Fix ICE in `unnecessary_literal_unwrap` on `None.unwrap_or_default()`\r\n","Date":{"Unix":1689851290},"Uri":"https://github.com/rust-lang/rust-clippy/pull/11106","Title":"[`unnecessary_literal_unwrap`]: Fix ICE on None.unwrap_or_default()","Verbose":1,"GhIssueNumber":11106,"GhRepo":"rust-lang/rust-clippy"},
{"Type":"gh-pr","Id":"gh-pr-1759309820","CommentCount":2,"Text":null,"Date":{"Unix":1688660779},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/762","Title":"Update to pgrx 0.9.7","Verbose":1,"GhIssueNumber":762,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1675800256","CommentCount":0,"Text":"pgx [was renamed to pgrx](https://github.com/tcdi/pgrx/issues/1106) recently. Even though the tar.gz file for the older version has the same contents, the top level directory name is now `pgrx-0.7.1`, so the hash is different. This PR updates the hash to be correct.\r\n\r\nFixes https://github.com/timescale/timescaledb-toolkit/issues/757.","Date":{"Unix":1682352054},"Uri":"https://github.com/timescale/homebrew-tap/pull/38","Title":"Fix hash change caused by pgrx rename","Verbose":1,"GhIssueNumber":38,"GhRepo":"timescale/homebrew-tap"},
{"Type":"gh-pr","Id":"gh-pr-1671976691","CommentCount":1,"Text":"Some links to zombodb/pgx got replaced with zombodb/pgrx, which GitHub doesn't redirect here. This fixes them by updating those links to tcdi/pgrx. ","Date":{"Unix":1681766047},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/1109","Title":"Fix broken links to zombodb/pgrx","Verbose":1,"GhIssueNumber":1109,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1657713821","CommentCount":1,"Text":"# Description\r\n\r\nWe stabilized the three date utility functions in Toolkit 1.16. We forgot to document `to_epoch` when it was added, so this PR also documents that function.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/about/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\n\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n*   [ ] Is the content technically accurate?\r\n*   [ ] Is the content complete?\r\n*   [ ] Is the content presented in a logical order?\r\n*   [ ] Does the content use appropriate names for features and products?\r\n*   [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n*   [ ] Is the content free from typos?\r\n*   [ ] Does the content use plain English?\r\n*   [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n*   [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n*   [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n*   [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1681220192},"Uri":"https://github.com/timescale/docs/pull/2245","Title":"Document date utility stabilization in Toolkit 1.16","Verbose":1,"GhIssueNumber":2245,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1657710089","CommentCount":1,"Text":"# Description\r\n\r\nmin_n/max_n/min_n_by/max_n_by were stabilized in Toolkit 1.16.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/about/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\n\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n*   [ ] Is the content technically accurate?\r\n*   [ ] Is the content complete?\r\n*   [ ] Is the content presented in a logical order?\r\n*   [ ] Does the content use appropriate names for features and products?\r\n*   [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n*   [ ] Is the content free from typos?\r\n*   [ ] Does the content use plain English?\r\n*   [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n*   [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n*   [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n*   [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1681226583},"Uri":"https://github.com/timescale/docs/pull/2244","Title":"Document min_n/max_n stabilization in Toolkit 1.16","Verbose":1,"GhIssueNumber":2244,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1652249604","CommentCount":2,"Text":"Note that I didn't add arrow accessors for `into_values` for `min_n_by`/`max_n_by` since those functions take dummy `NULL`s.","Date":{"Unix":1680711698},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/751","Title":"Stabilize nmost functions","Verbose":1,"GhIssueNumber":751,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1646567861","CommentCount":2,"Text":"Stabilize three date utilities. Also locks down the search path for them (and inlines a call to `days_in_month` so that it can use a locked-down schema).","Date":{"Unix":1680636528},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/745","Title":"Stabilize date utilities","Verbose":1,"GhIssueNumber":745,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1644819900","CommentCount":2,"Text":"Trying to build TimescaleDB with RHEL/Rocky Linux in the nightly CI job doesn't work currently. This disables it for now.","Date":{"Unix":1680121389},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/744","Title":"Don't try building TSDB with Enterprise Linux on nightly CI builds","Verbose":1,"GhIssueNumber":744,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1634569757","CommentCount":1,"Text":"# Description\r\n\r\n`timezone` is the third argument to `time_bucket_gapfill`, not the last. \r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1679494569},"Uri":"https://github.com/timescale/docs/pull/2168","Title":"Fix argument order for time_bucket_gapfill","Verbose":1,"GhIssueNumber":2168,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1626511489","CommentCount":2,"Text":"Recent versions of clangd store cached data in the `.cache` directory instead of `.clangd`; this PR makes the new directory ignored by Git in addition to the old one.\r\n\r\nDisable-check: force-changelog-changed","Date":{"Unix":1679076806},"Uri":"https://github.com/timescale/timescaledb/pull/5451","Title":"Add new clangd cache location to gitignore","Verbose":1,"GhIssueNumber":5451,"GhRepo":"timescale/timescaledb"},
{"Type":"gh-pr","Id":"gh-pr-1621975017","CommentCount":1,"Text":"# Description\r\n\r\n- Fixes references to \"averages\" with correct references to \"integrals\"\r\n- Better indicate `integral`'s `unit` parameter is optional\r\n- Add `unit` to list of optional parameters for `interpolated_integral`\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1678768558},"Uri":"https://github.com/timescale/docs/pull/2128","Title":"Improve integral docs","Verbose":1,"GhIssueNumber":2128,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1621751646","CommentCount":2,"Text":"It turns out that bors interprets \"Test Postgres (%)\" as requiring at least one job to pass matching that, instead of all of them. ","Date":{"Unix":1678801795},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/736","Title":"Require all CI jobs to pass, not one","Verbose":1,"GhIssueNumber":736,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1615917534","CommentCount":2,"Text":"Makes it so automated issues and PRs from the release script come from github-actions[bot] instead of an actual user account, to make it clear that those issues and PRs were not made by a human.","Date":{"Unix":1679343405},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/730","Title":"Use github-actions[bot] for automated issues and PRs","Verbose":1,"GhIssueNumber":730,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1615781805","CommentCount":2,"Text":null,"Date":{"Unix":1678303475},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/726","Title":"Changelog updates for 1.15","Verbose":1,"GhIssueNumber":726,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1615501347","CommentCount":2,"Text":"# Description\r\n\r\nDocuments changes to `state_agg` in Toolkit 1.15:\r\n- `state_agg` was stabilized\r\n- `interpolated_state_int_timeline` function was renamed\r\n- `state_at` and `state_at_int` functions were added\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1678381566},"Uri":"https://github.com/timescale/docs/pull/2110","Title":"Document changes to state_agg in Toolkit 1.15","Verbose":1,"GhIssueNumber":2110,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1608858157","CommentCount":4,"Text":"Adds support for CI testing on all platforms we build packages for.","Date":{"Unix":1678460146},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/725","Title":"Test on more CI platforms","Verbose":1,"GhIssueNumber":725,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1605454802","CommentCount":2,"Text":"Closes #691.","Date":{"Unix":1678147837},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/723","Title":"Stabilize state aggregate","Verbose":1,"GhIssueNumber":723,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1599181228","CommentCount":1,"Text":"# Description\r\n\r\nFixes the name of the `state_int_timeline` function ‚Äì it was written in the docs as `state_int_state`.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1677452671},"Uri":"https://github.com/timescale/docs/pull/2072","Title":"Fix state_int_timeline name","Verbose":1,"GhIssueNumber":2072,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1593610738","CommentCount":2,"Text":"This PR should fix out-of-bounds indexing in `rollup`:\r\n- before, `last_state` in the merged aggregate was computed incorrectly; it is now determined correctly\r\n- merging aggregates now sorts them first\r\n\r\nIt also improves the various error messages that could arise when using rollup.","Date":{"Unix":1677255157},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/715","Title":"Fix errors in state_agg rollup","Verbose":1,"GhIssueNumber":715,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1589621481","CommentCount":2,"Text":"Makes it so bors ensures PG15 tests pass before merging PRs.","Date":{"Unix":1677027784},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/713","Title":"Tell bors about Postgres 15 tests","Verbose":1,"GhIssueNumber":713,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1586178879","CommentCount":2,"Text":"Adds the `powertools`/`crb` repository to the Enterprise Linux images so that PostgreSQL can be installed again.\r\n\r\nIt seems that the official PostgreSQL RPMs have dependencies in the CRB (PowerTools before RL9) repository. This PR enables that repository before trying to install anything. With this PR, the CI image for RL8/9 [now builds successfully again](https://github.com/timescale/release-build-scripts/actions/runs/4185934031).\r\n\r\nFixes #711.","Date":{"Unix":1677028582},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/712","Title":"Fix image build failures on Rocky Linux","Verbose":1,"GhIssueNumber":712,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1584869535","CommentCount":2,"Text":"Runs the CI image building action on PRs that modify `tools/dependencies.sh`, since that file impacts the Docker image. We already do this for the files in `docker/ci` and the build action itself.","Date":{"Unix":1676587732},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/710","Title":"Build CI image on PRs modifying dependencies","Verbose":1,"GhIssueNumber":710,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1584857008","CommentCount":3,"Text":"Upgrades our pgx version from 0.6.1 to 0.7.1.","Date":{"Unix":1676575313},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/709","Title":"Upgrade pgx to 0.7.1","Verbose":1,"GhIssueNumber":709,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1584315512","CommentCount":1,"Text":"# Description\r\n\r\nDocuments the changes to `state_agg` in [Toolkit 1.14](https://github.com/timescale/timescaledb-toolkit/releases/tag/1.14.0):\r\n- Renamed `state_agg` ‚Üí `compact_state_agg`; renamed `timeline_agg` ‚Üí `state_agg`\r\n- Removed `next` parameter from all interpolated state_agg functions\r\n- Added `next` and `interval` parameters to `duration_in`\r\n- Swapped arguments to `{interpolated_,}{duration_in,state_periods}` so that the aggregate is always first and the state is always second\r\n- Made `into_[int_]values` return `INTERVAL`s instead of a `BIGINT` representing the number of microseconds in the state\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1676512575},"Uri":"https://github.com/timescale/docs/pull/2037","Title":"Document state_agg changes in Toolkit 1.14","Verbose":1,"GhIssueNumber":2037,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1578505730","CommentCount":4,"Text":"(from the release script)","Date":{"Unix":1676048717},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/706","Title":"Start 1.15.0-dev","Verbose":1,"GhIssueNumber":706,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1578373349","CommentCount":1,"Text":"# Description\r\n\r\nFor `get_telemetry_report`, the `always_display_report` parameter was removed in 2.6.0. My understanding is that the function now always provides the telemetry data.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1676384117},"Uri":"https://github.com/timescale/docs/pull/2022","Title":"Removed outdated get_telemetry_report param","Verbose":1,"GhIssueNumber":2022,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1576462261","CommentCount":8,"Text":"- `interpolated_duration_in`/`duration_in`/`interpolated_state_periods`/`state_periods` have the first two arguments swapped: now the aggregate is first and the state is second\r\n- `into_values`/`into_int_values` now returns a table with intervals instead of microseconds","Date":{"Unix":1675961039},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/699","Title":"state_agg API tweaks","Verbose":1,"GhIssueNumber":699,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1574919579","CommentCount":0,"Text":"Since a few versions ago, `TableIterator`s are used instead of an iterator of tuples for table returning functions. The documentation for `pgx::name!` didn't reflect that change though, this PR fixes it.","Date":{"Unix":1676183302},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/1036","Title":"Fix outdated documentation for `pgx::name!`","Verbose":1,"GhIssueNumber":1036,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1565043007","CommentCount":1,"Text":"# Description\r\n\r\nFor the state/timeline aggregates, the name of the argument for the aggregate is written as `tws` instead of `agg` in a few parts of the documentation. `tws` stands for Time-Weighted Summary, which is not applicable here. I think I copied from the time-weighted average documentation and forgot to change the parameter name.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1675280605},"Uri":"https://github.com/timescale/docs/pull/2000","Title":"Fix argument name for state/timeline functions","Verbose":1,"GhIssueNumber":2000,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1553381519","CommentCount":4,"Text":"- Adds optional `start` and `end` parameters to `duration_in` to only get the duration in the specified range. If `end` is omitted all states after `start` are included. `interpolated_duration_in` now uses these ones as well.\r\n- Renames `state_agg` to `compact_state_agg` and `timeline_agg` to `state_agg`\r\n- Removes mostly unused `next` parameters from interpolated state aggregate functions.\r\n\r\nCloses #687. Related to #691.","Date":{"Unix":1675874510},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/692","Title":"Pre-stabilization changes for state_agg - part 1","Verbose":1,"GhIssueNumber":692,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1550007146","CommentCount":2,"Text":"cargo-pgx doesn't seem to lock it's dependencies, and a dependency it has now requires a newer Rust version. Trying to build the CI image fails now because of that:\r\n```\r\nerror: failed to compile `cargo-pgx v0.6.1`, intermediate artifacts can be found at `/tmp/cargo-install19HcGL`\r\n\r\nCaused by:\r\npackage `clap_lex v0.3.1` cannot be built because it requires rustc 1.64.0 or newer, while the currently active rustc version is 1.63.0\r\n```\r\n\r\nThis PR bumps our minimum Rust version to 1.64.","Date":{"Unix":1674228382},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/688","Title":"Require Rust 1.64 to fix image build","Verbose":1,"GhIssueNumber":688,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1549812181","CommentCount":10,"Text":"pgx assumes it's running on a 64-bit processor in a few places:\r\n- it assumes `long` and `time_t` are always an `i64`\r\n- it assumes `double`s always have a different alignment than `int`s\r\n\r\nThis PR fixes pgx to work on 32-bit systems. I've verified that pgx successfully compiles on `i686-unknown-linux-gnu` with this.","Date":{"Unix":1674708851},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/1014","Title":"Support extensions on i686-unknown-linux-gnu","Verbose":1,"GhIssueNumber":1014,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1535357114","CommentCount":1,"Text":"I noticed a few steps were missing when I was building a filesystem and state file.\r\n\r\nThis PR adds more documentation for copying the filesystem data, updating the `bzimageUrl`, and creating a state file.","Date":{"Unix":1680380509},"Uri":"https://github.com/snaplet/postgres-wasm/pull/44","Title":"Add some missing bits to the documentation","Verbose":1,"GhIssueNumber":44,"GhRepo":"snaplet/postgres-wasm"},
{"Type":"gh-pr","Id":"gh-pr-1529466487","CommentCount":2,"Text":"Builds TimescaleDB from source for the nightly build/test cron job.","Date":{"Unix":1674009081},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/677","Title":"Build TimescaleDB from source in nightly builds","Verbose":1,"GhIssueNumber":677,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1519216838","CommentCount":2,"Text":"This update to the changelog didn't get pushed anywhere due to a release script failure.","Date":{"Unix":1672940582},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/675","Title":"Backport changelog update to main","Verbose":1,"GhIssueNumber":675,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1519084586","CommentCount":2,"Text":"The `patch` Docker image hasn't been successfully built for 8 months, and the job to build it always fails due to an authentication error. Even if it got past that issue, it would still fail since it's still using pgx 0.2.\r\n\r\nThis PR removes the image and the CI job that builds it.\r\n\r\n(originally noted at https://github.com/timescale/timescaledb-toolkit/pull/664#discussion_r1060851336)","Date":{"Unix":1672855497},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/674","Title":"Remove bitrotted patch image","Verbose":1,"GhIssueNumber":674,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1518032559","CommentCount":2,"Text":"I manually made the commit that the release script would have made if it didn't fail to push it.","Date":{"Unix":1672854755},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/673","Title":"add 1.13.1 to upgradeable_from","Verbose":1,"GhIssueNumber":673,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1517747541","CommentCount":2,"Text":"This PR has just the Docker image changes from #664. ([CI run](https://github.com/timescale/release-build-scripts/actions/runs/3831893814))","Date":{"Unix":1672772871},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/670","Title":"Add PG15 support to Docker image","Verbose":1,"GhIssueNumber":670,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1517502117","CommentCount":2,"Text":"Adds an option to manually run the CI using an arbitrary TimescaleDB commit. You can also optionally specify a TimescaleDB repo to test the CI with a fork of TimescaleDB.","Date":{"Unix":1672944943},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/667","Title":"Add option to build TimescaleDB in CI","Verbose":1,"GhIssueNumber":667,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1508124061","CommentCount":2,"Text":"Configures the CI badge on the README to reflect the status of the `main` branch, instead of whatever CI run happens to be the most recent.","Date":{"Unix":1672770530},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/666","Title":"Use `main` branch for CI badge in README","Verbose":1,"GhIssueNumber":666,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1503152771","CommentCount":4,"Text":"Fixes #648.\r\n\r\n- [x] Fix all doctests that call `setseed`\r\n- [x] Fix TimescaleDB crash in CI\r\n- [x] Fix `random` function on pg12/pg13\r\n- [x] Don't try to run upgrade tester on releases without PG15 binaries (currently this is all releases)\r\n\r\nThings to fix in release-build-scripts (these don't block this PR):\r\n- Drop Ubuntu 18.04 support (since TimescaleDB has also dropped support) (https://github.com/timescale/release-build-scripts/pull/94)\r\n- Fix rockylinux 9 error in build scripts (`package curl-minimal-7.76.1-19.el9.x86_64 conflicts with curl provided by curl-7.76.1-19.el9.x86_64`)","Date":{"Unix":1672781057},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/664","Title":"Support running on PostgreSQL 15","Verbose":1,"GhIssueNumber":664,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1499274533","CommentCount":1,"Text":"# Description\r\n\r\nDocuments all of the changes made to `state_agg` and `timeline_agg` (including the new support for integer states and rollup) in TimescaleDB Toolkit 1.13.\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1671555669},"Uri":"https://github.com/timescale/docs/pull/1871","Title":"Document changes to state_agg/timeline_agg in Toolkit 1.13","Verbose":1,"GhIssueNumber":1871,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1495141061","CommentCount":2,"Text":"(currently untested)","Date":{"Unix":1671054260},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/656","Title":"Fix locale issue on Enterprise Linux systems ","Verbose":1,"GhIssueNumber":656,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1495070266","CommentCount":2,"Text":"This would have been pushed to main automatically by the release script, but that failed due to a permissions error.","Date":{"Unix":1671055782},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/655","Title":"Prepare for 1.14 release cycle","Verbose":1,"GhIssueNumber":655,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1492260082","CommentCount":1,"Text":"# Description\r\n\r\nToolkit 1.13 will introduce the `timeline_agg` and `heartbeat_agg` aggregates, which will bring Toolkit to 3 state-related aggregates. This PR makes a new \"state aggregates\" hyperfunction family that initially contains just `state_agg`. Documentation for the `timeline_agg` and `heartbeat_agg` aggregates can be added in later PRs.\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1670874046},"Uri":"https://github.com/timescale/docs/pull/1861","Title":"Split state aggregates to seperate function family","Verbose":1,"GhIssueNumber":1861,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1471410678","CommentCount":8,"Text":null,"Date":{"Unix":1670955395},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/646","Title":"Use pgx 0.6.1 with PostgreSQL 15 support","Verbose":1,"GhIssueNumber":646,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1468936355","CommentCount":3,"Text":"Adds documentation for some implementation details of `rollup`.","Date":{"Unix":1680185210},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/643","Title":"Document rollup internals","Verbose":1,"GhIssueNumber":643,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1468153632","CommentCount":2,"Text":"- Adds `rollup` for `state_agg` and `timeline_agg`.\r\n- Supports integer states for `state_agg` and `timeline_agg`. An aggregate can have integer states or string states, but not both. For a few functions this would mean having two functions with the same argument types but differing return types, so in that case I made a separate function for integer-valued aggregates (e.g. `state_int_timeline`).\r\n\r\nIdeally this should have been two separate PRs, but my changes to `rollup` and the rest of the `state_agg` code have become intertwined.\r\n\r\n(this should be merged after #636)","Date":{"Unix":1670365854},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/640","Title":"Support rollup and integer states state/timeline aggs","Verbose":1,"GhIssueNumber":640,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1467151751","CommentCount":0,"Text":"###### Description of changes\r\nhttps://github.com/jsummers/imageworsener/releases/tag/1.3.5\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- Built on platform(s)\r\n  - [x] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- [ ] For non-Linux: Is `sandbox = true` set in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [x] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [22.11 Release Notes (or backporting 22.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2211-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n  - [ ] (Release notes changes) Ran `nixos/doc/manual/md-to-db.sh` to update generated release notes\r\n- [x] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\n\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n","Date":{"Unix":1669765419},"Uri":"https://github.com/NixOS/nixpkgs/pull/203521","Title":"imageworsener: 1.3.4 -> 1.3.5","Verbose":1,"GhIssueNumber":203521,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1464974748","CommentCount":2,"Text":"Adds a `timeline_agg` aggregate that can be used in the same ways as `state_agg` but also allows getting the entire state timeline with `state_timeline`.\r\n\r\nNote that this PR returns start times and end times instead of `tstzrange`s. pgx 0.6.0 will add support for `tstzrange`s so when that release comes out I'll update the relevant functions to return ranges.\r\n\r\nThis partially addresses #619 (adding `rollup` and supporting integer values will be separate PRs to make them easier to review).","Date":{"Unix":1670365086},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/636","Title":"Add timeline_agg","Verbose":1,"GhIssueNumber":636,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1460373613","CommentCount":2,"Text":"CentOS 7 doesn't support the `C.UTF-8` locale, so cargo-pgx doesn't work on CentOS 7 since it tries to set a databases locale to `C.UTF-8`. Rocky Linux >= 8 does have the `C.UTF-8` locale and works fine.\r\n\r\nThis PR makes pgx fallback to the `C` locale on systems without the `C.UTF-8` locale (according to `locale`, and defaulting to `C` if `locale` fails to run).","Date":{"Unix":1669158100},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/884","Title":"Fallback to C locale on systems without C.UTF-8","Verbose":1,"GhIssueNumber":884,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1450193728","CommentCount":2,"Text":"pgx 0.6.0 will stop supporting the `pgx::Datum` import path. `pg_sys::Datum` works with both the current release and the upcoming 0.6.0 release.\r\n\r\nThis also gets us closer to [using the pgx prelude](https://github.com/timescale/timescaledb-toolkit/issues/586).","Date":{"Unix":1668651357},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/618","Title":"Use pg_sys::Datum instead of pgx::Datum","Verbose":1,"GhIssueNumber":618,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1450175445","CommentCount":2,"Text":"pgx 0.6.0 will make some changes to error handling that will affect how the `map_series` pipeline function works. This PR adds some tests to verify that `map_series` behaves correctly when the mapping function throws an error or returns `NULL`.","Date":{"Unix":1668693881},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/617","Title":"Add tests for errors in map_series mapping function","Verbose":1,"GhIssueNumber":617,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1449923587","CommentCount":2,"Text":"We don't support building with the `pg10` or `pg11` features (trying to build Toolkit for those versions results in a compile error); this PR removes them from the Cargo manifest.\r\n\r\npgx 0.6.0 will remove pg10 support from pgx, so this helps bring us towards upgrading to pgx 0.6.0 once it's released.","Date":{"Unix":1668535258},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/616","Title":"Drop unsupported Postgres versions from Cargo.toml","Verbose":1,"GhIssueNumber":616,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1441180846","CommentCount":0,"Text":"Toolkit 1.12.0 was released today.","Date":{"Unix":1668088691},"Uri":"https://github.com/timescale/timescaledb-docker-ha/pull/325","Title":"Include Toolkit 1.12.0","Verbose":1,"GhIssueNumber":325,"GhRepo":"timescale/timescaledb-docker-ha"},
{"Type":"gh-pr","Id":"gh-pr-1440639325","CommentCount":3,"Text":"Always `panic!` in the `from_datum` implementation for `AnyElement`/`AnyArray` instead of only panicking when debug assertions are enabled.\r\n\r\nThese functions should never be called anyways, so there's no real performance benefit by only panicking in debug mode.","Date":{"Unix":1668023916},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/845","Title":"panic! at the polymorphism failure","Verbose":1,"GhIssueNumber":845,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1438902978","CommentCount":2,"Text":"Makes `M3` and `M4` in the stats-agg crate modules instead of empty structs, which is more idiomatic.","Date":{"Unix":1668019843},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/602","Title":"Make stats_agg::M3/M4 modules instead of structs","Verbose":1,"GhIssueNumber":602,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1433310317","CommentCount":2,"Text":"Makes `stats_agg` use `TwoFloat`s internally for keeping track of the state when in moving-aggregate mode to prevent floating-point error from accumulating. See #595 for some more details.","Date":{"Unix":1667851354},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/599","Title":"Use TwoFloats when using `stats_agg` in moving-aggregate","Verbose":1,"GhIssueNumber":599,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1427452690","CommentCount":2,"Text":"We don't need copy everything into memory owned by Rust anymore, since pgx 0.5.4 fixed the bug that made doing that necessary (https://github.com/tcdi/pgx/pull/784).\r\n\r\nThis reverts commit fe8b3861ee12b1cebedfb32a0c4fce2b9ce508df.\r\n\r\nI didn't add anything to the changelog since this an internal change that doesn't affect end users.","Date":{"Unix":1667235746},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/597","Title":"Revert now unneeded pgx workaround","Verbose":1,"GhIssueNumber":597,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1422715279","CommentCount":2,"Text":"We don't need to replace `CREATE OR REPLACE FUNCTION` with `CREATE FUNCTION` anymore, since pgx now defaults to `CREATE FUNCTION` since 0.5.0. Now we can instead verify that the install script doesn't contain any function replacements.","Date":{"Unix":1666962138},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/594","Title":"Verify that pgx doesn't generate CREATE OR REPLACE FUNCTION","Verbose":1,"GhIssueNumber":594,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1420940815","CommentCount":5,"Text":"Being able to install Toolkit with optimizations enabled is useful for benchmarking purposes. This PR adds an option to build in release mode to the build script.","Date":{"Unix":1666703782},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/592","Title":"Add build script option to install in release mode","Verbose":1,"GhIssueNumber":592,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1408358626","CommentCount":2,"Text":"Based on [how pgx does caching](https://github.com/tcdi/pgx/blob/b92c60974c203e07e05cf1320581084be20a8e8a/.github/workflows/tests.yml#L103), compute GitHub Actions cache keys based on the hash of lockfile and workflow file. Now we don't need to bump the versions manually every release.\r\n\r\nNote that `restore-keys` will look for the most recent matching cache with the same prefix if there are no exact matches, so a cache will be available even on commits that update the lockfile/workflow file.","Date":{"Unix":1665761925},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/576","Title":"Make Actions cache keys update automatically","Verbose":1,"GhIssueNumber":576,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1406381231","CommentCount":2,"Text":"The default unit for `interpolated_intgeral` is mentioned in the documentation but doesn't actually work. This PR adds the expected default value (`'second'`, the same as for `integral`).","Date":{"Unix":1666097273},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/574","Title":"Add default unit to interpolated_integral","Verbose":1,"GhIssueNumber":574,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1401693120","CommentCount":2,"Text":"pgx 0.5.0 just released! This PR updates the CI to have pgx 0.5.0 and adds pgx 0.5.0 to the `$PATH` instead of pgx 0.4.5.\r\n\r\nThis PR should be merged right before merging #547 so that the CI can pass on that PR before merging it.","Date":{"Unix":1666025576},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/571","Title":"Update Docker image for pgx 0.5.0","Verbose":1,"GhIssueNumber":571,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1401337161","CommentCount":2,"Text":"bullseye is Debian 11; buster is Debian 10. We're on the latest Debian release. See https://github.com/timescale/timescaledb-toolkit/pull/552#discussion_r989113244.","Date":{"Unix":1665166652},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/569","Title":"Remove incorrect comment in Dockerfile","Verbose":1,"GhIssueNumber":569,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1400175107","CommentCount":2,"Text":"Fixes #691 by setting the locale to `C.UTF-8` when creating databases.\r\n\r\nOn macOS the `C.UTF-8` locale doesn't exist so the locale is set to `C` and the `CTYPE` to `UTF-8`, which has the same effect as setting the locale to `C.UTF-8` on other operating systems.\r\n\r\nNote that testing this requires creating a new database cluster. I tested this by:\r\n- reinstalling cargo-pgx\r\n- deleting `~/.pgx`\r\n- rerunning `cargo pgx init` to get a new database cluster\r\n- cleaning the target directory of any repos you want to test this on","Date":{"Unix":1666386752},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/746","Title":"Set locale to C.UTF-8 when creating database clusters","Verbose":1,"GhIssueNumber":746,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1397822323","CommentCount":8,"Text":"This fixes #735 by passing the type of an argument when getting an argument.","Date":{"Unix":1665106552},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/740","Title":"Include type when getting argument","Verbose":1,"GhIssueNumber":740,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1396606871","CommentCount":2,"Text":"I noticed while working on #547 that we don't have any tests for `SpaceSavingAggregate`s. This PR adds a simple test to verify that the `raw_freq_agg` function will at least run without failing.\r\n\r\nThis test currently fails on #547, which is good since that PR causes a bug that leads to `SpaceSavingAggregate` not working at all.","Date":{"Unix":1665017448},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/559","Title":"Basic test for space saving aggregate serialization","Verbose":1,"GhIssueNumber":559,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1395250426","CommentCount":3,"Text":"Adds support for binary update testing in GitHub Actions. #554 and #556 need to be merged first.","Date":{"Unix":1665185124},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/552","Title":"Binary update testing in CI","Verbose":1,"GhIssueNumber":552,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-2251882849","CommentCount":3,"Text":"This PR is identical to #2577, which was (accidentally?) reverted by @jahooma in d3483dfba19f601a34bd1cfadfe446e48e529f80.","Date":{"Unix":1713490285},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2589","Title":"Say \"for MÃ∂250\" not \"for $MÃ∂250\", again","Verbose":1,"GhIssueNumber":2589,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-2244936456","CommentCount":3,"Text":"There shouldn't be a dollar sign here:\r\n\r\n![Refer a friend for for $MÃ∂250 each!](https://github.com/manifoldmarkets/manifold/assets/10530973/90abab65-1a0f-445f-8980-1ef250848501)\r\n\r\nThe code does `${formatMoney(REFERRAL_AMOUNT)}` as if it was in a format string, but it's actually in a JSX markup expression which doesn't require a `$` there.","Date":{"Unix":1713245670},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2577","Title":"Say \"for MÃ∂250\" not \"for $MÃ∂250\"","Verbose":1,"GhIssueNumber":2577,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-2182874716","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements `console.count` and `console.countReset`.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes\r\n  - WPT also has manual tests for console.count/countReset - `console/console-count-logging-manual.html` passes, and `console/console-countReset-logging-manual.html` fails because of a problem with the test (https://github.com/web-platform-tests/wpt/pull/45072)\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1710672738},"Uri":"https://github.com/servo/servo/pull/31635","Title":"Implement console.count/countReset","Verbose":1,"GhIssueNumber":31635,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2182853698","CommentCount":0,"Text":"The test wasn't resetting the count between blocks of console calls, so a spec-compliant browser would produce output that doesn't match the expectation. Also, it wasn't specifying the label in the \"a label\" test, so it was unintentionally resetting the default count instead of the \"a label\" count.\r\n\r\n(In Firefox, the test outputs \"default: 0\" in the console a lot - this is actually a spec violation.)","Date":{"Unix":1710335050},"Uri":"https://github.com/web-platform-tests/wpt/pull/45072","Title":"Fix `console.countReset` manual test","Verbose":1,"GhIssueNumber":45072,"GhRepo":"web-platform-tests/wpt"},
{"Type":"gh-pr","Id":"gh-pr-2170465276","CommentCount":0,"Text":"Some tests in `html/semantics/scripting-1/the-script-element/module` do `window.addEventListener(\"onunhandledrejection\", unreachable)`, when they should do `window.addEventListener(\"unhandledrejection\", unreachable);` - the event is called `unhandledrejection`, not `onunhandledrejection`.\r\n\r\nThis event handler should never be run when these tests pass, so this change ensures that `unhandledrejection` must not be fired to pass the test.","Date":{"Unix":1709692208},"Uri":"https://github.com/web-platform-tests/wpt/pull/44943","Title":"Name unhandledrejection event correctly","Verbose":1,"GhIssueNumber":44943,"GhRepo":"web-platform-tests/wpt"},
{"Type":"gh-pr","Id":"gh-pr-2170416402","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nFixes a build error when building on NixOS. This build error was introduced by #31465, which changed filterlock without also updating the `vendorTarball` hash in `etc/shell.nix`. (filterlock is not a part of the main Servo workspace (it has its own lockfile and target directory), since it has to be executed before any other Rust code can be compiled on NixOS)\r\n\r\n```\r\n$ nix-shell etc/shell.nix \r\n...\r\nRunning phase: buildPhase\r\nerror: failed to select a version for the requirement `toml = \"^0.8.9\"`\r\ncandidate versions found which didn't match: 0.8.8\r\nlocation searched: directory source `/build/filterlock/vendor` (which is replacing registry `crates-io`)\r\nrequired by package `filterlock v0.1.0 (/build/filterlock)`\r\nperhaps a crate was updated and forgotten to be re-vendored?\r\nAs a reminder, you're using offline mode (--offline) which can sometimes cause surprising resolution failures, if this error is too confusing you may wish to retry without the offline flag.\r\n```\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] These changes do not require tests because none of the Nix configuration is tested in CI\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709704519},"Uri":"https://github.com/servo/servo/pull/31515","Title":"Fix build failure on NixOS","Verbose":1,"GhIssueNumber":31515,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2162464038","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements support for  `<meta http-equiv=\"refresh\" content=\"‚Ä¶; url=‚Ä¶\">` meta tags.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [x] `./mach build -d` does not report any errors\r\n- [x] `./mach test-tidy` does not report any errors\r\n- [x] These changes fix #25082\r\n- [x] There are tests for these changes\r\n\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709282539},"Uri":"https://github.com/servo/servo/pull/31468","Title":"script: Implement `<meta http-equiv=\"refresh\">`","Verbose":1,"GhIssueNumber":31468,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2162432257","CommentCount":3,"Text":"`getContractsCreatedProgress` checks for markets where `data->>uniqueBettorCount` is ‚â•20, but it should be checking `data->uniqueBettorCount`.\r\n\r\n`->>` casts the count to a string, which results in the unique bettor count being lexicographically compared to \"20\", when it should be numerically compared to 20. As a result, the query includes all markets where the first digit of the bettor count is 2 to 9. (e.g. bettor counts of 5 and 50 are included, but 1 and 100 aren't).\r\n\r\ncc @jahooma ","Date":{"Unix":1709258473},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2500","Title":"Compute partner progress for ‚â•20 trader markets correctly","Verbose":1,"GhIssueNumber":2500,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-2160205798","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nFixes the test-tidy output so that it recommends the correct WHATWG URL\r\n```\r\n‚Ä¶use this format instead: https://html.spec.whatwg.org/multipage/#dom-context-2d-shadowoffsetx\r\n```\r\nInstead of a URL containing `b'`\r\n```\r\n‚Ä¶use this format instead: https://html.spec.whatwg.org/multipage/#b'dom-context-2d-shadowoffsetx'\r\n```\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes OR\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709190735},"Uri":"https://github.com/servo/servo/pull/31449","Title":"tidy: Fix WHATWG replacement links","Verbose":1,"GhIssueNumber":31449,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2157928861","CommentCount":5,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements `process_resolved_font_style_query` in layout 2020 to the same extent it's supported by layout 2013, to add support for setting the font of a Canvas2D context.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1709158179},"Uri":"https://github.com/servo/servo/pull/31436","Title":"layout: Add an implementation of `process_resolved_font_style_query` for Layout 2020","Verbose":1,"GhIssueNumber":31436,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2145607222","CommentCount":1,"Text":"<!-- üôå Thanks for contributing to MDN Web Docs. Adding details below will help us to merge your PR faster. -->\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è Summarize your changes in one or two sentences -->\r\nUpdates the page for `window.blur()` to reflect that it does nothing - [according to the spec](https://html.spec.whatwg.org/#dom-window-blur):\r\n\r\n> The `blur()` method steps are to do nothing.\r\n\r\n### Motivation\r\n\r\n<!-- ‚ùì Why are you making these changes and how do they help readers? -->\r\nThis helps readers who may be confused as to why `blur()` doesn't work.\r\n\r\n### Additional details\r\n\r\n<!-- üîó Link to release notes, vendor docs, bug trackers, source control, or other places providing more context -->\r\n- [Chromium's no-op `blur()` implementation](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/dom_window.cc;l=588;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090)\r\n- [Mozilla's check for if `blur()` should be allowed](https://github.com/mozilla/gecko-dev/blob/c26f7461fc2a51196b7f517c7f98a1e271dc9ec0/docshell/base/BrowsingContext.cpp#L2337) (only for browser chrome and when `dom.disable_window_flip` is off)\r\n\r\n\r\n<!-- üî® If this fully resolves a GitHub issue, use \"Fixes #123\" -->\r\n<!-- üëâ Highlight related pull requests using \"Relates to #123\" -->\r\n<!-- ‚ùó If another pull request should be merged first, use \"**Depends on:** #123\" -->\r\n\r\n\r\n<!-- üë∑‚Äç‚ôÄÔ∏è After submitting, go to the \"Checks\" tab of your PR for the build status -->\r\n","Date":{"Unix":1708506002},"Uri":"https://github.com/mdn/content/pull/32374","Title":"Update window.blur() to reflect that it does nothing","Verbose":1,"GhIssueNumber":32374,"GhRepo":"mdn/content"},
{"Type":"gh-pr","Id":"gh-pr-2145578590","CommentCount":0,"Text":"Some types in this crate don't have Debug implemented, but it's annoying\nto use a non-Debug type in a struct with Debug derived. I just used the\nautomatic impl from `#[derive(Debug)]` for all of these (although in the\nfuture it might be good to have custom implementations for types with\ncomplex internals).\n\nCloses #95.","Date":{"Unix":1708482704},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/131","Title":"Implement Debug on all public structs","Verbose":1,"GhIssueNumber":131,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-2145516888","CommentCount":0,"Text":"# Motivation\r\n<!-- Briefly explain what the change is about and why it is desirable. -->\r\nSpecify how many channels were unpacked in the `nix-channel` output. E.g.\r\n```sh\r\n$ nix-channel --update\r\nunpacking 1 channels...\r\n```\r\n\r\n# Context\r\n<!-- Provide context. Reference open issues if available. -->\r\n\r\n<!-- Non-trivial change: Briefly outline the implementation strategy. -->\r\nSometimes `nix-channel` doesn't expect the number of channels I expect (e.g. when I forget to run it with `sudo`). Specifying the number of channels created helps verify if `nix-channel --update` did what I expected.\r\n<!-- Invasive change: Discuss alternative designs or approaches you considered. -->\r\n\r\n<!-- Large change: Provide instructions to reviewers how to read the diff. -->\r\n\r\n# Priorities and Process\r\n\r\nAdd :+1: to [pull requests you find important](https://github.com/NixOS/nix/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc).\r\n\r\nThe Nix maintainer team uses a [GitHub project board](https://github.com/orgs/NixOS/projects/19) to [schedule and track reviews](https://github.com/NixOS/nix/tree/master/maintainers#project-board-protocol). \r\n","Date":{"Unix":1708514637},"Uri":"https://github.com/NixOS/nix/pull/10054","Title":"Say how many channels were unpacked in nix-channel","Verbose":1,"GhIssueNumber":10054,"GhRepo":"NixOS/nix"},
{"Type":"gh-pr","Id":"gh-pr-2137792566","CommentCount":11,"Text":"Adds basic support for `AbortController`/`AbortSignal`, and implements the `signal` parameter to `addEventListener` to support cancelling event listeners with `AbortSignal`.\r\n\r\nThis PR doesn't implement  `AbortSignal`  dependent signals or fetch cancellation.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [x] `./mach build -d` does not report any errors\r\n- [x] `./mach test-tidy` does not report any errors\r\n- [x] There are tests for these changes\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1714838537},"Uri":"https://github.com/servo/servo/pull/31361","Title":"script: implement AbortController","Verbose":1,"GhIssueNumber":31361,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2128787049","CommentCount":0,"Text":"This fixes a warning from Cargo about relying on deprecated behavior:\n```\nwarning: /home/loops/src/servo/servo/components/script/Cargo.toml: dependency (num_cpus) specified without providing a local path, Git repository, version, or workspace dependency to use. This will be considered an error in future versions\nwarning: /home/loops/src/servo/servo/components/config/Cargo.toml: dependency (num_cpus) specified without providing a local path, Git repository, version, or workspace dependency to use. This will be considered an error in future versions\n```\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [X] `./mach build -d` does not report any errors\n- [X] `./mach test-tidy` does not report any errors\n- [X] These changes do not require tests because there isn't a way to test this, since Cargo doesn't support promoting warnings from Cargo itself into errors\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707647435},"Uri":"https://github.com/servo/servo/pull/31310","Title":"Cargo.toml: explictly specify num_cpus version","Verbose":1,"GhIssueNumber":31310,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2126418915","CommentCount":0,"Text":"There are [a few places in Servo](https://github.com/search?q=repo%3Aservo%2Fservo%20asbits_&type=code) where we need to check if two structs from mozjs-sys are equal, but since Bindgen doesn't automatically derive `PartialEq` by default, the code has to compare the inner `asBits_` field.\r\n\r\nThis PR tells Bindgen to automatically derive `PartialEq` where possible, to allow making such code simpler.","Date":{"Unix":1707463307},"Uri":"https://github.com/servo/mozjs/pull/451","Title":"Derive `PartialEq` in `mozjs-sys` ","Verbose":1,"GhIssueNumber":451,"GhRepo":"servo/mozjs"},
{"Type":"gh-pr","Id":"gh-pr-2121745906","CommentCount":0,"Text":"The documentation on `unicode-rs.github.io` hasn't been updated in three\nyears (since Travis CI stopped working), and docs.rs works fine for this\ncrate.","Date":{"Unix":1707258529},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/130","Title":"Remove outdated documentation link in Cargo.toml","Verbose":1,"GhIssueNumber":130,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-2119648704","CommentCount":0,"Text":"Implements [`navigator.hardwareConcurrency`](https://html.spec.whatwg.org/multipage/#dom-navigator-hardwareconcurrency), which returns the number of logical processors available.\n\nI used the `num_cpus` library (which is already used by Servo in other places), and cache the result since it can be slow to query that information on some operating systems.\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [x] `./mach build -d` does not report any errors\n- [x] `./mach test-tidy` does not report any errors\n- [x] There are tests for these changes\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707338892},"Uri":"https://github.com/servo/servo/pull/31268","Title":"script: implement navigator.hardwareConcurrency","Verbose":1,"GhIssueNumber":31268,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2119219878","CommentCount":1,"Text":"<!-- Please describe your changes on the following line: -->\nI checked for very deep objects in when adding object logging support in #31241, but didn't check for objects with many elements (usually large arrays). This caused crashes with code like `console.log(new Array(10000000).fill(\"x\"))`.\n\nThis PR fixes that by only logging the first 15 elements of objects.\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [X] `./mach build -d` does not report any errors\n- [X] `./mach test-tidy` does not report any errors\n- [X] There are tests for these changes\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707213940},"Uri":"https://github.com/servo/servo/pull/31267","Title":"Fix crash on console logging large array","Verbose":1,"GhIssueNumber":31267,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2117489303","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\nConverts  `etc/profilicate.py` (a script for processing raw profiler samples) from Python 2 to Python 3, to make it easier to run on modern systems. I used `2to3`, then removed unnecessary double brackets and updated the shebang.\n\n---\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\n- [X] `./mach build -d` does not report any errors\n- [X] `./mach test-tidy` does not report any errors\n- [ ] These changes fix #___ (GitHub issue number if applicable)\n- [X] These changes do not require tests because it is a testing script\n\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\n\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\n","Date":{"Unix":1707117100},"Uri":"https://github.com/servo/servo/pull/31259","Title":"Convert etc/profilicate.py to Python 3","Verbose":1,"GhIssueNumber":31259,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2117407778","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nImplements [`.reset()`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/reset) for `CanvasRenderingContext2D`, which resets the rendering context to its default state. There is already logic for resetting the rendering context for when the width/height is changed, so the implementation is similar.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [x] `./mach build -d` does not report any errors\r\n- [x] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes (already in WPT)\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1707126947},"Uri":"https://github.com/servo/servo/pull/31258","Title":"canvas2d: Implement `.reset()`","Verbose":1,"GhIssueNumber":31258,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2115885686","CommentCount":0,"Text":"<!-- Please describe your changes on the following line: -->\r\nThe `HTMLImageElement.prototype.width/height` attributes [should provide](https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-width) the rendered width/height of images that are being rendered, and the natural width/height of images that are not being rendered. In Servo, these attributes call `bounding_content_box` on the node, treating `None` as an indication that the element is not being rendered (and returning the natural width/height). But Layout 2020 returns a 0x0 bounding box for elements that are not being rendered, instead of `None`.\r\n\r\nAs a result:\r\n```js\r\nlet image = new Image();\r\nimage.src = \"...\";\r\nimage.onload = () => {\r\n    const [width, height] = [image.width, image.height];\r\n    // use width/height\r\n};\r\n```\r\nalways gets 0/0 for the width/height (instead of the natural width/height) in Layout 2020.\r\n\r\nThis PR makes it so requests to Layout 2020 for the bounding box of a node that isn't being rendered return `None` instead of a 0x0 bounding box, which matches the Layout 2013 behavior.\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] There are tests for these changes (which already exist in WPT)\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1706919985},"Uri":"https://github.com/servo/servo/pull/31253","Title":"layout: return None bounding box when no nodes found","Verbose":1,"GhIssueNumber":31253,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2111501630","CommentCount":5,"Text":"<!-- Please describe your changes on the following line: -->\r\nMatch the [Console spec](https://console.spec.whatwg.org/) by having the console methods take `any` instead of a string. This fixes #29460, where `console.log(Symbol())` throws because Symbols can't be implicitly converted to a string.\r\n\r\nI used `JS_ValueToSource` to convert all JS values to strings. This change results in better logging for objects (`({a:{b:{c:5, d:new Number(3), e:new Boolean(false), g:4324324423432423423423n, h:3.333, i:(void 0)}}})` instead of `[object Object]`).\r\n\r\n---\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [X] `./mach test-tidy` does not report any errors\r\n- [X] These changes fix #29460\r\n\r\n<!-- Either: -->\r\n- [X] There are tests for these changes OR\r\n- [ ] These changes do not require tests because ___\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->","Date":{"Unix":1707147851},"Uri":"https://github.com/servo/servo/pull/31241","Title":"Make console methods take `any` instead of `string`","Verbose":1,"GhIssueNumber":31241,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2109120389","CommentCount":2,"Text":"<!-- Please describe your changes on the following line: -->\r\nI want to build Servo on NixOS, without installing the non-free Android SDK. This PR makes it so Android support is only built if the `buildAndroid` argument is true (e.g. by running `nix-shell --arg buildAndroid true etc/shell.nix`)\r\n\r\nI've verified that you can still build/run non-Android Servo with this change, but I haven't tested on Android (it should still work though, since the derivation is unaffected by this change when `buildAndroid` is true).\r\n\r\n---\r\n\r\n<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->\r\n- [X] `./mach build -d` does not report any errors\r\n- [ ] `./mach test-tidy` does not report any errors - it reports a diff in `components/config/prefs.rs`, which this PR didn't change (I think #31223 caused this by adding a trailing space?)\r\n- [ ] These changes fix #___ (GitHub issue number if applicable)\r\n\r\n<!-- Either: -->\r\n- [ ] There are tests for these changes OR\r\n- [X] These changes do not require tests because the Nix configuration doesn't have tests\r\n\r\n<!-- Also, please make sure that \"Allow edits from maintainers\" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->\r\n\r\n<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->\r\n","Date":{"Unix":1706843687},"Uri":"https://github.com/servo/servo/pull/31231","Title":"Make Android build optional on Nix","Verbose":1,"GhIssueNumber":31231,"GhRepo":"servo/servo"},
{"Type":"gh-pr","Id":"gh-pr-2106615108","CommentCount":0,"Text":"`BoxMeUp::box_me_up` was renamed to `take_box` in https://github.com/rust-lang/rust/pull/66766, and `BoxMeUp` was renamed to `PanicPayload` in https://github.com/rust-lang/rust/pull/116008. Updates the panic implementation docs to reflect that.","Date":{"Unix":1706608603},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1878","Title":"Update uses of renamed BoxMeUp to PanicPayload","Verbose":1,"GhIssueNumber":1878,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-2034202430","CommentCount":2,"Text":"## Description of changes\r\n\r\nAudioTube depends on the Purpose library, and fails to launch if Purpose is not in the environment. This PR fixes that by adding `kpurpose` as a build dependency.\r\n\r\nCloses #228179.\r\n\r\n## Things done\r\n\r\n- Built on platform(s)\r\n  - [X] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- For non-Linux: Is sandboxing enabled in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n  - [ ] `sandbox = relaxed`\r\n  - [ ] `sandbox = true`\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [X] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [24.05 Release Notes](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md) (or backporting [23.05](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md) and [23.11](https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md) Release notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n- [X] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\n\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n---\r\n\r\nAdd a :+1: [reaction] to [pull requests you find important].\r\n\r\n[reaction]: https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\r\n[pull requests you find important]: https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\r\n","Date":{"Unix":1707146863},"Uri":"https://github.com/NixOS/nixpkgs/pull/273263","Title":"libsForQt515.audiotube: depend on kpurpose","Verbose":1,"GhIssueNumber":273263,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1970934573","CommentCount":1,"Text":"Updates the TimescaleDB Toolkit formula to use Toolkit 1.17.0 and PG15. Also updates pgrx (renamed from pgx) to the latest version so it can build properly.\r\n\r\nCloses #41 #39.","Date":{"Unix":1699017678},"Uri":"https://github.com/timescale/homebrew-tap/pull/42","Title":"Update Toolkit formula","Verbose":1,"GhIssueNumber":42,"GhRepo":"timescale/homebrew-tap"},
{"Type":"gh-pr","Id":"gh-pr-1964677578","CommentCount":3,"Text":null,"Date":{"Unix":1698376002},"Uri":"https://github.com/manifoldmarkets/manifold/pull/2117","Title":"Mark my bot as a bot","Verbose":1,"GhIssueNumber":2117,"GhRepo":"manifoldmarkets/manifold"},
{"Type":"gh-pr","Id":"gh-pr-1909546798","CommentCount":1,"Text":"Adds Unicode 15.1 support.\r\n\r\n## Updating tests\r\n\r\nTurns out `scripts/unicode_gen_breaktests.py` was last run for Unicode 11 - every subsequent updater forgot to run it. I updated the GitHub Action that checks `scripts/unicode.py` was run to also check for `scripts/unicode_gen_breaktests.py` being run.\r\n\r\n### Devanagari mis-segmentation\r\n\r\nThere are a few cases where Devanagari grapheme segmentation fails after updating the test data from Unicode 11 to Unicode 15. I just skipped those failing tests for now.","Date":{"Unix":1695673921},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/124","Title":"Support Unicode 15.1","Verbose":1,"GhIssueNumber":124,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-1803472359","CommentCount":4,"Text":"Implements the \"items do not inherit unsafety from separate enclosing items\" note from the MIR unsafety checker in the THIR unsafety checker (`-Z thir-unsafeck`) to maintain parity between the two unsafety checkers. The logic to find the separate enclosing item is nearly the same as in the MIR unsafety checker.","Date":{"Unix":1689453101},"Uri":"https://github.com/rust-lang/rust/pull/113663","Title":"Implement \"items do not inherit unsafety\" note for THIR unsafeck","Verbose":1,"GhIssueNumber":113663,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-1788272716","CommentCount":11,"Text":"Fixes #11099 \r\nFixes #11064 \r\n\r\nI'm running into #11099 (cc @y21) on my Rust codebase. Clippy ICEs on this code when evaluating the `unnecessary_literal_unwrap` lint:\r\n```rust\r\nfn main() {\r\n    let val1: u8 = None.unwrap_or_default();\r\n}\r\n```\r\n\r\nThis fixes that ICE and adds an message specifically for that case:\r\n\r\n```\r\nerror: used `unwrap_or_default()` on `None` value\r\n  --> $DIR/unnecessary_literal_unwrap.rs:26:5\r\n   |\r\nLL |     None::<String>.unwrap_or_default();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove the `None` and `unwrap_or_default()`: `String::default()`\r\n```\r\n\r\nThis PR also fixes the same ICE with `None.unwrap_or_else` (by giving the generic error message for the lint in that case).\r\n\r\nchangelog: Fix ICE in `unnecessary_literal_unwrap` on `None.unwrap_or_default()`\r\n","Date":{"Unix":1689851290},"Uri":"https://github.com/rust-lang/rust-clippy/pull/11106","Title":"[`unnecessary_literal_unwrap`]: Fix ICE on None.unwrap_or_default()","Verbose":1,"GhIssueNumber":11106,"GhRepo":"rust-lang/rust-clippy"},
{"Type":"gh-pr","Id":"gh-pr-1759309820","CommentCount":2,"Text":null,"Date":{"Unix":1688660779},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/762","Title":"Update to pgrx 0.9.7","Verbose":1,"GhIssueNumber":762,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1675800256","CommentCount":0,"Text":"pgx [was renamed to pgrx](https://github.com/tcdi/pgrx/issues/1106) recently. Even though the tar.gz file for the older version has the same contents, the top level directory name is now `pgrx-0.7.1`, so the hash is different. This PR updates the hash to be correct.\r\n\r\nFixes https://github.com/timescale/timescaledb-toolkit/issues/757.","Date":{"Unix":1682352054},"Uri":"https://github.com/timescale/homebrew-tap/pull/38","Title":"Fix hash change caused by pgrx rename","Verbose":1,"GhIssueNumber":38,"GhRepo":"timescale/homebrew-tap"},
{"Type":"gh-pr","Id":"gh-pr-1671976691","CommentCount":1,"Text":"Some links to zombodb/pgx got replaced with zombodb/pgrx, which GitHub doesn't redirect here. This fixes them by updating those links to tcdi/pgrx. ","Date":{"Unix":1681766047},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/1109","Title":"Fix broken links to zombodb/pgrx","Verbose":1,"GhIssueNumber":1109,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1657713821","CommentCount":1,"Text":"# Description\r\n\r\nWe stabilized the three date utility functions in Toolkit 1.16. We forgot to document `to_epoch` when it was added, so this PR also documents that function.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/about/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\n\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n*   [ ] Is the content technically accurate?\r\n*   [ ] Is the content complete?\r\n*   [ ] Is the content presented in a logical order?\r\n*   [ ] Does the content use appropriate names for features and products?\r\n*   [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n*   [ ] Is the content free from typos?\r\n*   [ ] Does the content use plain English?\r\n*   [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n*   [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n*   [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n*   [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1681220192},"Uri":"https://github.com/timescale/docs/pull/2245","Title":"Document date utility stabilization in Toolkit 1.16","Verbose":1,"GhIssueNumber":2245,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1657710089","CommentCount":1,"Text":"# Description\r\n\r\nmin_n/max_n/min_n_by/max_n_by were stabilized in Toolkit 1.16.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/about/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\n\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n*   [ ] Is the content technically accurate?\r\n*   [ ] Is the content complete?\r\n*   [ ] Is the content presented in a logical order?\r\n*   [ ] Does the content use appropriate names for features and products?\r\n*   [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n*   [ ] Is the content free from typos?\r\n*   [ ] Does the content use plain English?\r\n*   [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n*   [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n*   [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n*   [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1681226583},"Uri":"https://github.com/timescale/docs/pull/2244","Title":"Document min_n/max_n stabilization in Toolkit 1.16","Verbose":1,"GhIssueNumber":2244,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1652249604","CommentCount":2,"Text":"Note that I didn't add arrow accessors for `into_values` for `min_n_by`/`max_n_by` since those functions take dummy `NULL`s.","Date":{"Unix":1680711698},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/751","Title":"Stabilize nmost functions","Verbose":1,"GhIssueNumber":751,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1646567861","CommentCount":2,"Text":"Stabilize three date utilities. Also locks down the search path for them (and inlines a call to `days_in_month` so that it can use a locked-down schema).","Date":{"Unix":1680636528},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/745","Title":"Stabilize date utilities","Verbose":1,"GhIssueNumber":745,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1644819900","CommentCount":2,"Text":"Trying to build TimescaleDB with RHEL/Rocky Linux in the nightly CI job doesn't work currently. This disables it for now.","Date":{"Unix":1680121389},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/744","Title":"Don't try building TSDB with Enterprise Linux on nightly CI builds","Verbose":1,"GhIssueNumber":744,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1634569757","CommentCount":1,"Text":"# Description\r\n\r\n`timezone` is the third argument to `time_bucket_gapfill`, not the last. \r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1679494569},"Uri":"https://github.com/timescale/docs/pull/2168","Title":"Fix argument order for time_bucket_gapfill","Verbose":1,"GhIssueNumber":2168,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1626511489","CommentCount":2,"Text":"Recent versions of clangd store cached data in the `.cache` directory instead of `.clangd`; this PR makes the new directory ignored by Git in addition to the old one.\r\n\r\nDisable-check: force-changelog-changed","Date":{"Unix":1679076806},"Uri":"https://github.com/timescale/timescaledb/pull/5451","Title":"Add new clangd cache location to gitignore","Verbose":1,"GhIssueNumber":5451,"GhRepo":"timescale/timescaledb"},
{"Type":"gh-pr","Id":"gh-pr-1621975017","CommentCount":1,"Text":"# Description\r\n\r\n- Fixes references to \"averages\" with correct references to \"integrals\"\r\n- Better indicate `integral`'s `unit` parameter is optional\r\n- Add `unit` to list of optional parameters for `interpolated_integral`\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1678768558},"Uri":"https://github.com/timescale/docs/pull/2128","Title":"Improve integral docs","Verbose":1,"GhIssueNumber":2128,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1621751646","CommentCount":2,"Text":"It turns out that bors interprets \"Test Postgres (%)\" as requiring at least one job to pass matching that, instead of all of them. ","Date":{"Unix":1678801795},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/736","Title":"Require all CI jobs to pass, not one","Verbose":1,"GhIssueNumber":736,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1615917534","CommentCount":2,"Text":"Makes it so automated issues and PRs from the release script come from github-actions[bot] instead of an actual user account, to make it clear that those issues and PRs were not made by a human.","Date":{"Unix":1679343405},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/730","Title":"Use github-actions[bot] for automated issues and PRs","Verbose":1,"GhIssueNumber":730,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1615781805","CommentCount":2,"Text":null,"Date":{"Unix":1678303475},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/726","Title":"Changelog updates for 1.15","Verbose":1,"GhIssueNumber":726,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1615501347","CommentCount":2,"Text":"# Description\r\n\r\nDocuments changes to `state_agg` in Toolkit 1.15:\r\n- `state_agg` was stabilized\r\n- `interpolated_state_int_timeline` function was renamed\r\n- `state_at` and `state_at_int` functions were added\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1678381566},"Uri":"https://github.com/timescale/docs/pull/2110","Title":"Document changes to state_agg in Toolkit 1.15","Verbose":1,"GhIssueNumber":2110,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1608858157","CommentCount":4,"Text":"Adds support for CI testing on all platforms we build packages for.","Date":{"Unix":1678460146},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/725","Title":"Test on more CI platforms","Verbose":1,"GhIssueNumber":725,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1605454802","CommentCount":2,"Text":"Closes #691.","Date":{"Unix":1678147837},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/723","Title":"Stabilize state aggregate","Verbose":1,"GhIssueNumber":723,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1599181228","CommentCount":1,"Text":"# Description\r\n\r\nFixes the name of the `state_int_timeline` function ‚Äì it was written in the docs as `state_int_state`.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1677452671},"Uri":"https://github.com/timescale/docs/pull/2072","Title":"Fix state_int_timeline name","Verbose":1,"GhIssueNumber":2072,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1593610738","CommentCount":2,"Text":"This PR should fix out-of-bounds indexing in `rollup`:\r\n- before, `last_state` in the merged aggregate was computed incorrectly; it is now determined correctly\r\n- merging aggregates now sorts them first\r\n\r\nIt also improves the various error messages that could arise when using rollup.","Date":{"Unix":1677255157},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/715","Title":"Fix errors in state_agg rollup","Verbose":1,"GhIssueNumber":715,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1589621481","CommentCount":2,"Text":"Makes it so bors ensures PG15 tests pass before merging PRs.","Date":{"Unix":1677027784},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/713","Title":"Tell bors about Postgres 15 tests","Verbose":1,"GhIssueNumber":713,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1586178879","CommentCount":2,"Text":"Adds the `powertools`/`crb` repository to the Enterprise Linux images so that PostgreSQL can be installed again.\r\n\r\nIt seems that the official PostgreSQL RPMs have dependencies in the CRB (PowerTools before RL9) repository. This PR enables that repository before trying to install anything. With this PR, the CI image for RL8/9 [now builds successfully again](https://github.com/timescale/release-build-scripts/actions/runs/4185934031).\r\n\r\nFixes #711.","Date":{"Unix":1677028582},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/712","Title":"Fix image build failures on Rocky Linux","Verbose":1,"GhIssueNumber":712,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1584869535","CommentCount":2,"Text":"Runs the CI image building action on PRs that modify `tools/dependencies.sh`, since that file impacts the Docker image. We already do this for the files in `docker/ci` and the build action itself.","Date":{"Unix":1676587732},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/710","Title":"Build CI image on PRs modifying dependencies","Verbose":1,"GhIssueNumber":710,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1584857008","CommentCount":3,"Text":"Upgrades our pgx version from 0.6.1 to 0.7.1.","Date":{"Unix":1676575313},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/709","Title":"Upgrade pgx to 0.7.1","Verbose":1,"GhIssueNumber":709,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1584315512","CommentCount":1,"Text":"# Description\r\n\r\nDocuments the changes to `state_agg` in [Toolkit 1.14](https://github.com/timescale/timescaledb-toolkit/releases/tag/1.14.0):\r\n- Renamed `state_agg` ‚Üí `compact_state_agg`; renamed `timeline_agg` ‚Üí `state_agg`\r\n- Removed `next` parameter from all interpolated state_agg functions\r\n- Added `next` and `interval` parameters to `duration_in`\r\n- Swapped arguments to `{interpolated_,}{duration_in,state_periods}` so that the aggregate is always first and the state is always second\r\n- Made `into_[int_]values` return `INTERVAL`s instead of a `BIGINT` representing the number of microseconds in the state\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1676512575},"Uri":"https://github.com/timescale/docs/pull/2037","Title":"Document state_agg changes in Toolkit 1.14","Verbose":1,"GhIssueNumber":2037,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1578505730","CommentCount":4,"Text":"(from the release script)","Date":{"Unix":1676048717},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/706","Title":"Start 1.15.0-dev","Verbose":1,"GhIssueNumber":706,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1578373349","CommentCount":1,"Text":"# Description\r\n\r\nFor `get_telemetry_report`, the `always_display_report` parameter was removed in 2.6.0. My understanding is that the function now always provides the telemetry data.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1676384117},"Uri":"https://github.com/timescale/docs/pull/2022","Title":"Removed outdated get_telemetry_report param","Verbose":1,"GhIssueNumber":2022,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1576462261","CommentCount":8,"Text":"- `interpolated_duration_in`/`duration_in`/`interpolated_state_periods`/`state_periods` have the first two arguments swapped: now the aggregate is first and the state is second\r\n- `into_values`/`into_int_values` now returns a table with intervals instead of microseconds","Date":{"Unix":1675961039},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/699","Title":"state_agg API tweaks","Verbose":1,"GhIssueNumber":699,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1574919579","CommentCount":0,"Text":"Since a few versions ago, `TableIterator`s are used instead of an iterator of tuples for table returning functions. The documentation for `pgx::name!` didn't reflect that change though, this PR fixes it.","Date":{"Unix":1676183302},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/1036","Title":"Fix outdated documentation for `pgx::name!`","Verbose":1,"GhIssueNumber":1036,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1565043007","CommentCount":1,"Text":"# Description\r\n\r\nFor the state/timeline aggregates, the name of the argument for the aggregate is written as `tws` instead of `agg` in a few parts of the documentation. `tws` stands for Time-Weighted Summary, which is not applicable here. I think I copied from the time-weighted average documentation and forgot to change the parameter name.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1675280605},"Uri":"https://github.com/timescale/docs/pull/2000","Title":"Fix argument name for state/timeline functions","Verbose":1,"GhIssueNumber":2000,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1553381519","CommentCount":4,"Text":"- Adds optional `start` and `end` parameters to `duration_in` to only get the duration in the specified range. If `end` is omitted all states after `start` are included. `interpolated_duration_in` now uses these ones as well.\r\n- Renames `state_agg` to `compact_state_agg` and `timeline_agg` to `state_agg`\r\n- Removes mostly unused `next` parameters from interpolated state aggregate functions.\r\n\r\nCloses #687. Related to #691.","Date":{"Unix":1675874510},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/692","Title":"Pre-stabilization changes for state_agg - part 1","Verbose":1,"GhIssueNumber":692,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1550007146","CommentCount":2,"Text":"cargo-pgx doesn't seem to lock it's dependencies, and a dependency it has now requires a newer Rust version. Trying to build the CI image fails now because of that:\r\n```\r\nerror: failed to compile `cargo-pgx v0.6.1`, intermediate artifacts can be found at `/tmp/cargo-install19HcGL`\r\n\r\nCaused by:\r\npackage `clap_lex v0.3.1` cannot be built because it requires rustc 1.64.0 or newer, while the currently active rustc version is 1.63.0\r\n```\r\n\r\nThis PR bumps our minimum Rust version to 1.64.","Date":{"Unix":1674228382},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/688","Title":"Require Rust 1.64 to fix image build","Verbose":1,"GhIssueNumber":688,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1549812181","CommentCount":10,"Text":"pgx assumes it's running on a 64-bit processor in a few places:\r\n- it assumes `long` and `time_t` are always an `i64`\r\n- it assumes `double`s always have a different alignment than `int`s\r\n\r\nThis PR fixes pgx to work on 32-bit systems. I've verified that pgx successfully compiles on `i686-unknown-linux-gnu` with this.","Date":{"Unix":1674708851},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/1014","Title":"Support extensions on i686-unknown-linux-gnu","Verbose":1,"GhIssueNumber":1014,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1535357114","CommentCount":1,"Text":"I noticed a few steps were missing when I was building a filesystem and state file.\r\n\r\nThis PR adds more documentation for copying the filesystem data, updating the `bzimageUrl`, and creating a state file.","Date":{"Unix":1680380509},"Uri":"https://github.com/snaplet/postgres-wasm/pull/44","Title":"Add some missing bits to the documentation","Verbose":1,"GhIssueNumber":44,"GhRepo":"snaplet/postgres-wasm"},
{"Type":"gh-pr","Id":"gh-pr-1529466487","CommentCount":2,"Text":"Builds TimescaleDB from source for the nightly build/test cron job.","Date":{"Unix":1674009081},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/677","Title":"Build TimescaleDB from source in nightly builds","Verbose":1,"GhIssueNumber":677,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1519216838","CommentCount":2,"Text":"This update to the changelog didn't get pushed anywhere due to a release script failure.","Date":{"Unix":1672940582},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/675","Title":"Backport changelog update to main","Verbose":1,"GhIssueNumber":675,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1519084586","CommentCount":2,"Text":"The `patch` Docker image hasn't been successfully built for 8 months, and the job to build it always fails due to an authentication error. Even if it got past that issue, it would still fail since it's still using pgx 0.2.\r\n\r\nThis PR removes the image and the CI job that builds it.\r\n\r\n(originally noted at https://github.com/timescale/timescaledb-toolkit/pull/664#discussion_r1060851336)","Date":{"Unix":1672855497},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/674","Title":"Remove bitrotted patch image","Verbose":1,"GhIssueNumber":674,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1518032559","CommentCount":2,"Text":"I manually made the commit that the release script would have made if it didn't fail to push it.","Date":{"Unix":1672854755},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/673","Title":"add 1.13.1 to upgradeable_from","Verbose":1,"GhIssueNumber":673,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1517747541","CommentCount":2,"Text":"This PR has just the Docker image changes from #664. ([CI run](https://github.com/timescale/release-build-scripts/actions/runs/3831893814))","Date":{"Unix":1672772871},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/670","Title":"Add PG15 support to Docker image","Verbose":1,"GhIssueNumber":670,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1517502117","CommentCount":2,"Text":"Adds an option to manually run the CI using an arbitrary TimescaleDB commit. You can also optionally specify a TimescaleDB repo to test the CI with a fork of TimescaleDB.","Date":{"Unix":1672944943},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/667","Title":"Add option to build TimescaleDB in CI","Verbose":1,"GhIssueNumber":667,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1508124061","CommentCount":2,"Text":"Configures the CI badge on the README to reflect the status of the `main` branch, instead of whatever CI run happens to be the most recent.","Date":{"Unix":1672770530},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/666","Title":"Use `main` branch for CI badge in README","Verbose":1,"GhIssueNumber":666,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1503152771","CommentCount":4,"Text":"Fixes #648.\r\n\r\n- [x] Fix all doctests that call `setseed`\r\n- [x] Fix TimescaleDB crash in CI\r\n- [x] Fix `random` function on pg12/pg13\r\n- [x] Don't try to run upgrade tester on releases without PG15 binaries (currently this is all releases)\r\n\r\nThings to fix in release-build-scripts (these don't block this PR):\r\n- Drop Ubuntu 18.04 support (since TimescaleDB has also dropped support) (https://github.com/timescale/release-build-scripts/pull/94)\r\n- Fix rockylinux 9 error in build scripts (`package curl-minimal-7.76.1-19.el9.x86_64 conflicts with curl provided by curl-7.76.1-19.el9.x86_64`)","Date":{"Unix":1672781057},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/664","Title":"Support running on PostgreSQL 15","Verbose":1,"GhIssueNumber":664,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1499274533","CommentCount":1,"Text":"# Description\r\n\r\nDocuments all of the changes made to `state_agg` and `timeline_agg` (including the new support for integer states and rollup) in TimescaleDB Toolkit 1.13.\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1671555669},"Uri":"https://github.com/timescale/docs/pull/1871","Title":"Document changes to state_agg/timeline_agg in Toolkit 1.13","Verbose":1,"GhIssueNumber":1871,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1495141061","CommentCount":2,"Text":"(currently untested)","Date":{"Unix":1671054260},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/656","Title":"Fix locale issue on Enterprise Linux systems ","Verbose":1,"GhIssueNumber":656,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1495070266","CommentCount":2,"Text":"This would have been pushed to main automatically by the release script, but that failed due to a permissions error.","Date":{"Unix":1671055782},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/655","Title":"Prepare for 1.14 release cycle","Verbose":1,"GhIssueNumber":655,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1492260082","CommentCount":1,"Text":"# Description\r\n\r\nToolkit 1.13 will introduce the `timeline_agg` and `heartbeat_agg` aggregates, which will bring Toolkit to 3 state-related aggregates. This PR makes a new \"state aggregates\" hyperfunction family that initially contains just `state_agg`. Documentation for the `timeline_agg` and `heartbeat_agg` aggregates can be added in later PRs.\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1670874046},"Uri":"https://github.com/timescale/docs/pull/1861","Title":"Split state aggregates to seperate function family","Verbose":1,"GhIssueNumber":1861,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1471410678","CommentCount":8,"Text":null,"Date":{"Unix":1670955395},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/646","Title":"Use pgx 0.6.1 with PostgreSQL 15 support","Verbose":1,"GhIssueNumber":646,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1468936355","CommentCount":3,"Text":"Adds documentation for some implementation details of `rollup`.","Date":{"Unix":1680185210},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/643","Title":"Document rollup internals","Verbose":1,"GhIssueNumber":643,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1468153632","CommentCount":2,"Text":"- Adds `rollup` for `state_agg` and `timeline_agg`.\r\n- Supports integer states for `state_agg` and `timeline_agg`. An aggregate can have integer states or string states, but not both. For a few functions this would mean having two functions with the same argument types but differing return types, so in that case I made a separate function for integer-valued aggregates (e.g. `state_int_timeline`).\r\n\r\nIdeally this should have been two separate PRs, but my changes to `rollup` and the rest of the `state_agg` code have become intertwined.\r\n\r\n(this should be merged after #636)","Date":{"Unix":1670365854},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/640","Title":"Support rollup and integer states state/timeline aggs","Verbose":1,"GhIssueNumber":640,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1467151751","CommentCount":0,"Text":"###### Description of changes\r\nhttps://github.com/jsummers/imageworsener/releases/tag/1.3.5\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- Built on platform(s)\r\n  - [x] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- [ ] For non-Linux: Is `sandbox = true` set in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [x] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [22.11 Release Notes (or backporting 22.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2211-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n  - [ ] (Release notes changes) Ran `nixos/doc/manual/md-to-db.sh` to update generated release notes\r\n- [x] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\n\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n","Date":{"Unix":1669765419},"Uri":"https://github.com/NixOS/nixpkgs/pull/203521","Title":"imageworsener: 1.3.4 -> 1.3.5","Verbose":1,"GhIssueNumber":203521,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1464974748","CommentCount":2,"Text":"Adds a `timeline_agg` aggregate that can be used in the same ways as `state_agg` but also allows getting the entire state timeline with `state_timeline`.\r\n\r\nNote that this PR returns start times and end times instead of `tstzrange`s. pgx 0.6.0 will add support for `tstzrange`s so when that release comes out I'll update the relevant functions to return ranges.\r\n\r\nThis partially addresses #619 (adding `rollup` and supporting integer values will be separate PRs to make them easier to review).","Date":{"Unix":1670365086},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/636","Title":"Add timeline_agg","Verbose":1,"GhIssueNumber":636,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1460373613","CommentCount":2,"Text":"CentOS 7 doesn't support the `C.UTF-8` locale, so cargo-pgx doesn't work on CentOS 7 since it tries to set a databases locale to `C.UTF-8`. Rocky Linux >= 8 does have the `C.UTF-8` locale and works fine.\r\n\r\nThis PR makes pgx fallback to the `C` locale on systems without the `C.UTF-8` locale (according to `locale`, and defaulting to `C` if `locale` fails to run).","Date":{"Unix":1669158100},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/884","Title":"Fallback to C locale on systems without C.UTF-8","Verbose":1,"GhIssueNumber":884,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1450193728","CommentCount":2,"Text":"pgx 0.6.0 will stop supporting the `pgx::Datum` import path. `pg_sys::Datum` works with both the current release and the upcoming 0.6.0 release.\r\n\r\nThis also gets us closer to [using the pgx prelude](https://github.com/timescale/timescaledb-toolkit/issues/586).","Date":{"Unix":1668651357},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/618","Title":"Use pg_sys::Datum instead of pgx::Datum","Verbose":1,"GhIssueNumber":618,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1450175445","CommentCount":2,"Text":"pgx 0.6.0 will make some changes to error handling that will affect how the `map_series` pipeline function works. This PR adds some tests to verify that `map_series` behaves correctly when the mapping function throws an error or returns `NULL`.","Date":{"Unix":1668693881},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/617","Title":"Add tests for errors in map_series mapping function","Verbose":1,"GhIssueNumber":617,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1449923587","CommentCount":2,"Text":"We don't support building with the `pg10` or `pg11` features (trying to build Toolkit for those versions results in a compile error); this PR removes them from the Cargo manifest.\r\n\r\npgx 0.6.0 will remove pg10 support from pgx, so this helps bring us towards upgrading to pgx 0.6.0 once it's released.","Date":{"Unix":1668535258},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/616","Title":"Drop unsupported Postgres versions from Cargo.toml","Verbose":1,"GhIssueNumber":616,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1441180846","CommentCount":0,"Text":"Toolkit 1.12.0 was released today.","Date":{"Unix":1668088691},"Uri":"https://github.com/timescale/timescaledb-docker-ha/pull/325","Title":"Include Toolkit 1.12.0","Verbose":1,"GhIssueNumber":325,"GhRepo":"timescale/timescaledb-docker-ha"},
{"Type":"gh-pr","Id":"gh-pr-1440639325","CommentCount":3,"Text":"Always `panic!` in the `from_datum` implementation for `AnyElement`/`AnyArray` instead of only panicking when debug assertions are enabled.\r\n\r\nThese functions should never be called anyways, so there's no real performance benefit by only panicking in debug mode.","Date":{"Unix":1668023916},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/845","Title":"panic! at the polymorphism failure","Verbose":1,"GhIssueNumber":845,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1438902978","CommentCount":2,"Text":"Makes `M3` and `M4` in the stats-agg crate modules instead of empty structs, which is more idiomatic.","Date":{"Unix":1668019843},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/602","Title":"Make stats_agg::M3/M4 modules instead of structs","Verbose":1,"GhIssueNumber":602,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1433310317","CommentCount":2,"Text":"Makes `stats_agg` use `TwoFloat`s internally for keeping track of the state when in moving-aggregate mode to prevent floating-point error from accumulating. See #595 for some more details.","Date":{"Unix":1667851354},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/599","Title":"Use TwoFloats when using `stats_agg` in moving-aggregate","Verbose":1,"GhIssueNumber":599,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1427452690","CommentCount":2,"Text":"We don't need copy everything into memory owned by Rust anymore, since pgx 0.5.4 fixed the bug that made doing that necessary (https://github.com/tcdi/pgx/pull/784).\r\n\r\nThis reverts commit fe8b3861ee12b1cebedfb32a0c4fce2b9ce508df.\r\n\r\nI didn't add anything to the changelog since this an internal change that doesn't affect end users.","Date":{"Unix":1667235746},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/597","Title":"Revert now unneeded pgx workaround","Verbose":1,"GhIssueNumber":597,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1422715279","CommentCount":2,"Text":"We don't need to replace `CREATE OR REPLACE FUNCTION` with `CREATE FUNCTION` anymore, since pgx now defaults to `CREATE FUNCTION` since 0.5.0. Now we can instead verify that the install script doesn't contain any function replacements.","Date":{"Unix":1666962138},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/594","Title":"Verify that pgx doesn't generate CREATE OR REPLACE FUNCTION","Verbose":1,"GhIssueNumber":594,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1420940815","CommentCount":5,"Text":"Being able to install Toolkit with optimizations enabled is useful for benchmarking purposes. This PR adds an option to build in release mode to the build script.","Date":{"Unix":1666703782},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/592","Title":"Add build script option to install in release mode","Verbose":1,"GhIssueNumber":592,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1408358626","CommentCount":2,"Text":"Based on [how pgx does caching](https://github.com/tcdi/pgx/blob/b92c60974c203e07e05cf1320581084be20a8e8a/.github/workflows/tests.yml#L103), compute GitHub Actions cache keys based on the hash of lockfile and workflow file. Now we don't need to bump the versions manually every release.\r\n\r\nNote that `restore-keys` will look for the most recent matching cache with the same prefix if there are no exact matches, so a cache will be available even on commits that update the lockfile/workflow file.","Date":{"Unix":1665761925},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/576","Title":"Make Actions cache keys update automatically","Verbose":1,"GhIssueNumber":576,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1406381231","CommentCount":2,"Text":"The default unit for `interpolated_intgeral` is mentioned in the documentation but doesn't actually work. This PR adds the expected default value (`'second'`, the same as for `integral`).","Date":{"Unix":1666097273},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/574","Title":"Add default unit to interpolated_integral","Verbose":1,"GhIssueNumber":574,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1401693120","CommentCount":2,"Text":"pgx 0.5.0 just released! This PR updates the CI to have pgx 0.5.0 and adds pgx 0.5.0 to the `$PATH` instead of pgx 0.4.5.\r\n\r\nThis PR should be merged right before merging #547 so that the CI can pass on that PR before merging it.","Date":{"Unix":1666025576},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/571","Title":"Update Docker image for pgx 0.5.0","Verbose":1,"GhIssueNumber":571,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1401337161","CommentCount":2,"Text":"bullseye is Debian 11; buster is Debian 10. We're on the latest Debian release. See https://github.com/timescale/timescaledb-toolkit/pull/552#discussion_r989113244.","Date":{"Unix":1665166652},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/569","Title":"Remove incorrect comment in Dockerfile","Verbose":1,"GhIssueNumber":569,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1400175107","CommentCount":2,"Text":"Fixes #691 by setting the locale to `C.UTF-8` when creating databases.\r\n\r\nOn macOS the `C.UTF-8` locale doesn't exist so the locale is set to `C` and the `CTYPE` to `UTF-8`, which has the same effect as setting the locale to `C.UTF-8` on other operating systems.\r\n\r\nNote that testing this requires creating a new database cluster. I tested this by:\r\n- reinstalling cargo-pgx\r\n- deleting `~/.pgx`\r\n- rerunning `cargo pgx init` to get a new database cluster\r\n- cleaning the target directory of any repos you want to test this on","Date":{"Unix":1666386752},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/746","Title":"Set locale to C.UTF-8 when creating database clusters","Verbose":1,"GhIssueNumber":746,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1397822323","CommentCount":8,"Text":"This fixes #735 by passing the type of an argument when getting an argument.","Date":{"Unix":1665106552},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/740","Title":"Include type when getting argument","Verbose":1,"GhIssueNumber":740,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1396606871","CommentCount":2,"Text":"I noticed while working on #547 that we don't have any tests for `SpaceSavingAggregate`s. This PR adds a simple test to verify that the `raw_freq_agg` function will at least run without failing.\r\n\r\nThis test currently fails on #547, which is good since that PR causes a bug that leads to `SpaceSavingAggregate` not working at all.","Date":{"Unix":1665017448},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/559","Title":"Basic test for space saving aggregate serialization","Verbose":1,"GhIssueNumber":559,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1395250426","CommentCount":3,"Text":"Adds support for binary update testing in GitHub Actions. #554 and #556 need to be merged first.","Date":{"Unix":1665185124},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/552","Title":"Binary update testing in CI","Verbose":1,"GhIssueNumber":552,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1395041586","CommentCount":9,"Text":"Adds support for PostgreSQL 15.<!-- release candidate. If the `PGX_USE_PG15_RC1` environment variable is set, the release candidate is used, otherwise pgx tries (and currently fails) to use the final release, which will [hopefully be released on October 13](https://www.postgresql.org/about/news/postgresql-15-rc-1-released-2516/).-->\r\n\r\n<!--The CI currently fails on PostgreSQL 15 since it hasn't been released yet.-->\r\n\r\n<!--Currently PostgreSQL 15 isn't tested in the GH Actions CI.-->\r\n\r\nMain changes:\r\n* Existing extension crates need to add a `pg15` feature to indicate compatibility with PostgreSQL 15. `cargo pgx new` automatically adds the feature for new extensions.\r\n* `pg_sys::String` now exists, which conflicts with the std `String` when importing `pg_sys::*`\r\n* There is now a `abi_extra` field in the `Pg_magic_func` that is always `\"PostgreSQL\"`, but might be different on PostgreSQL forks with an incompatible ABI\r\n* `pg_sys::Value` doesn't exist anymore","Date":{"Unix":1667227290},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/729","Title":"Postgres 15 support","Verbose":1,"GhIssueNumber":729,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1389542570","CommentCount":6,"Text":"Upgrades to pgx `0.5.0-beta.1` (0.5.0 will hopefully be released in 0-7 days). I originally tested on another branch with a lot of code commented out; this branch cherry picks the commits that fix errors but not the ones that comment code out.\r\n\r\nTo do:\r\n- [x] Fix the three failing tests in `datum_utils.rs` (https://github.com/tcdi/pgx/pull/740)\r\n- [x] Remove workaround for lack of `Copy` on some types\r\n- [x] Make update tester work in CI (#552)\r\n- [x] Change pgx version from 0.5.0-beta.1 to 0.5.0\r\n- [x] Publish new CI docker image with pgx 0.5.0 right before merging (https://github.com/timescale/timescaledb-toolkit/pull/571)\r\n\r\nFuture work:\r\n- https://github.com/timescale/timescaledb-toolkit/issues/586\r\n- Use native pgx types instead of `crate::raw`\r\n- Use `#[pg_aggregate]` instead of our own aggregate builder macro\r\n- https://github.com/timescale/timescaledb-toolkit/issues/529","Date":{"Unix":1666028154},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/547","Title":"Upgrade to pgx 0.5.0","Verbose":1,"GhIssueNumber":547,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1388380892","CommentCount":4,"Text":"Currently the error message for invalid interpolation bounds doesn't make it clear what the issue is, and doesn't say what the expected value is. This PR makes the bound checking assertions more clear","Date":{"Unix":1664474347},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/545","Title":"Make interpolation errors more user friendly","Verbose":1,"GhIssueNumber":545,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1387928833","CommentCount":1,"Text":"# Description\r\n\r\nUpdates documentation for the addition of `integral`/`interpolated_integral` in Toolkit 1.11. I based the content for these based on `average`/`interpolated_average`, since the functions are very similar.\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1664327288},"Uri":"https://github.com/timescale/docs/pull/1653","Title":"Update docs for integrals in Toolkit 1.11","Verbose":1,"GhIssueNumber":1653,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1384656222","CommentCount":0,"Text":"Clippy warns if the `since` version in `#[deprecated]` isn't semver-compliant. This PR updates an example using `#[deprecated]` to make the version semver-compliant.","Date":{"Unix":1664043143},"Uri":"https://github.com/rust-lang/reference/pull/1272","Title":"Use semver-compliant example version","Verbose":1,"GhIssueNumber":1272,"GhRepo":"rust-lang/reference"},
{"Type":"gh-pr","Id":"gh-pr-1382896855","CommentCount":5,"Text":"Implements `From<bool>`, `Eq`, and `Hash` on `Datum`. All of these traits are also implemented on `usize`, so this makes upgrading to pgx 0.5 (where `Datum` is now a `struct`) easier.","Date":{"Unix":1663886336},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/704","Title":"Implement more traits on Datum","Verbose":1,"GhIssueNumber":704,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1381203732","CommentCount":4,"Text":"We don't use the version number in the extension's `Cargo.toml` anywhere currently. pgx supports replacing `@CARGO_VERSION@` in control files, so use that.","Date":{"Unix":1664210513},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/542","Title":"Deduplicate version number","Verbose":1,"GhIssueNumber":542,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1381114864","CommentCount":2,"Text":"Updates GitHub Actions and control file for the 1.12 release cycle.","Date":{"Unix":1663778471},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/541","Title":"Prepare for `1.12` cycle","Verbose":1,"GhIssueNumber":541,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1381080138","CommentCount":0,"Text":"Changes for release 1.11.0 of Toolkit","Date":{"Unix":1663947139},"Uri":"https://github.com/timescale/timescaledb-docker-ha/pull/312","Title":"Include toolkit 1.11.0","Verbose":1,"GhIssueNumber":312,"GhRepo":"timescale/timescaledb-docker-ha"},
{"Type":"gh-pr","Id":"gh-pr-1376582221","CommentCount":2,"Text":"We don't use arrayvec anywhere, get rid of it.\r\n\r\nI noticed this while looking at our outdated dependencies. We should probably wait until after 1.11 to update dependencies, but this removal can be done now.","Date":{"Unix":1663692461},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/538","Title":"Remove unused arrayvec dependency","Verbose":1,"GhIssueNumber":538,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1376025044","CommentCount":1,"Text":"# Description\r\n\r\nFixes two formatting issues in the documentation for saturating math\r\n\r\n# Links\r\n\r\nhttps://docs.timescale.com/api/latest/hyperfunctions/saturating_math/saturating_add_pos/\r\nhttps://docs.timescale.com/api/latest/hyperfunctions/saturating_math/saturating_sub_pos/\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1663338663},"Uri":"https://github.com/timescale/docs/pull/1608","Title":"Improve formatting on saturating math documentation","Verbose":1,"GhIssueNumber":1608,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1375138228","CommentCount":2,"Text":"Updates the data file for [Unicode 15.0.0](https://unicode.org/versions/Unicode15.0.0/) (which was released earlier this week) and regenerates the relevant files.","Date":{"Unix":1663348959},"Uri":"https://github.com/progval/unicode_names2/pull/10","Title":"Update data for Unicode 15.0.0","Verbose":1,"GhIssueNumber":10,"GhRepo":"progval/unicode_names2"},
{"Type":"gh-pr","Id":"gh-pr-1374994640","CommentCount":3,"Text":"The same compiler must be used to compile cargo-pgx and Toolkit, or bad things (undefined behaviour) might happen. See https://github.com/tcdi/pgx/pull/687 for why this is the case.\r\n\r\nThis PR updates the installation documentation in the README to indicate this. I split the command in two since you only need to reinstall cargo-pgx, there's no need to re-run `cargo pgx init`.","Date":{"Unix":1663275047},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/536","Title":"Document requirement to use same compiler for cargo-pgx and Toolkit","Verbose":1,"GhIssueNumber":536,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1374811937","CommentCount":2,"Text":"Currently various date-related tests fail on my machine that's in the Canadian English (en_CA) locale. Postgres date parsing is locale-dependent, so this PR makes the dates parsed in tests use a format that is parsed the same in (hopefully) all locales.\r\n\r\nIt would be better to set the locale of the database to `en_US` and write all dates US-style, but SETting the locale parameter doesn't seem to have an impact on date parsing for me. Ideally pgx should set the database locale when creating a test database to a consistent value (since some locale-related values [can't be changed after database creation](https://www.postgresql.org/docs/current/locale.html#id-1.6.11.3.6) (not sure if date parsing is one of them)).","Date":{"Unix":1663269478},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/535","Title":"Make tests pass in Canadian locales","Verbose":1,"GhIssueNumber":535,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1372139909","CommentCount":2,"Text":"The type of `__pgx_marker` is `extern \"C\" fn() -> eyre::Result<ControlFile>`, but it was incorrectly called as `extern \"C\" fn() -> SqlGraphEntity` in `cargo-pgx`, which is undefined behavior since it's UB to assume that a valid value for an `eyre::Result` is also a valid value for a `SqlGraphEntity`. On my M1 macOS device the undefined behavior results in an unconditional `Failed to get control file information` panic. This PR fixes that.\r\n\r\nThe only reason this ever worked was because on some platforms `eyre::Result<ControlFile>` and `SqlGraphEntity` both can have a `ControlFile` after a 1 byte long prefix. And it happened to be the case that `Result::Ok` and `SqlGraphEntity::ExtensionRoot` both correpond to a prefix of `0`.\r\n\r\nI've also wrote [a similar fix for the same issue 0.4](https://github.com/Smittyvb/pgx/commit/25b6a31298dfcdc641fcfd3583f089b274fdcb26), I can make a PR against `master` with that commit if you want to backport this to the 0.4.x release series.","Date":{"Unix":1663194736},"Uri":"https://github.com/pgcentralfoundation/pgrx/pull/687","Title":"Fix undefined behaviour when loading control file","Verbose":1,"GhIssueNumber":687,"GhRepo":"pgcentralfoundation/pgrx"},
{"Type":"gh-pr","Id":"gh-pr-1372049530","CommentCount":4,"Text":"Updates the Docker image so that later the CI will be able to verify everything is formatted with `rustfmt`.","Date":{"Unix":1663179890},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/533","Title":"Verify `cargo fmt` in CI: part 1","Verbose":1,"GhIssueNumber":533,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1371633637","CommentCount":1,"Text":"# Description\r\n\r\nUpdates the HyperLogLog documentation:\r\n\r\n- Emphasizes the warning about low bucket count: using a value for buckets that's less than 1024 results in very poor\r\naccuracy, and is almost never wanted.\r\n- Remove outdated claim about poor performance with low cardinality: this used to be true, but no longer is, since Toolkit now uses HyperLogLog++ which has better accuracy for low cardinality data.\r\n\r\n# Links\r\n\r\nhttps://docs.timescale.com/api/latest/hyperfunctions/approx_count_distincts/hyperloglog/\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1663110445},"Uri":"https://github.com/timescale/docs/pull/1590","Title":"Improve HyperLogLog documentation","Verbose":1,"GhIssueNumber":1590,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1370645201","CommentCount":1,"Text":"Unicode 15 will be released [tomorrow on Sept. 13](https://unicode.org/versions/Unicode15.0.0/). This updates the Unicode tables to the latest version.\r\n\r\nChange notes:\r\n- The `{Grapheme,Word,Sentence}BreakTest.txt` files are unchanged (except for the file header), so no change is needed to `testdata.rs`\r\n- Changes to UAX#29 (Unicode Text Segmentation):\r\n  - Revision 41 doesn't make any substantive changes\r\n  - [Revision 40](https://www.unicode.org/reports/tr29/tr29-40.html#Modifications) adds \"four postbase Kawi characters to the SpacingMark exceptions\" (U+11F03, U+11F34, U+11F35, U+11F41). Currently it looks like none of the 24 `SpacingMark` exceptions [are implemented](https://github.com/unicode-rs/unicode-segmentation/blob/9d79ee2acbe159d3557918ca1a5290995eef9a7e/src/grapheme.rs#L269) (although the impact of this is very minor, it only affects word breaking in extended mode), so this should be fixed in a separate PR","Date":{"Unix":1663086520},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/107","Title":"Upgrade to Unicode 15.0.0","Verbose":1,"GhIssueNumber":107,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-1368254689","CommentCount":2,"Text":"The `hyperloglog` crate has been replaced by the `hyperloglogpluslus` crate. There are no dependencies on the old `hyperloglog` crate.","Date":{"Unix":1663161069},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/530","Title":"Remove unused hyperloglog crate","Verbose":1,"GhIssueNumber":530,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1366335384","CommentCount":1,"Text":"# Description\r\n\r\nFixes a link that wasn't linked right in the `create_hypertable` documentation.\r\n\r\n# Links\r\n\r\nhttps://docs.timescale.com/api/latest/hypertable/create_hypertable/\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1662664006},"Uri":"https://github.com/timescale/docs/pull/1564","Title":"Fix link in create_hypertable docs","Verbose":1,"GhIssueNumber":1564,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1364716677","CommentCount":2,"Text":"Implements functionality requested in #455:\r\n- Adds an experimental `integral(tws[, unit]) -> float8` function (unit defaults to `'second'`)\r\n- Adds an experimental `interpolated_integral(tws, start, interval, prev, next[, unit]) -> float8` function (unit defaults to `'second'`)\r\n- Adds experimental arrow functions for `integral`/`interpolated_integral`\r\n- Makes `trapezoidal` an alias for `linear` in the `time_weight` function\r\n\r\nThe `unit` parameter to `integral`/`interpolated_integral` is a string that specifies what time unit to use for the returned `f64`. It can be any fixed-duration unit that PostgreSQL allows in a `interval`. An alternative would be to have an `interval` be passed as the unit instead, but `interval`s can have variable length units (days and months) which might not be wanted. Also, `integral(..., 'hour')` is clearer than `integral(..., '1 hour'::interval)`.\r\n","Date":{"Unix":1663636887},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/526","Title":"Add integral function for time_weight","Verbose":1,"GhIssueNumber":526,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1363393751","CommentCount":3,"Text":"Currently `.cargo/config` and `extension/.cargo/config` are the same file (except for whitespace differences).\r\n\r\nThe [Cargo docs](https://doc.rust-lang.org/cargo/reference/config.html#hierarchical-structure) specify that Cargo config files are looked for in each parent directory, so including the exact same config file in the `extension/` directory and its parent directory is unnecessary.\r\n\r\nThe [pgx README](https://github.com/tcdi/pgx/blob/1a89778046547c52c714fe6885069eab5638f965/cargo-pgx/README.md#creating-a-new-extension) says:\r\n\r\n> **Workspace users:** `cargo pgx new $NAME` will create a `$NAME/.cargo/config`, you should move this into your workspace root as `.cargo./config`.\r\n>\r\n> If you don't, you may experience unnecessary rebuilds using tools like Rust-Analyzer, as it will use the wrong `rustflags` option.\r\n\r\n\r\nConfig file duplication results in `cargo test` in the root directory building Toolkit from scratch twice, since Cargo invalidates previously built dependencies whenever it uses a new config file (even if they are semantically identical).","Date":{"Unix":1662497781},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/520","Title":"Prevent unnecessary rebuilds using Cargo in root","Verbose":1,"GhIssueNumber":520,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1363228440","CommentCount":2,"Text":"This changelog hasn't been updated for a while (since 0.2.0). Currently the change notes are stored in the [GitHub releases](https://github.com/timescale/timescaledb-toolkit/releases), which has the same information for the two releases that are in the changelog, and has information for all releases past 0.2.0. As far as I can tell the old changelog isn't linked to from anywhere.\r\n\r\nThis PR removes the old changelog and adds a link in the README indicating where the changelog is stored now.","Date":{"Unix":1662660273},"Uri":"https://github.com/timescale/timescaledb-toolkit/pull/519","Title":"Remove unmaintained changelog","Verbose":1,"GhIssueNumber":519,"GhRepo":"timescale/timescaledb-toolkit"},
{"Type":"gh-pr","Id":"gh-pr-1363194537","CommentCount":2,"Text":"# Description\r\n\r\nAdds a missing backtick that makes a table element not be code formatted:\r\n\r\n![One table cell contains \"counter_agg()`\"; the rest are code formatted and without backticks](https://user-images.githubusercontent.com/10530973/188632076-b875f49c-98c1-4030-90f9-1672e39ffaba.png)\r\n\r\n\r\n# Links\r\n\r\nhttps://docs.timescale.com/timescaledb/latest/how-to-guides/hyperfunctions/function-pipelines/#all-function-pipeline-elements\r\n\r\n# Writing help\r\n\r\nFor information about style and word usage, see the [style guide](https://docs.timescale.com/timescaledb/latest/contribute-to-docs/)\r\n\r\n# Review checklists\r\nReviewers: use this section to ensure you have checked everything before approving this PR:\r\n\r\n## Subject matter expert (SME) review checklist\r\n\r\n- [ ] Is the content technically accurate?\r\n- [ ] Is the content complete?\r\n- [ ] Is the content presented in a logical order?\r\n- [ ] Does the content use appropriate names for features and products?\r\n- [ ] Does the content provide relevant links to further information?\r\n\r\n## Documentation team review checklist\r\n\r\n- [ ] Is the content free from typos?\r\n- [ ] Does the content use plain English?\r\n- [ ] Does the content contain clear sections for concepts, tasks, and references?\r\n- [ ] Have any images been uploaded to the correct location, and are resolvable?\r\n- [ ] If the page index was updated, are redirects required\r\n      and have they been implemented?\r\n- [ ] Have you checked the built version of this content?\r\n","Date":{"Unix":1662476137},"Uri":"https://github.com/timescale/docs/pull/1551","Title":"Add a missing backtick","Verbose":1,"GhIssueNumber":1551,"GhRepo":"timescale/docs"},
{"Type":"gh-pr","Id":"gh-pr-1336616985","CommentCount":0,"Text":"<!-- üëÄ Thanks for opening a PR! Read comments like this one to get your PR merged faster. -->\r\n#### Summary\r\n<!-- ‚úçÔ∏è In a sentence or two, describe your changes -->\r\nFixes capitalization of a word\r\n\r\n#### Motivation\r\n<!-- ‚ùì Why are you making this change? Help us understand how your changes help readers. -->\r\nMaking the capitalization correct\r\n\r\n#### Supporting details\r\n<!-- üîó Link to supporting information, such as bug trackers, source control, release notes, and vendor docs. -->\r\n\r\n#### Related issues\r\n<!-- üî® If applicable, use \"Fixes #XYZ\" -->\r\n\r\n#### Metadata\r\n<!-- ‚úÖ Check a box if applicable, like this: [x]\r\n\r\nThis PR‚Ä¶\r\n-->\r\n- [ ] Adds a new document\r\n- [ ] Rewrites (or significantly expands) a document\r\n- [X] Fixes a typo, bug, or other error\r\n\r\n<!-- üë∑‚Äç‚ôÄÔ∏è After submitting, review the results of the \"Checks\" tab! -->\r\n","Date":{"Unix":1660264154},"Uri":"https://github.com/mdn/content/pull/19434","Title":"Fix capitalization","Verbose":1,"GhIssueNumber":19434,"GhRepo":"mdn/content"},
{"Type":"gh-pr","Id":"gh-pr-1299786325","CommentCount":4,"Text":"Currently the help output for a test binary uses the first argument instead of the binary name in the help output:\r\n\r\n```\r\n$ cargo test -- --help\r\n...\r\nUsage: --help [OPTIONS] [FILTERS...]\r\n...\r\n```\r\n\r\nThis fixes it to use the name of the binary (or `...` if there is no binary name passed on argv):\r\n\r\n```\r\n$ cargo test -- --help\r\n...\r\nUsage: /tmp/x/target/debug/deps/x-80c11a15ad4e1bf3 [OPTIONS] [FILTERS...]\r\n...\r\n```","Date":{"Unix":1657461764},"Uri":"https://github.com/rust-lang/rust/pull/99100","Title":"Fix binary name in help message for test binaries","Verbose":1,"GhIssueNumber":99100,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-1284122247","CommentCount":1,"Text":"`yarn install <package>` no longer works to add a package:\r\n\r\n```\r\n$ yarn install nodejs-polars\r\nyarn install v1.22.10\r\ninfo No lockfile found.\r\nerror `install` has been replaced with `add` to add new dependencies. Run \"yarn add nodejs-polars\" instead.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.\r\n```\r\n\r\nThis changes the installation instructions to use the replacement, `yarn add` instead.","Date":{"Unix":1656131092},"Uri":"https://github.com/pola-rs/polars/pull/3804","Title":"Fix Node installation instructions","Verbose":1,"GhIssueNumber":3804,"GhRepo":"pola-rs/polars"},
{"Type":"gh-pr","Id":"gh-pr-1186415423","CommentCount":1,"Text":"Some Vim swap files appear to have been added to the repo accidentally; this PR removes them.","Date":{"Unix":1648717129},"Uri":"https://github.com/opentimestamps/javascript-opentimestamps/pull/96","Title":"Remove Vim swap files","Verbose":1,"GhIssueNumber":96,"GhRepo":"opentimestamps/javascript-opentimestamps"},
{"Type":"gh-pr","Id":"gh-pr-1181329211","CommentCount":0,"Text":"It seems the selector for the post menu has changed; this updates it so that the userscript can locate the post menu and properly insert itself again.","Date":{"Unix":1648403199},"Uri":"https://github.com/Glorfindel83/SE-Userscripts/pull/29","Title":"Fix post menu CSS selector","Verbose":1,"GhIssueNumber":29,"GhRepo":"Glorfindel83/SE-Userscripts"},
{"Type":"gh-pr","Id":"gh-pr-1176131256","CommentCount":0,"Text":"Updates the OSS to 17.0.0","Date":{"Unix":1706514328},"Uri":"https://github.com/reswitched/switch-oss/pull/7","Title":"14.0.0-17.0.0","Verbose":1,"GhIssueNumber":7,"GhRepo":"reswitched/switch-oss"},
{"Type":"gh-pr","Id":"gh-pr-1175403393","CommentCount":6,"Text":"This splits `ui/unsafe/union.rs` to make it so only the non-UB parts are run. It also means we can do more testing of the location of error messages (which are a bit different with the THIR unsafety checker). `union-modification.rs` has no UB (according to Miri), and `union.rs` has errors (but would have UB if not for those errors).\r\n\r\nCloses #95075.\r\nr? @bjorn3 ","Date":{"Unix":1647885483},"Uri":"https://github.com/rust-lang/rust/pull/95169","Title":"Don't run UB in test suite","Verbose":1,"GhIssueNumber":95169,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-1125215642","CommentCount":1,"Text":"This adds support for Unicode 14.0.0, which has 838 new named code points.\r\n\r\nRunning `cargo run --example count` gives:\r\nBefore:\r\n```\r\nthere are 137714 named code points\r\n```\r\nAfter:\r\n```\r\nthere are 138552 named code points\r\n```\r\n","Date":{"Unix":1644158353},"Uri":"https://github.com/progval/unicode_names2/pull/4","Title":"Update to Unicode 14.0.0","Verbose":1,"GhIssueNumber":4,"GhRepo":"progval/unicode_names2"},
{"Type":"gh-pr","Id":"gh-pr-1125206892","CommentCount":0,"Text":"This adds support for [Unicode 14.0.0](https://www.unicode.org/versions/Unicode14.0.0/), which was released on 14 September, 2021.","Date":{"Unix":1644200530},"Uri":"https://github.com/unicode-rs/unicode-segmentation/pull/101","Title":"Upgrade to Unicode 14.0.0","Verbose":1,"GhIssueNumber":101,"GhRepo":"unicode-rs/unicode-segmentation"},
{"Type":"gh-pr","Id":"gh-pr-1096931755","CommentCount":1,"Text":"Quick entering `Do a thing due:meh` causes GTG to completely freeze, and need to be killed. This fixes it to treat tokens with invalid dates the as other invalid tokens, ignoring them (and removing them from the input text).\r\n\r\nThis issue was caused since the the `continue` in the parsing loop didn't remove the token, causing it to loop forever on the invalid token.","Date":{"Unix":1641679670},"Uri":"https://github.com/getting-things-gnome/gtg/pull/749","Title":"Don't loop forever with invalid quick add date","Verbose":1,"GhIssueNumber":749,"GhRepo":"getting-things-gnome/gtg"},
{"Type":"gh-pr","Id":"gh-pr-1083839784","CommentCount":22,"Text":"Currently trying to use `concat_bytes!` with a repeating array value like `[42; 5]` results in an error:\r\n```\r\nerror: expected a byte literal\r\n --> src/main.rs:3:27\r\n  |\r\n3 |     let x = concat_bytes!([3; 4]);\r\n  |                           ^^^^^^\r\n  |\r\n  = note: only byte literals (like `b\"foo\"`, `b's'`, and `[3, 4, 5]`) can be passed to `concat_bytes!()`\r\n```\r\n\r\nThis makes it so repeating array syntax can be used the same way normal arrays can be. The RFC doesn't explicitly mention repeat expressions, but it seems reasonable to allow them as well, since normal arrays are allowed. \r\n\r\nIt is possible to make the compiler get stuck compiling forever with `concat_bytes!([3; 999999999])`, but I don't think that's much of an issue since you can do that already with `const X: [u8; 999999999] = [3; 999999999];`.\r\n\r\nContributes to #87555.","Date":{"Unix":1641138564},"Uri":"https://github.com/rust-lang/rust/pull/92066","Title":"Support [x; n] expressions in concat_bytes!","Verbose":1,"GhIssueNumber":92066,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-1074741856","CommentCount":1,"Text":"<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\nUpdates imageworsener to [1.3.4](https://github.com/jsummers/imageworsener/releases/tag/1.3.4) and adds me as a maintainer.\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- Built on platform(s)\r\n  - [x] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- [ ] For non-Linux: Is `sandbox = true` set in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [x] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [22.05 Release Notes (or backporting 21.11 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n  - [ ] (Release notes changes) Ran `nixos/doc/manual/md-to-db.sh` to update generated release notes\r\n- [x] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1638994749},"Uri":"https://github.com/NixOS/nixpkgs/pull/149694","Title":"imageworsener: 1.3.3 -> 1.3.4","Verbose":1,"GhIssueNumber":149694,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1073740604","CommentCount":1,"Text":"<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\nhttps://github.com/shssoichiro/oxipng/releases/tag/v5.0.1\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- Built on platform(s)\r\n  - [x] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- [ ] For non-Linux: Is `sandbox = true` set in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [x] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [22.05 Release Notes (or backporting 21.11 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n  - [ ] (Release notes changes) Ran `nixos/doc/manual/md-to-db.sh` to update generated release notes\r\n- [x] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1638934140},"Uri":"https://github.com/NixOS/nixpkgs/pull/149450","Title":"oxipng: 5.0.0 -> 5.0.1","Verbose":1,"GhIssueNumber":149450,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1064007418","CommentCount":1,"Text":"<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\nThis packages PngOptimizer, a PNG optimization and conversion program with a terminal (`pngoptimizercl`) and UI  (`pngoptimizer`) interface.\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- Built on platform(s)\r\n  - [x] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- [ ] For non-Linux: Is `sandbox = true` set in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/command-ref/conf-file.html))\r\n- [ ] Tested, as applicable:\r\n  - [NixOS test(s)](https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests) (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n  - and/or [package tests](https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests)\r\n  - or, for functions and \"core\" functionality, tests in [lib/tests](https://github.com/NixOS/nixpkgs/blob/master/lib/tests) or [pkgs/test](https://github.com/NixOS/nixpkgs/blob/master/pkgs/test)\r\n  - made sure NixOS tests are [linked](https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking) to the relevant packages\r\n- [x] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"`. Note: all changes have to be committed, also see [nixpkgs-review usage](https://github.com/Mic92/nixpkgs-review#usage)\r\n- [x] Tested basic functionality of all binary files (usually in `./result/bin/`)\r\n- [21.11 Release Notes (or backporting 21.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n  - [ ] (Release notes changes) Ran `nixos/doc/manual/md-to-db.sh` to update generated release notes\r\n- [x] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1647218971},"Uri":"https://github.com/NixOS/nixpkgs/pull/147442","Title":"pngoptimizer: init at 2.7","Verbose":1,"GhIssueNumber":147442,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1046765418","CommentCount":1,"Text":"It is useful to be able to get all of the state events that have occurred in a room, instead of needing to use `Room::getCurrentState`, which filters based on the event type and state key.\r\n\r\nThis is useful for implementing Spaces support, where all events of type `m.space.child` are needed, and we don't know their state keys in advance.","Date":{"Unix":1638008602},"Uri":"https://github.com/quotient-im/libQuotient/pull/518","Title":"Add method to get all state events in a room","Verbose":1,"GhIssueNumber":518,"GhRepo":"quotient-im/libQuotient"},
{"Type":"gh-pr","Id":"gh-pr-1043708712","CommentCount":6,"Text":"Since rustc doesn't do the assembly parsing itself, it is unable to detect when inline assembly ends with an instruction prefix, which doesn't make sense since it would apply to instructions from the compiler. This fixes #82314 by mentioning that x86 instruction prefixes must not be used in inline assembly. AFAICT x86 is the only instruction set with instruction prefixes.","Date":{"Unix":1636098634},"Uri":"https://github.com/rust-lang/rust/pull/90533","Title":"Add note about x86 instruction prefixes in asm! to unstable book","Verbose":1,"GhIssueNumber":90533,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-1025732322","CommentCount":1,"Text":"<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\n[qcoro](https://github.com/danvratil/qcoro) is a library for using C++20 coroutines with Qt. It appears it [will also be needed](https://invent.kde.org/network/neochat/-/blob/304c74101ea02668eadd83d2cfa376f167826ac7/CMakeLists.txt#L113) to build Neochat from source in the next release. \r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- Built on platform(s)\r\n  - [x] x86_64-linux\r\n  - [ ] aarch64-linux\r\n  - [ ] x86_64-darwin\r\n  - [ ] aarch64-darwin\r\n- [ ] For non-Linux: Is `sandbox = true` set in `nix.conf`? (See [Nix manual](https://nixos.org/manual/nix/stable/#sec-conf-file))\r\n- [ ] Tested via one or more NixOS test(s) if existing and applicable for the change (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n- [x] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"`\r\n- [ ] Tested execution of all binary files (usually in `./result/bin/`)\r\n- [21.11 Release Notes (or backporting 21.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n- [X] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1634497229},"Uri":"https://github.com/NixOS/nixpkgs/pull/141581","Title":"qcoro: init at 0.3.0 ","Verbose":1,"GhIssueNumber":141581,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-1006776557","CommentCount":2,"Text":"This was noticed at https://github.com/flathub/org.mapeditor.Tiled/pull/11#discussion_r715583117: the way to ask for a release build is differs between Qbs and qmake. This properly makes builds optimized.","Date":{"Unix":1632527921},"Uri":"https://github.com/flathub/org.mapeditor.Tiled/pull/12","Title":"Properly make Qbs produce optimized builds","Verbose":1,"GhIssueNumber":12,"GhRepo":"flathub/org.mapeditor.Tiled"},
{"Type":"gh-pr","Id":"gh-pr-1004818355","CommentCount":2,"Text":"Using qmake to build Tiled is deprecated (closes #10), this updates it to use Qbs. This is based on [another app that uses QBS to build](https://github.com/flathub/flathub/pull/654/files).","Date":{"Unix":1632362047},"Uri":"https://github.com/flathub/org.mapeditor.Tiled/pull/11","Title":"Build using Qbs","Verbose":1,"GhIssueNumber":11,"GhRepo":"flathub/org.mapeditor.Tiled"},
{"Type":"gh-pr","Id":"gh-pr-993873664","CommentCount":4,"Text":"The main `cargo` command supports `cargo r` as an alias for `cargo run`, and `cargo t` as an alias for `cargo test`. This adds support to them in `cargo-miri` for consistency.","Date":{"Unix":1631644638},"Uri":"https://github.com/rust-lang/miri/pull/1890","Title":"One character aliases for cargo-miri run/test","Verbose":1,"GhIssueNumber":1890,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-985700605","CommentCount":4,"Text":"When a DNS server claims to be unable or unwilling to handle a request, instead of passing that refusal along to the client, just treat it as any other error trying to connect to the DNS server. This prevents DNS requests from failing based on if a server can respond with a transient error before another server is able to give an actual response. DNS requests only failing *sometimes* is really hard to find the cause of (such as in #1033).","Date":{"Unix":1634045725},"Uri":"https://github.com/tailscale/tailscale/pull/2772","Title":"tsdns: don't forward transient DNS errors","Verbose":1,"GhIssueNumber":2772,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-973874347","CommentCount":0,"Text":"I asked NOA legal to add some files to the OSS archive, and they obliged:\r\n\r\n> Thank you for bringing this to our attention.  We've completed our investigation and have added the nxDebugPrint.h file in the util directory.  The latest zip file currently posted for version 12.1.0 contains the added code.  Please let us know if you have any additional questions.\r\n>\r\n> Legal Department\r\n> Nintendo of America Inc.\r\n\r\nIt seems that they threw in a few bonus files as well.","Date":{"Unix":1635217108},"Uri":"https://github.com/reswitched/switch-oss/pull/6","Title":"Add updated version of 12.1.0","Verbose":1,"GhIssueNumber":6,"GhRepo":"reswitched/switch-oss"},
{"Type":"gh-pr","Id":"gh-pr-964942982","CommentCount":0,"Text":"The current link 404s when viewed on GitHub due to using a relative\r\npath that refers to an upper directory.\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\nThe current link 404s.\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- [ ] Tested using sandboxing ([nix.useSandbox](https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox) on NixOS, or option `sandbox` in [`nix.conf`](https://nixos.org/nix/manual/#sec-conf-file) on non-NixOS linux)\r\n- Built on platform(s)\r\n   - [ ] NixOS\r\n   - [ ] macOS\r\n   - [ ] other Linux distributions\r\n- [ ] Tested via one or more NixOS test(s) if existing and applicable for the change (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n- [ ] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"`\r\n- [ ] Tested execution of all binary files (usually in `./result/bin/`)\r\n- [21.11 Release Notes (or backporting 21.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n- [X] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1628599759},"Uri":"https://github.com/NixOS/nixpkgs/pull/133370","Title":"CONTRIBUTING.md: fix link to COPYING","Verbose":1,"GhIssueNumber":133370,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-963524490","CommentCount":0,"Text":"Currently, the Bash completions for `whereis <TAB>` gives `whereis file` (\"file\" is not a placeholder here, it literally expands to that). This fixes that by passing the `-c` flag to `compgen` to request completions for command names.","Date":{"Unix":1628503148},"Uri":"https://github.com/util-linux/util-linux/pull/1407","Title":"whereis: use commands for Bash completions","Verbose":1,"GhIssueNumber":1407,"GhRepo":"util-linux/util-linux"},
{"Type":"gh-pr","Id":"gh-pr-963317261","CommentCount":0,"Text":null,"Date":{"Unix":1628383966},"Uri":"https://github.com/hackclub/dinosaurs/pull/340","Title":"Add dino with long neck","Verbose":1,"GhIssueNumber":340,"GhRepo":"hackclub/dinosaurs"},
{"Type":"gh-pr","Id":"gh-pr-962956202","CommentCount":0,"Text":"This adds some more details about how the THIR works. It also adds as an example what some THIR looks like, along with some annotations I added.\r\n\r\nContributes to https://github.com/rust-lang/project-thir-unsafeck/issues/6. (cc @LeSeulArtichaut)","Date":{"Unix":1629590157},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1183","Title":"Expand THIR section with more details","Verbose":1,"GhIssueNumber":1183,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-961196834","CommentCount":1,"Text":"This flag was removed by https://github.com/rust-lang/rust/pull/65081, and the content of the page on profiling queries was quite outdated. I've removed the page, and moved the external links section to the main queries page. The rest of the page is outdated.\r\n\r\nFixes #1150","Date":{"Unix":1629120004},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1179","Title":"Remove docs for old -Z profile-queries flag","Verbose":1,"GhIssueNumber":1179,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-959569151","CommentCount":9,"Text":"This can be used like `./x.py test src/test/ui/abi/ --force-rerun`, and is useful when verifying that newly blessed tests don't change between test runs (such as due to being dependent on the current time or memory layout or RNG), without needing to change the test file or find the right file in `build` to remove.","Date":{"Unix":1628369005},"Uri":"https://github.com/rust-lang/rust/pull/87744","Title":"Add x.py option to --force-rerun compiletest tests","Verbose":1,"GhIssueNumber":87744,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-959410908","CommentCount":2,"Text":"Now that #87403 is merged, a few more tests can be added for reads/writes to dropping union fields.\r\n\r\nr? @LeSeulArtichaut ","Date":{"Unix":1628042634},"Uri":"https://github.com/rust-lang/rust/pull/87734","Title":"Test dropping union fields more","Verbose":1,"GhIssueNumber":87734,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-956062632","CommentCount":7,"Text":"This implements the unstable `concat_bytes!` macro, which has tracking issue #87555. It can be used like:\r\n```rust\r\n#![feature(concat_bytes)]\r\n\r\nfn main() {\r\n    assert_eq!(concat_bytes!(), &[]);\r\n    assert_eq!(concat_bytes!(b'A', b\"BC\", [68, b'E', 70]), b\"ABCDEF\");\r\n}\r\n```\r\nIf strings or characters are used where byte strings or byte characters are required, it suggests adding a `b` prefix. If a number is used outside of an array it suggests arrayifying it. If a boolean is used it suggests replacing it with the numeric value of that number. Doubly nested arrays of bytes are disallowed.","Date":{"Unix":1639044720},"Uri":"https://github.com/rust-lang/rust/pull/87599","Title":"Implement concat_bytes!","Verbose":1,"GhIssueNumber":87599,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-955018531","CommentCount":0,"Text":"These examples are very outdated, and require a very old version of `svelte-loader` and Svelte to be used. This removes them to avoid confusion. Fixes #165.","Date":{"Unix":1654197933},"Uri":"https://github.com/sveltejs/svelte-loader/pull/195","Title":"Remove outdated example/ directory","Verbose":1,"GhIssueNumber":195,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-953408109","CommentCount":3,"Text":"Currently the documentation for `[integer]::{MIN, MAX}` doesn't explain where the constants come from. This documents how the values of those constants are related to powers of 2.","Date":{"Unix":1627500363},"Uri":"https://github.com/rust-lang/rust/pull/87500","Title":"Document math behind MIN/MAX consts on integers","Verbose":1,"GhIssueNumber":87500,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-940115800","CommentCount":21,"Text":"This fixes #86964 by rejecting octal zeros in IP addresses, such that `192.168.00.00000000` is rejected with a parse error, since having leading zeros in front of another zero indicates it is a zero written in octal notation, which is not allowed in the strict mode specified by RFC 6943 3.1.1. Octal rejection was implemented in #83652, but due to the way it was implemented octal zeros were still allowed.","Date":{"Unix":1634813968},"Uri":"https://github.com/rust-lang/rust/pull/86984","Title":"Reject octal zeros in IPv4 addresses","Verbose":1,"GhIssueNumber":86984,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-936459890","CommentCount":4,"Text":"Cc https://github.com/rust-lang/rust/issues/86863, which was caused by PR https://github.com/rust-lang/rust/pull/86255.","Date":{"Unix":1625432069},"Uri":"https://github.com/rust-lang/miri/pull/1845","Title":"Make work with latest rustc","Verbose":1,"GhIssueNumber":1845,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-934108955","CommentCount":3,"Text":"This is useful for when you want to reschedule future tasks to today, or bump forward overdue tasks to today.","Date":{"Unix":1626904828},"Uri":"https://github.com/getting-things-gnome/gtg/pull/686","Title":"Make setting due date today an option in context menu","Verbose":1,"GhIssueNumber":686,"GhRepo":"getting-things-gnome/gtg"},
{"Type":"gh-pr","Id":"gh-pr-932642809","CommentCount":1,"Text":"This was changed in https://github.com/rust-lang/rust/pull/86446 such that incompleteness is included in the declaration.","Date":{"Unix":1624984874},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1151","Title":"Document how to mark features as incomplete","Verbose":1,"GhIssueNumber":1151,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-930939713","CommentCount":5,"Text":"This causes Windows Defender's firewall to pop up during tests to ask if I want to allow the test program to access the public Internet, since it was listening on `0.0.0.0` (the test passes regardless of how you respond to the modal, since the firewall only affects traffic outside of the computer, none of which actually happens in the test). The test server doesn't actually need to be publicly reachable, so this makes it so it is only reachable locally, which makes Windows Defender happy.","Date":{"Unix":1624925934},"Uri":"https://github.com/rust-lang/rust/pull/86669","Title":"Don't run a publically reachable server in tests","Verbose":1,"GhIssueNumber":86669,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-928619157","CommentCount":16,"Text":"While looking at #86583, I wondered how many other (insecure) HTTP links were in `rustc`. This changes most other `http` links to `https`. While most of the links are in comments or documentation, there are a few other HTTP links that are used by CI that are changed to HTTPS.\r\n\r\nNotes:\r\n- I didn't change any to or in licences\r\n- Some links don't support HTTPS :(\r\n- Some `http` links were dead, in those cases I upgraded them to their new places (all of which used HTTPS)","Date":{"Unix":1624704734},"Uri":"https://github.com/rust-lang/rust/pull/86586","Title":"Use HTTPS links where possible","Verbose":1,"GhIssueNumber":86586,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-928299146","CommentCount":1,"Text":"This updates dependencies to their latest versions, causing #19 to be fixed, and also adds a regression test for that issue. I've also verified that this fixes the table rendering issues manually.","Date":{"Unix":1625574923},"Uri":"https://github.com/badboy/mdbook-toc/pull/20","Title":"Bump dependencies to fix HTML in tables","Verbose":1,"GhIssueNumber":20,"GhRepo":"badboy/mdbook-toc"},
{"Type":"gh-pr","Id":"gh-pr-927714602","CommentCount":1,"Text":"Currently it renders like:\r\n![image](https://user-images.githubusercontent.com/10530973/123013328-05beac00-d392-11eb-9235-afa6439c88e8.png)\r\nThis changes it to:\r\n![image](https://user-images.githubusercontent.com/10530973/123013363-140cc800-d392-11eb-9b19-71a3dfdf645e.png)\r\n\r\nThe incorrect rendering is caused by a bug in mdBook: https://github.com/rust-lang/mdBook/issues/1583. This adds a workaround for that bug.","Date":{"Unix":1624510657},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1146","Title":"Generate glossary table correctly","Verbose":1,"GhIssueNumber":1146,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-927663961","CommentCount":8,"Text":"This adds a suggestion for \"undefined reference to ...\" linking errors to install or specify the location to an external library. Since there is no defined error format for linkers, we just check if there was a failure and if that failure contains the string `undefined reference to`. This also makes it impossible to test this, since the output depends on the system linker. The output now looks like:\r\n```\r\nerror: linking with `cc` failed: exit status: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"linking_failure.linking_failure.7rcbfp3g-cgu.0.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.1.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.2.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.3.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.4.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.5.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.6.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.7.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.8.rcgu.o\" \"linking_failure.53u64zklswtfazes.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-01ce3ba5c629d02f.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-f1f2102409186354.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libminiz_oxide-1e8b6b56a999f838.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libadler-d0e93eb4e14f1d19.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libobject-1d7e39d75d082b43.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libaddr2line-ade42e945045b261.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgimli-1a65064fccf4ebc1.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_detect-4d699c310fdfe72d.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-1cafa68a696ec800.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-e9f1c8c4dab2f046.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-ecc1a743be25c7f7.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-e074031c4b66b6b6.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-9aa6ed9f1d3bfd53.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-7862bf96c2250ca0.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-f02ce0dc7895b5fd.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-3af9c60917570521.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ca16fc7bb3645684.rlib\" \"-Wl,--end-group\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-d8e1a5b7299604cc.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-znoexecstack\" \"-L\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"linking_failure\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\"\r\n  = note: /usr/bin/ld: linking_failure.linking_failure.7rcbfp3g-cgu.3.rcgu.o: in function `linking_failure::main':\r\n          linking_failure.7rcbfp3g-cgu.3:(.text._ZN15linking_failure4main17h52b6e3052e444479E+0x3): undefined reference to `doesnt_exist_thiwthwfyl'\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n          \r\n  = help: some `extern` functions couldn't be found; you may need to install or specify the path to some dependencies\r\n  = note: use the -L flag to specify the library lookup path\r\n  = note: use the cargo:rustc-link-search directive to specify the library lookup path with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#rustc-link-search)\r\n\r\nerror: aborting due to previous error\r\n```","Date":{"Unix":1625141025},"Uri":"https://github.com/rust-lang/rust/pull/86558","Title":"Add suggestions for \"undefined reference\" link errors","Verbose":1,"GhIssueNumber":86558,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-925660924","CommentCount":3,"Text":"This makes error messages for functions with incorrect argument counts adapt if they refer to a struct or enum variant:\r\n```\r\nerror[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\r\n  --> $DIR/struct-enum-wrong-args.rs:7:13\r\n   |\r\nLL |     let _ = Ok();\r\n   |             ^^-- supplied 0 arguments\r\n   |             |\r\n   |             expected 1 argument\r\n\r\nerror[E0061]: this struct takes 1 argument but 0 arguments were supplied\r\n  --> $DIR/struct-enum-wrong-args.rs:8:13\r\n   |\r\nLL |     let _ = Wrapper();\r\n   |             ^^^^^^^-- supplied 0 arguments\r\n   |             |\r\n   |             expected 1 argument\r\n```\r\n\r\nFixes #86481.","Date":{"Unix":1624335317},"Uri":"https://github.com/rust-lang/rust/pull/86493","Title":"Say \"this enum variant takes\"/\"this struct takes\" instead of \"this function takes\"","Verbose":1,"GhIssueNumber":86493,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-925206310","CommentCount":8,"Text":"This isn't a feature gate, it's an attribute that is feature gated behind the `rustc_attrs` attribute. Closes #85680.","Date":{"Unix":1624943740},"Uri":"https://github.com/rust-lang/rust/pull/86446","Title":"Don't make `rustc_insignificant_dtor` feature gate","Verbose":1,"GhIssueNumber":86446,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-923861797","CommentCount":1,"Text":"See https://github.com/rust-lang/rust/issues/86099#issuecomment-862857244 for some more context. These operations always panic, even when overflow checks are disabled.","Date":{"Unix":1623983939},"Uri":"https://github.com/rust-lang/reference/pull/1049","Title":"Mention that MAX / -1 and MAX % -1 always panic","Verbose":1,"GhIssueNumber":1049,"GhRepo":"rust-lang/reference"},
{"Type":"gh-pr","Id":"gh-pr-923086301","CommentCount":4,"Text":"Suggested in https://github.com/rust-lang/rust/pull/85263#issuecomment-861906730, this splits off the support for pattern walking in THIR from #85263. This has no observable effect on THIR unsafety checking, since it is not currently possible to trigger unsafety from the THIR checker using the additional patterns or constants that are now walked. THIR patterns are walked in source code order.\r\n\r\nr? @LeSeulArtichaut","Date":{"Unix":1624092126},"Uri":"https://github.com/rust-lang/rust/pull/86378","Title":"Add pattern walking support to THIR walker","Verbose":1,"GhIssueNumber":86378,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-921890312","CommentCount":4,"Text":"I noticed this while working on #86255: currently the same message is used for hard errors and soft errors in CTFE. This changes the error messages to make hard errors use a message that indicates the reality of the situation correctly, since usage of the constant is never allowed when there was a hard error evaluating it. This doesn't affect the behaviour of these error messages, only the content.\r\n\r\nThis changes the error logic to check if the error should be hard or soft where it is generated, instead of where it is emitted, to allow this distinction in error messages.","Date":{"Unix":1623953208},"Uri":"https://github.com/rust-lang/rust/pull/86340","Title":"Use better error message for hard errors in CTFE","Verbose":1,"GhIssueNumber":86340,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-919686204","CommentCount":30,"Text":"This closes #79601 by handling the case where memory allocation fails during MIR interpretation, and translates that failure into an `InterpError`. The error message is \"tried to allocate more memory than available to compiler\" to make it clear that the memory shortage is happening at compile-time by the compiler itself, and that it is not a runtime issue.\r\n\r\nNow that memory allocation can fail, it would be neat if Miri could simulate low-memory devices to make it easy to see how much memory a Rust program needs.\r\n\r\nNote that this breaks Miri because it assumes that allocation can never fail.","Date":{"Unix":1625399814},"Uri":"https://github.com/rust-lang/rust/pull/86255","Title":"Support allocation failures when interpreting MIR","Verbose":1,"GhIssueNumber":86255,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-919628262","CommentCount":17,"Text":"Currently `-Z unpretty=thir-tree` is broken after some THIR refactorings. This re-implements it, making it easier to debug THIR-related issues.\r\n\r\nWe have to do analyzes before getting the THIR, since trying to create THIR from invalid HIR can ICE. But doing those analyzes requires the THIR to be built and stolen. We work around this by creating a separate query to construct the THIR tree string representation.\r\n\r\nCloses https://github.com/rust-lang/project-thir-unsafeck/issues/8, fixes #85552.","Date":{"Unix":1627473764},"Uri":"https://github.com/rust-lang/rust/pull/86251","Title":"Support -Z unpretty=thir-tree again","Verbose":1,"GhIssueNumber":86251,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-913744764","CommentCount":12,"Text":"This adds peephole optimizations to make `x == false`, `false == x`, `x != true`, and `true != x` get optimized to `!x` in the `instcombine` MIR pass. That pass currently handles `x == true` -> `x` already.","Date":{"Unix":1623229216},"Uri":"https://github.com/rust-lang/rust/pull/86107","Title":"Peephole optimize `x == false` and `x != true`","Verbose":1,"GhIssueNumber":86107,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-903057444","CommentCount":5,"Text":"Type aliases are linted as such, so (unstable) trait aliases should be treated the same way.","Date":{"Unix":1622120759},"Uri":"https://github.com/rust-lang/rust/pull/85732","Title":"Lint against non-CamelCase trait alias names","Verbose":1,"GhIssueNumber":85732,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-902935033","CommentCount":3,"Text":"`Iterator::{min, max}` can't be used with iterators of floats due to NaN issues. This suggests a workaround in the documentation of those functions.","Date":{"Unix":1622150096},"Uri":"https://github.com/rust-lang/rust/pull/85730","Title":"Mention workaround for floats in Iterator::{min, max}","Verbose":1,"GhIssueNumber":85730,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-902744809","CommentCount":5,"Text":"This removes a workaround for #24159, which has been fixed.","Date":{"Unix":1622088502},"Uri":"https://github.com/rust-lang/rust/pull/85725","Title":"Remove unneeded workaround","Verbose":1,"GhIssueNumber":85725,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-893726012","CommentCount":11,"Text":"These macros have already been removed, but there was still some code handling these macros. That code is now removed.","Date":{"Unix":1624036404},"Uri":"https://github.com/rust-lang/rust/pull/85421","Title":"Remove some last remants of {push,pop}_unsafe!","Verbose":1,"GhIssueNumber":85421,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-891263182","CommentCount":0,"Text":"This flag is useful for debugging the THIR.","Date":{"Unix":1620931903},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1128","Title":"Document -Zunpretty=thir-tree","Verbose":1,"GhIssueNumber":1128,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-891104711","CommentCount":30,"Text":"see also #85259, #83129, https://github.com/rust-lang/project-thir-unsafeck/issues/7\r\n\r\nr? @LeSeulArtichaut","Date":{"Unix":1625873064},"Uri":"https://github.com/rust-lang/rust/pull/85263","Title":"Check for union field accesses in THIR unsafeck","Verbose":1,"GhIssueNumber":85263,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-891086821","CommentCount":10,"Text":"#83129 was merged recently and added a THIR unsafe checker. This adds a check for inline assembly. (and this is 2x simpler than the MIR version, which has to check for `asm` and `llvm_asm` in two separate spots!)\r\n\r\n see also rust-lang/project-thir-unsafeck#7","Date":{"Unix":1621136094},"Uri":"https://github.com/rust-lang/rust/pull/85259","Title":"Check for inline assembly in THIR unsafeck","Verbose":1,"GhIssueNumber":85259,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-873992124","CommentCount":5,"Text":"Calling these intrinsics with non-finite values is undefined behaviour, since they result in `f*` intrinsics in LLVM with the `fast` flag, and `fast` math on non-finite values results in `poison` values. (technically LLVM only considers it UB upon _using_ the value, but that shouldn't make much of a difference)","Date":{"Unix":1620064376},"Uri":"https://github.com/rust-lang/miri/pull/1785","Title":"Throw UB if f*_fast intrinsic called with non-finite value","Verbose":1,"GhIssueNumber":1785,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-867147391","CommentCount":1,"Text":"Since all warnings are `deny`ed when `cfg(test)`, new warnings in rustc make tests fail. A new warning was added to rustc, so they fail with warnings like this:\r\n```\r\nerror: panic message is not a string literal\r\n   --> src/terminfo/parm.rs:682:34\r\n    |\r\n682 |             assert!(res.is_ok(), res.err().unwrap());\r\n    |                                  ^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: this is no longer accepted in Rust 2021\r\nhelp: add a \"{}\" format string to Display the message\r\n    |\r\n682 |             assert!(res.is_ok(), \"{}\", res.err().unwrap());\r\n    |                                  ^^^^^\r\n```\r\n\r\nThis fixes that by correcting the warnings, and tests now pass.","Date":{"Unix":1619421154},"Uri":"https://github.com/Stebalien/term/pull/109","Title":"Make tests pass on Rust 1.53","Verbose":1,"GhIssueNumber":109,"GhRepo":"Stebalien/term"},
{"Type":"gh-pr","Id":"gh-pr-867146789","CommentCount":0,"Text":"This makes the license metadata be in the standard SPDX format, so tools can correctly interpret the license metadata of this crate.","Date":{"Unix":1619421114},"Uri":"https://github.com/Stebalien/term/pull/108","Title":"Make license metadata SPDX-formatted","Verbose":1,"GhIssueNumber":108,"GhRepo":"Stebalien/term"},
{"Type":"gh-pr","Id":"gh-pr-866847339","CommentCount":3,"Text":"This fixes #76246, where commented out lines were being detected as features by `tidy`, by ignoring those lines when looking for features. It's still not perfect, since it can be fooled by things like:\r\n```rust\r\n/*\r\n#[unstable(feature = \"foo\", issue = \"1234\")]\r\n*/\r\n```\r\nBut luckily that never happens in `rustc`, so `foo` now ceases to appear in the unstable book.","Date":{"Unix":1619682150},"Uri":"https://github.com/rust-lang/rust/pull/84531","Title":"Ignore commented out lines when finding features","Verbose":1,"GhIssueNumber":84531,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-866405214","CommentCount":0,"Text":"This adds a mention of `-Z unpretty=mir-cfg`, a useful flag for viewing MIR as a control flow diagram.","Date":{"Unix":1619209511},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1112","Title":"Mention -Z unpretty=mir-cfg for debugging MIR","Verbose":1,"GhIssueNumber":1112,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-866306885","CommentCount":5,"Text":"When pretty printing the HIR of `if ... {} else if let ... {}` clauses, this displays it the `else if let` part as `match` it gets desugared to, the same way normal `if let` statements are currently displayed, instead of ICEing.\r\n\r\n```rust\r\npub fn main() {\r\n    if true {\r\n        // 1\r\n    } else if let a = 1 {\r\n        // 2\r\n    } else {\r\n        // 3\r\n    }\r\n}\r\n```\r\n\r\nnow gets desugared (via `rustc -Zunpretty=hir,typed src/x.rs`) to:\r\n\r\n```rust\r\n#[prelude_import]\r\nuse ::std::prelude::rust_2015::*;\r\n#[macro_use]\r\nextern crate std;\r\npub fn main() ({\r\n                   (if (true as bool)\r\n                       ({\r\n                            // 1\r\n                        } as\r\n                           ()) else {match (1 as i32) {\r\n                                         a => {\r\n                                             // 2\r\n                                         }\r\n                                         _ => {\r\n                                             // 3\r\n                                         }\r\n                                     }} as ())\r\n                    } as ())\r\n```\r\n\r\nFor comparison, this code gets HIR prettyprinted the same way before and after this change:\r\n\r\n```rust\r\npub fn main() {\r\n    if let a = 1 {\r\n        // 2\r\n    } else {\r\n        // 3\r\n    }\r\n}\r\n```\r\nturns into\r\n```rust\r\n#[prelude_import]\r\nuse ::std::prelude::rust_2015::*;\r\n#[macro_use]\r\nextern crate std;\r\npub fn main() ({\r\n                   (match (1 as i32) {\r\n                        a => {\r\n                            // 2\r\n                        }\r\n                        _ => {\r\n                            // 3\r\n                        }\r\n                    } as ())\r\n               } as ())\r\n```\r\n\r\nThis closes #82329. It closes #84434 as well, due to having the same root cause.","Date":{"Unix":1619402072},"Uri":"https://github.com/rust-lang/rust/pull/84486","Title":"Handle pretty printing of `else if let` clauses without ICEing","Verbose":1,"GhIssueNumber":84486,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-865452054","CommentCount":6,"Text":"This makes pressing <kbd>|</kbd> while some text is selected surround that text with pipes. This is useful when writing closures. \r\n\r\nIn this demo, I press <kbd>|</kbd> to easily surround some text (`predicate`) with pipe characters to create a closure. Before, this would have replaced `predicate` with just `|`.\r\n\r\n![](https://user-images.githubusercontent.com/10530973/115778847-3c257e00-a385-11eb-8c80-e0db970747db.gif)\r\n\r\n(I am getting failures when I do `cargo test` even on `master` locally (due to #8585 I think), but GH Actions is fine with this)","Date":{"Unix":1619530324},"Uri":"https://github.com/rust-lang/rust-analyzer/pull/8629","Title":"Allow pressing | to surround closure arguments in VSCode","Verbose":1,"GhIssueNumber":8629,"GhRepo":"rust-lang/rust-analyzer"},
{"Type":"gh-pr","Id":"gh-pr-863289867","CommentCount":7,"Text":"This makes Rustdoc titles for items be like \"Widget in cratename::blah::foo - Rust\". Titles for modules and other non-items are unchanged, and still read like \"cratename::blah::foo - Rust\". This makes managing several open Rustdoc tabs easier.\r\n\r\n![A screenshot of several open Rustdoc tabs](https://user-images.githubusercontent.com/10530973/115457675-d608f180-a1f2-11eb-87a8-838a32b4e3f7.png)\r\n\r\nThis also adds some tests for the new title behavior.\r\n\r\nCloses #84371.","Date":{"Unix":1619077629},"Uri":"https://github.com/rust-lang/rust/pull/84380","Title":"Write Rustdoc titles like \"x in crate::mod - Rust\"","Verbose":1,"GhIssueNumber":84380,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-853944049","CommentCount":12,"Text":"Currently hex/octal/binary literals with computed values are displayed like `0_xff_fff_fffu32`, which is invalid since underscores can't be in the middle of integer prefixes. This properly formats prefixed integers.\r\n\r\nThis causes  [`std::u32::MAX`](https://doc.rust-lang.org/std/u32/constant.MAX.html) to be displayed as\r\n```rust\r\npub const MAX: u32 = u32::MAX; // 0_xff_fff_fffu32\r\n```\r\n\r\nThis PR changes it to be displayed as:\r\n```rust\r\npub const MAX: u32 = u32::MAX; // 0xffff_ffffu32\r\n```\r\n","Date":{"Unix":1620133664},"Uri":"https://github.com/rust-lang/rust/pull/84017","Title":"Valid underscores in hex/octal/binary literal docs","Verbose":1,"GhIssueNumber":84017,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-849223365","CommentCount":1,"Text":"Currently, incorrect license metadata is causing the licence to be displayed wrong on the NPM sidebar, since NPM uses the metadata in the `package.json` to determine what to put in the sidebar:\r\n![image](https://user-images.githubusercontent.com/10530973/113420151-cc7c2e80-9396-11eb-89b6-ba065f317a27.png)","Date":{"Unix":1617373985},"Uri":"https://github.com/elpheria/rpc-websockets/pull/101","Title":"Fix license metadata in package.json","Verbose":1,"GhIssueNumber":101,"GhRepo":"elpheria/rpc-websockets"},
{"Type":"gh-pr","Id":"gh-pr-845327108","CommentCount":2,"Text":"## Pull request checklist\r\n\r\n- [x] All tests pass. Demo project builds and runs.\r\n- [X] I have resolved any merge conflicts.\r\n\r\n## What's in this pull request?\r\nThis fixes the error message that occurs when `client.toml` isn't found. Before, it incorrectly referred to the location where the config file was searched for as where an example was. This fixes it so it correctly labels the expected config location, and includes a reference to the actual example config.","Date":{"Unix":1617676388},"Uri":"https://github.com/nimiq/core-rs-albatross/pull/246","Title":"Fix error message on client.toml absence","Verbose":1,"GhIssueNumber":246,"GhRepo":"nimiq/core-rs-albatross"},
{"Type":"gh-pr","Id":"gh-pr-839015039","CommentCount":1,"Text":"The welcome pane isn't very helpful when in embedded mode, since editing isn't supported, and the person probably just wants to look at the diagram. If someone first loads Quiver in an embed, and then uses the editor later, they will see the welcome pane at that point.","Date":{"Unix":1616528805},"Uri":"https://github.com/varkor/quiver/pull/85","Title":"Don't show welcome message when embedded","Verbose":1,"GhIssueNumber":85,"GhRepo":"varkor/quiver"},
{"Type":"gh-pr","Id":"gh-pr-828364741","CommentCount":4,"Text":"This detects all Java literal types and all single word C data types, and suggests the corresponding Rust literal type.","Date":{"Unix":1615831560},"Uri":"https://github.com/rust-lang/rust/pull/82989","Title":"Custom error on literal names from other languages","Verbose":1,"GhIssueNumber":82989,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-822597760","CommentCount":1,"Text":"This updates the model URIs in the notebook to the new ones from fd6c1443c2810c207fc6ea0cea10db6abf86e25d, to make it easier to use them.","Date":{"Unix":1615172334},"Uri":"https://github.com/openai/CLIP/pull/52","Title":"Update models URIs in notebook","Verbose":1,"GhIssueNumber":52,"GhRepo":"openai/CLIP"},
{"Type":"gh-pr","Id":"gh-pr-822106165","CommentCount":1,"Text":"This is a pretty big update. The ZIP file got 65 MiB larger, and every directory has been updated or renamed.","Date":{"Unix":1627415393},"Uri":"https://github.com/reswitched/switch-oss/pull/4","Title":"11.0.0","Verbose":1,"GhIssueNumber":4,"GhRepo":"reswitched/switch-oss"},
{"Type":"gh-pr","Id":"gh-pr-821621874","CommentCount":12,"Text":"The `breakpoint` intrinsic raises a `SIGTRAP` signal. If a debugger is attached to a normal program, then `SIGTRAP` can be used to trigger breakpoints in debuggers like `gdb`. If there is no debugger, then the program exits with a message like `Trace/breakpoint trap (core dumped)`. This adds support for the intrinsic in Miri. While actually passing through the `SIGTRAP` doesn't make sense in a Miri context (if it just raised the signal normally then it would allow for debugging Miri itself, not the program being evaluated). As such, it just raises an error.","Date":{"Unix":1614948483},"Uri":"https://github.com/rust-lang/miri/pull/1733","Title":"Support breakpoint intrinsic","Verbose":1,"GhIssueNumber":1733,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-802980207","CommentCount":4,"Text":"This adds a note whenever null bytes are seen at the start of a token unexpectedly, since those tend to come from UTF-16 encoded files without a [BOM](https://en.wikipedia.org/wiki/Byte_order_mark) (if a UTF-16 BOM appears it won't be valid UTF-8, but if there is no BOM it be both valid UTF-16 and valid but garbled UTF-8). This approach was suggested in https://github.com/rust-lang/rust/issues/73979#issuecomment-653976451.\r\n\r\nCloses #73979.","Date":{"Unix":1614484564},"Uri":"https://github.com/rust-lang/rust/pull/81856","Title":"Suggest character encoding is incorrect when encountering random null bytes","Verbose":1,"GhIssueNumber":81856,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-799704328","CommentCount":4,"Text":"Before:\r\n![](https://user-images.githubusercontent.com/10530973/106663877-544de400-6572-11eb-98a4-77b6b3d9cd42.png)\r\n![image](https://user-images.githubusercontent.com/10530973/106664790-8d3a8880-6573-11eb-811f-29c4ade31848.png)\r\n\r\nAfter:\r\n![](https://user-images.githubusercontent.com/10530973/106663945-6b8cd180-6572-11eb-911a-12c69d935ee5.png) \r\n![](https://user-images.githubusercontent.com/10530973/106664403-05547e80-6573-11eb-84bf-fdd0dfc7dac8.png)\r\n\r\n\r\n\r\n","Date":{"Unix":1612352529},"Uri":"https://github.com/rust-lang/rust/pull/81681","Title":"Better styling of \"Switch result tab\" shortcut","Verbose":1,"GhIssueNumber":81681,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-787595590","CommentCount":1,"Text":"Per https://github.com/sveltejs/svelte-loader/issues/76#issuecomment-761686961, this closes #76.","Date":{"Unix":1610853935},"Uri":"https://github.com/sveltejs/svelte-loader/pull/161","Title":"Document compilationoptions","Verbose":1,"GhIssueNumber":161,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-787531411","CommentCount":4,"Text":"Webpack doesn't make it obvious how to fix this error, so we should document it in the changelog to help those upgrading to Webpack 5.","Date":{"Unix":1610910703},"Uri":"https://github.com/sveltejs/svelte-loader/pull/160","Title":"Add note about Webpack 5 workaround to changelog","Verbose":1,"GhIssueNumber":160,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-787255182","CommentCount":5,"Text":"This was partially done by #47365, but a few tests were missed in that PR.","Date":{"Unix":1610895028},"Uri":"https://github.com/rust-lang/rust/pull/81058","Title":"Re-enable all num tests on WASM","Verbose":1,"GhIssueNumber":81058,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-785319306","CommentCount":0,"Text":"This re-adds the test and makes the tests pass.","Date":{"Unix":1610563748},"Uri":"https://github.com/non25/svelte-loader/pull/2","Title":"Fix emitCss test","Verbose":1,"GhIssueNumber":2,"GhRepo":"non25/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-785285297","CommentCount":0,"Text":"Here's an example log line in the new format:\r\n```\r\n[RATE LIMITED] format string \"open-conn-track: timeout opening %v; no associated peer node\" (example: \"open-conn-track: timeout opening ([ip] => [ip]); no associated peer node\")\r\n```\r\nThis should make debugging logging issues a bit easier, and give more context as to why something was rate limited. Including an example was first mentioned at https://github.com/tailscale/tailscale/issues/1110#issuecomment-759073284.\r\n\r\nedit: updated example","Date":{"Unix":1610575044},"Uri":"https://github.com/tailscale/tailscale/pull/1122","Title":"Provide example when format string is rate limited","Verbose":1,"GhIssueNumber":1122,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-783717621","CommentCount":0,"Text":"Currently the licence name \"MIT\" is in the `package.json` but it there isn't an actual licence in the repo. #136 would have added a license but now #146 is the future, and that PR clears up the license issue by not including `webpack-virtual-modules` in-repo, so it doesn't have to affect the `LICENSE` file.","Date":{"Unix":1610468256},"Uri":"https://github.com/sveltejs/svelte-loader/pull/148","Title":"Explicitly licence under MIT","Verbose":1,"GhIssueNumber":148,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-783708863","CommentCount":0,"Text":"This should help people updating know exactly what they need to do when updating.","Date":{"Unix":1610405693},"Uri":"https://github.com/non25/svelte-loader/pull/1","Title":"Document 3.0.0 release","Verbose":1,"GhIssueNumber":1,"GhRepo":"non25/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-783565726","CommentCount":0,"Text":"Per https://github.com/sveltejs/svelte-loader/pull/140#pullrequestreview-514153012, most Svelte repos are using Github Actions now, so let's use it here too. travis-ci.org is shutting down soon and reducing support for OSS repos too. This also has the advantage of testing on Github Actions.","Date":{"Unix":1610386797},"Uri":"https://github.com/sveltejs/svelte-loader/pull/147","Title":"Move CI to Github Actions","Verbose":1,"GhIssueNumber":147,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-777160903","CommentCount":4,"Text":"This is what every other DNS resolver I could find does, so `tsdns` should do it as well. This also helps avoid weird error messages about records don't exist being unimplemented, and thus fixes #848.\r\n\r\nnotes:\r\n- `go fmt` makes the indentation on lines 218/219 look wrong, but AFAIK there's no way to make `go fmt` handle it right.\r\n- `go.sum` wasn't correctly regenerated after 14af6773324c95488f9f0a68704e637c7d642e70, but I didn't include the updated version in this PR to avoid merge conflicts.","Date":{"Unix":1610493175},"Uri":"https://github.com/tailscale/tailscale/pull/1079","Title":"Return NOERROR instead of NOTIMP for most records","Verbose":1,"GhIssueNumber":1079,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-769256088","CommentCount":0,"Text":"This caused some confusion in issue #460, since usually raw format strings aren't printed directly. Hopefully by directly logging that they are intended to be raw format strings, this will be more clear. Rate limited format strings now look like\r\n\r\n```\r\n[RATE LIMITED] format string \"control: sendStatus: %s: %v\"\r\n```\r\n\r\nCloses #460.","Date":{"Unix":1608414555},"Uri":"https://github.com/tailscale/tailscale/pull/1032","Title":"Clarify that raw format strings are intentional","Verbose":1,"GhIssueNumber":1032,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-765726569","CommentCount":0,"Text":"This is actually already required, this just updates `go.mod` with that fact. If you try and fail to build Tailscale with an outdated Go version, an error like this is printed, which should hopefully make building Tailscale easier:\r\n```\r\nnote: module requires Go 1.15\r\n```","Date":{"Unix":1607906186},"Uri":"https://github.com/tailscale/tailscale/pull/1015","Title":"Require at least Go 1.15 in go.mod","Verbose":1,"GhIssueNumber":1015,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-764565108","CommentCount":0,"Text":"These removed lines ignore built files that don't exist anymore, and just serve to clutter up the `.gitignore` file. (I was initially confused when I saw those lines, since I (correctly) thought that the only Tailscale binaries were `tailscale` and `tailscaled`):\r\n- `taillogin` was removed in d052586\r\n- `relaynode` was removed in a56e853","Date":{"Unix":1607818319},"Uri":"https://github.com/tailscale/tailscale/pull/1011","Title":"Remove unused .gitignore lines","Verbose":1,"GhIssueNumber":1011,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-726816262","CommentCount":0,"Text":"This makes it so we test the same versions as [Svelte itself](https://github.com/sveltejs/svelte/blob/10f68289ba55a21d47e45af24175eaae5b04149a/.github/workflows/ci.yml#L9).","Date":{"Unix":1603312530},"Uri":"https://github.com/sveltejs/svelte-loader/pull/140","Title":"Test on Node v14","Verbose":1,"GhIssueNumber":140,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-715724811","CommentCount":1,"Text":"The current link 404s, this fixes the post so the URL points to the actual forum thread.","Date":{"Unix":1601995468},"Uri":"https://github.com/rust-lang/blog.rust-lang.org/pull/704","Title":"Fix URL for internals thread on 1.47.0 post","Verbose":1,"GhIssueNumber":704,"GhRepo":"rust-lang/blog.rust-lang.org"},
{"Type":"gh-pr","Id":"gh-pr-712095614","CommentCount":0,"Text":"This prevents an extra vertical scrollbar from being displayed at the bottom when opening/closing the left sidebar. There is still a vertical scrollbar displayed when the text is wider than the left sidebar.\r\n\r\nBefore:\r\n<img src=\"https://user-images.githubusercontent.com/10530973/94712486-8b3b9100-0317-11eb-821f-792f388b59fa.gif\" width=\"400\"/> <img src=\"https://user-images.githubusercontent.com/10530973/94712492-8d055480-0317-11eb-9302-b99d3ec29d5a.gif\" width=\"400\"/>\r\n\r\nAfter:\r\n<img src=\"https://user-images.githubusercontent.com/10530973/94712530-9abada00-0317-11eb-92c3-8d0a5d8caa93.gif\" width=\"400\"/> <img src=\"https://user-images.githubusercontent.com/10530973/94712537-9d1d3400-0317-11eb-9e68-7ba36de8d6ce.gif\" width=\"400\"/>","Date":{"Unix":1601489742},"Uri":"https://github.com/athensresearch/athens/pull/391","Title":"fix(left-sidebar) extra scrollbar when opening left sidebar","Verbose":1,"GhIssueNumber":391,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-711400112","CommentCount":0,"Text":"This stops the creation time from showing as (unknown date) in the list of pages when a page was created via link.","Date":{"Unix":1601417944},"Uri":"https://github.com/athensresearch/athens/pull/386","Title":"Set creation time when a page is created via link","Verbose":1,"GhIssueNumber":386,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-694180442","CommentCount":0,"Text":"Since `jsbrain` refuses to process files with unrecognised parameters, it gave errors when handling these files. I am now able to successfully generate graphs for these files through `jsbrain_server`.","Date":{"Unix":1599357907},"Uri":"https://github.com/beeminder/road/pull/155","Title":"Remove old \"exprd\" parameter from test .bb files","Verbose":1,"GhIssueNumber":155,"GhRepo":"beeminder/road"},
{"Type":"gh-pr","Id":"gh-pr-618515985","CommentCount":1,"Text":"This incorporates several minor UI changes:\r\n- `style.cljs` is now formatted idomatically.\r\n- Fixed two lint warnings about the order of requires.\r\n- There is now a loading message while the JavaScript loads.\r\n- Alternating rows in the homepage table are light gray to make it easier to see across a row.\r\n- For some reason, some dates are stored `0` instead of an actual date. These are now displayed as \"(unknown date)\" in a dark gray.\r\n- Added a gap between links in the left sidebar.\r\n","Date":{"Unix":1589808100},"Uri":"https://github.com/athensresearch/athens/pull/57","Title":"Several minor UI improvements","Verbose":1,"GhIssueNumber":57,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-617832699","CommentCount":1,"Text":"See #10. This uses [Garden](https://github.com/noprompt/garden) for some basic styling. Now, the body uses the browser's default sans-serif font, instead of not specifying one (some browsers use Time New Roman in this case, some use Arial, some use Tinos (a Times New Roman clone)). Also, it makes sure there is enough room for the dates on the home page.\r\nI'm not very experienced with Clojure, but it does appear to work correctly to me.\r\n\r\n![image](https://user-images.githubusercontent.com/10530973/81877876-4b386500-9554-11ea-9814-37c228677579.png)\r\n","Date":{"Unix":1589459046},"Uri":"https://github.com/athensresearch/athens/pull/54","Title":"Add basic styling","Verbose":1,"GhIssueNumber":54,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-604337128","CommentCount":2,"Text":"This adds `Roman::value_checked`. Unlike `Roman::value`, this returns an `Err` instead of panicking. I also added some tests to ensure it behaves correctly.","Date":{"Unix":1587821322},"Uri":"https://github.com/ogham/rust-numerals/pull/5","Title":"Add Roman::value_checked","Verbose":1,"GhIssueNumber":5,"GhRepo":"ogham/rust-numerals"},
{"Type":"gh-pr","Id":"gh-pr-589671692","CommentCount":1,"Text":"Adds documentation examples for ``JsonValue::members`` and ``JsonValue::entries``.","Date":{"Unix":1585518173},"Uri":"https://github.com/maciejhirsz/json-rust/pull/182","Title":"Add documentation examples for members and entries","Verbose":1,"GhIssueNumber":182,"GhRepo":"maciejhirsz/json-rust"},
{"Type":"gh-pr","Id":"gh-pr-470708973","CommentCount":0,"Text":"","Date":{"Unix":1563653287},"Uri":"https://github.com/MatthewDLudwig/NimiqVoteServer/pull/1","Title":"Add info and usage instructions to README","Verbose":1,"GhIssueNumber":1,"GhRepo":"MatthewDLudwig/NimiqVoteServer"},
{"Type":"gh-pr","Id":"gh-pr-463258847","CommentCount":0,"Text":"","Date":{"Unix":1562172094},"Uri":"https://github.com/steemit/steem/pull/3393","Title":"Several documentation improvements","Verbose":1,"GhIssueNumber":3393,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-463248675","CommentCount":0,"Text":"Closes #3384.","Date":{"Unix":1562172266},"Uri":"https://github.com/steemit/steem/pull/3392","Title":"Impact @steem.dao by sps_fund operation","Verbose":1,"GhIssueNumber":3392,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-462856309","CommentCount":1,"Text":"It got broke when it was moved to the ``devs`` directory.","Date":{"Unix":1563909832},"Uri":"https://github.com/steemit/steem/pull/3388","Title":"Fix URI to testing.md","Verbose":1,"GhIssueNumber":3388,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-462349516","CommentCount":0,"Text":"","Date":{"Unix":1562002375},"Uri":"https://github.com/steemit/steem/pull/3385","Title":"Fix typo: SDB -> SBD","Verbose":1,"GhIssueNumber":3385,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-451093260","CommentCount":0,"Text":"","Date":{"Unix":1559433647},"Uri":"https://github.com/nimiq/nimiq-utils/pull/23","Title":"Add icemining pool","Verbose":1,"GhIssueNumber":23,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-450561347","CommentCount":0,"Text":"Currently the net module doesn't compile when the ``--taintMode:on`` flag is passed to the compiler. Not well tested, I've only tried it by patching my local stdlib files.","Date":{"Unix":1559378681},"Uri":"https://github.com/nim-lang/Nim/pull/11360","Title":"Make net module compile with --taintMode:on","Verbose":1,"GhIssueNumber":11360,"GhRepo":"nim-lang/Nim"},
{"Type":"gh-pr","Id":"gh-pr-448391198","CommentCount":1,"Text":"This was causing the code not to compile on recent Nim.","Date":{"Unix":1595939546},"Uri":"https://github.com/stisa/webgl/pull/2","Title":"Fix logging code on latest Nim","Verbose":1,"GhIssueNumber":2,"GhRepo":"stisa/webgl"},
{"Type":"gh-pr","Id":"gh-pr-430708687","CommentCount":0,"Text":"SSH URLs only work for those with push access to this repo, HTTPS urls work for everyone.","Date":{"Unix":1554977652},"Uri":"https://github.com/nimiq/hub/pull/201","Title":"Make clone URL work for those without push access","Verbose":1,"GhIssueNumber":201,"GhRepo":"nimiq/hub"},
{"Type":"gh-pr","Id":"gh-pr-411189474","CommentCount":1,"Text":"Closes #60.","Date":{"Unix":1550411423},"Uri":"https://github.com/nim-lang/opengl/pull/61","Title":"Fix x11 import","Verbose":1,"GhIssueNumber":61,"GhRepo":"nim-lang/opengl"},
{"Type":"gh-pr","Id":"gh-pr-381954360","CommentCount":0,"Text":"Improves the manifest read by Chrome.","Date":{"Unix":1542556294},"Uri":"https://github.com/MattyIce/steem-keychain/pull/54","Title":"Improve manifest","Verbose":1,"GhIssueNumber":54,"GhRepo":"MattyIce/steem-keychain"},
{"Type":"gh-pr","Id":"gh-pr-374641349","CommentCount":0,"Text":"Improves the language used in ``README.md``","Date":{"Unix":1540645422},"Uri":"https://github.com/WebDollar/Node-WebDollar/pull/212","Title":"Improve language used in README","Verbose":1,"GhIssueNumber":212,"GhRepo":"WebDollar/Node-WebDollar"},
{"Type":"gh-pr","Id":"gh-pr-374640162","CommentCount":0,"Text":"Improves formatting consistency for geolocation address object","Date":{"Unix":1540645438},"Uri":"https://github.com/WebDollar/Node-WebDollar/pull/211","Title":"Improve formatting consistency for geolocation","Verbose":1,"GhIssueNumber":211,"GhRepo":"WebDollar/Node-WebDollar"},
{"Type":"gh-pr","Id":"gh-pr-369752637","CommentCount":1,"Text":"See https://github.com/steemit/condenser/pull/3058. This account has been \"deleted\" (blacklisted by Condenser), because the user wanted their account closed.","Date":{"Unix":1543251920},"Uri":"https://github.com/steemit/redeemer-irredeemables/pull/35","Title":"Add \"deleted\" account","Verbose":1,"GhIssueNumber":35,"GhRepo":"steemit/redeemer-irredeemables"},
{"Type":"gh-pr","Id":"gh-pr-367456490","CommentCount":0,"Text":"This adds the UP wallet. UP tokens are created by @steem-1up sending ``custom_json`` operations with an id of ``1up``. Moderators can make posts containing ``!1upsend 123.456``, and @steem-1up will automatically detect and broadcast the token creation, as soon as an admin upvotes the moderator's comment (with any weight) or approves it from an admin UI on the website. Note that the admin UI may miss a post if the state cache is cleared, or if the server isn't running when the post is made. However, voting the moderator's post should always work. \r\n\r\nOn the admin page, it requires the posting key of @steem-1up, to broadcast the ``custom_json`` op.\r\n\r\nAdditionally, I added a script to pay out to delegators, based on [postpromoter's script](https://github.com/MattyIce/postpromoter/blob/master/delegators.js), as `delegators.js`. Run it for details of how to use it. Note that delegation payouts are rounded to have 5 decimal places. This shouldn't make much of a difference to payouts. It will send 200000 UP total tokens to delegators, based on how much they have delegated. (if you've delegated 50SP out of 100SP total, you will get 100k UP tokens).\r\n\r\n## Screenshots\r\n\r\n### Admin page\r\n![Admin page](https://user-images.githubusercontent.com/10530973/46571571-41e12280-c945-11e8-9b40-0418d66a0370.png)\r\n\r\n### User wallet page\r\n![Wallet page](https://user-images.githubusercontent.com/10530973/46571581-5a513d00-c945-11e8-9aa8-1a8d994d933a.png)\r\n\r\n### Top UP holders (lists all of them)\r\n![Top holders](https://user-images.githubusercontent.com/10530973/46571583-65a46880-c945-11e8-95d4-13c0c142b955.png)","Date":{"Unix":1540879520},"Uri":"https://github.com/therealFlauwy/1UP/pull/51","Title":"Add UP token support","Verbose":1,"GhIssueNumber":51,"GhRepo":"therealFlauwy/1UP"},
{"Type":"gh-pr","Id":"gh-pr-360587229","CommentCount":1,"Text":"Fixes #98\r\n\r\n### Changes\r\n\r\nSummary of changes you made.\r\n\r\n* Option to enable beta is removed\r\n* Users aren't redirected if they have beta enabled\r\n\r\n### Test plan\r\n\r\nExplain how to test changes you made.\r\n\r\n* [ ] Go to settings page\r\n* [ ] Try (and fail) to enable beta mode","Date":{"Unix":1537090167},"Uri":"https://github.com/surpassinggoogle/UlogsV2/pull/122","Title":"Don't let users enable beta option","Verbose":1,"GhIssueNumber":122,"GhRepo":"surpassinggoogle/UlogsV2"},
{"Type":"gh-pr","Id":"gh-pr-360109649","CommentCount":0,"Text":"","Date":{"Unix":1536894062},"Uri":"https://github.com/bonustrack/steemscript/pull/21","Title":"Add Ulogs to list of apps","Verbose":1,"GhIssueNumber":21,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-358293146","CommentCount":0,"Text":"Fixes a typo in the filename of the Git gui**l**delines file","Date":{"Unix":1536599104},"Uri":"https://github.com/steemit/steem/pull/2880","Title":"Fix typo","Verbose":1,"GhIssueNumber":2880,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-354433694","CommentCount":0,"Text":"Changes from v1.0.2:\r\n- Adds Partiko, SteemPress, Tasteem, and APPICS info\r\n- Adds SteemPeak info and URL scheme\r\n- Removes trailing slash from Steemhunt, Steemia, Memeit.LOL, and Hede.io homepage URLs \r\n\r\nCould you deploy this to NPM please?","Date":{"Unix":1538561930},"Uri":"https://github.com/bonustrack/steemscript/pull/18","Title":"Bump version to 1.1.0","Verbose":1,"GhIssueNumber":18,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-345860977","CommentCount":0,"Text":"mineNIM website: https://minenim.org/","Date":{"Unix":1533372079},"Uri":"https://github.com/nimiq/nimiq-utils/pull/14","Title":"Add mineNIM Pool and Nimiq Tip Bot to address book","Verbose":1,"GhIssueNumber":14,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-342527475","CommentCount":1,"Text":"Adds changes from #15, and bumps up the version number from 1.0.1 to 1.0.2. Could you deploy this to NPM, please?","Date":{"Unix":1531994115},"Uri":"https://github.com/bonustrack/steemscript/pull/16","Title":"Release 1.0.2","Verbose":1,"GhIssueNumber":16,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-342414217","CommentCount":0,"Text":"Makes Zappl a template. \r\n\r\nFor steemit/condenser#2947.","Date":{"Unix":1531933760},"Uri":"https://github.com/bonustrack/steemscript/pull/15","Title":"Make Zappl templated","Verbose":1,"GhIssueNumber":15,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-329255297","CommentCount":0,"Text":"Adds Nimiq Foundation and Charity to address book.","Date":{"Unix":1529314663},"Uri":"https://github.com/nimiq/nimiq-utils/pull/11","Title":"Add Nimiq Foundation and Charity to address book","Verbose":1,"GhIssueNumber":11,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-326672023","CommentCount":0,"Text":"Adds my faucet to the address book.","Date":{"Unix":1527586517},"Uri":"https://github.com/nimiq/nimiq-utils/pull/10","Title":"Add Nimiq Faucet to address book","Verbose":1,"GhIssueNumber":10,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-326327251","CommentCount":0,"Text":"","Date":{"Unix":1528022561},"Uri":"https://github.com/nimiq/community/pull/92","Title":"Escape path on windows for example code, with installer","Verbose":1,"GhIssueNumber":92,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320994754","CommentCount":0,"Text":"Should be ``relayTransaction``, ``mempool.pushTransaction`` is for light clients.","Date":{"Unix":1525748199},"Uri":"https://github.com/nimiq/community/pull/89","Title":"Fix code in latest post","Verbose":1,"GhIssueNumber":89,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320982461","CommentCount":0,"Text":"Basically just [this post](https://smittyvb.github.io/nimiq-dev-tips//2018/05/07/sending-nim.html) by me.","Date":{"Unix":1525735818},"Uri":"https://github.com/nimiq/community/pull/88","Title":"Add post: Sending NIM with the Nimiq API","Verbose":1,"GhIssueNumber":88,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320123563","CommentCount":0,"Text":"Fixes a few more files, using the link from 36589bd. No more #secret-nimiq-chat.","Date":{"Unix":1525412644},"Uri":"https://github.com/nimiq/community/pull/87","Title":"Update discord link in more files","Verbose":1,"GhIssueNumber":87,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-315652659","CommentCount":0,"Text":"I made [a faucet](https://nimiq-faucet.surge.sh/).","Date":{"Unix":1524582914},"Uri":"https://github.com/nimiq/community/pull/85","Title":"Add Nimiq Faucet","Verbose":1,"GhIssueNumber":85,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-314853694","CommentCount":0,"Text":"Fixes dead links in README, as nimiq.com/wallet is now safe.nimiq.com, and the miner has moved to miner.nimiq.com","Date":{"Unix":1526927737},"Uri":"https://github.com/nimiq-network/developer-reference/pull/21","Title":"Fix 404 links in README","Verbose":1,"GhIssueNumber":21,"GhRepo":"nimiq-network/developer-reference"},
{"Type":"gh-pr","Id":"gh-pr-278645331","CommentCount":3,"Text":"netify.chainbb.com, doesn't exist. It appears that it used to be some sort of testing domain, and is no longer active. It's still mentioned in a meta tag, though. This fixes it. Having the wrong meta tags will make Facebook and Twitter, the main users of Open Graph data, misunderstand, or be confused by, the meta tags on ChainBB. \r\n","Date":{"Unix":1512205072},"Uri":"https://github.com/aaroncox/chainbb-frontend/pull/8","Title":"Use correct domain in meta tag","Verbose":1,"GhIssueNumber":8,"GhRepo":"aaroncox/chainbb-frontend"},
{"Type":"gh-pr","Id":"gh-pr-276789127","CommentCount":2,"Text":"Changes:\r\n- If username being attempted to have money transfer to, has a username of less than 3 characters, say that the username is too short.\r\n- Same thing for >16 characters.\r\n\r\n\r\n","Date":{"Unix":1512830906},"Uri":"https://github.com/busyorg/busy/pull/1115","Title":"More accurate error messages for Steem/SBD transfers","Verbose":1,"GhIssueNumber":1115,"GhRepo":"busyorg/busy"},
{"Type":"gh-pr","Id":"gh-pr-275889258","CommentCount":3,"Text":"This adds steemd.com to the sidebar, on the account page.\r\n![Account sidebar image.](https://vgy.me/jMYmRM.png)","Date":{"Unix":1511305632},"Uri":"https://github.com/aaroncox/chainbb-frontend/pull/7","Title":"Add steemd.com to \"View this account on...\" account sidebar ","Verbose":1,"GhIssueNumber":7,"GhRepo":"aaroncox/chainbb-frontend"},
{"Type":"gh-pr","Id":"gh-pr-271187161","CommentCount":4,"Text":"Only allow one vote per person","Date":{"Unix":1509797132},"Uri":"https://github.com/Chaosthebot/chaos2/pull/5","Title":"Fix bug: Only allow one vote per person","Verbose":1,"GhIssueNumber":5,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271186950","CommentCount":4,"Text":"Added the correct URLs","Date":{"Unix":1509796802},"Uri":"https://github.com/Chaosthebot/chaos2/pull/4","Title":"Fix package.json","Verbose":1,"GhIssueNumber":4,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271150137","CommentCount":4,"Text":"","Date":{"Unix":1509754436},"Uri":"https://github.com/Chaosthebot/chaos2/pull/3","Title":"Add newline","Verbose":1,"GhIssueNumber":3,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271128226","CommentCount":6,"Text":"","Date":{"Unix":1509746823},"Uri":"https://github.com/Chaosthebot/chaos2/pull/2","Title":"Fix README","Verbose":1,"GhIssueNumber":2,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271127279","CommentCount":4,"Text":"Adds a title","Date":{"Unix":1509745748},"Uri":"https://github.com/Chaosthebot/chaos2/pull/1","Title":"Add title","Verbose":1,"GhIssueNumber":1,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-236992174","CommentCount":5,"Text":"","Date":{"Unix":1497915614},"Uri":"https://github.com/Chaosthebot/Chaos/pull/560","Title":"Update README to indicate that we're dead.","Verbose":1,"GhIssueNumber":560,"GhRepo":"Chaosthebot/Chaos"},
{"Type":"gh-pr","Id":"gh-pr-232355569","CommentCount":9,"Text":"Makes the text \"chaosbot's logs\" in the README a link to the logs, where people can find the meritocracy information. ","Date":{"Unix":1496183464},"Uri":"https://github.com/Chaosthebot/Chaos/pull/403","Title":"Linkify \"ChaoBot's logs\"","Verbose":1,"GhIssueNumber":403,"GhRepo":"Chaosthebot/Chaos"},
{"Type":"gh-pr","Id":"gh-pr-231895573","CommentCount":4,"Text":"Before, this code used Object.values, which is only supported in Chrome and Firefox. This new code works replaces the line by mapping the keys array to the variable with all the data, to get the values for each key, causing the same effect. This is supported in almost all modern browsers, and IE9+. ","Date":{"Unix":1496054534},"Uri":"https://github.com/Chaosthebot/Chaos/pull/343","Title":"More browser support for voters.html","Verbose":1,"GhIssueNumber":343,"GhRepo":"Chaosthebot/Chaos"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1709077474},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=39531834","Id":"hn-post-39531834","Text":"Your math is wrong - it&#x27;s $4B √∑ 815k residents √∑ $27k = 0.18 used Tesla Model 3s per resident. (you accidentally used 27k as both the price and the population)"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1708970404},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=39514599","Id":"hn-post-39514599","Text":"JSTOR doesn&#x27;t get any tax benefit for doing this because they&#x27;re already fully exempt from US income tax - their parent, Ithaka, is a 501(c)(3) non-profit (see <a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ithaka_Harbors\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ithaka_Harbors</a>)."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1706052069},"Comments":99,"Uri":"https://news.ycombinator.com/item?id=39111406","Id":"hn-post-39111406","Title":"A jump into the middle of an instruction from nowhere (2023)","Score":131},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1705933933},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=39089894","Id":"hn-post-39089894","Text":"Author here, I removed the background."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1705857709},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=39080422","Id":"hn-post-39080422","Title":"GPT-3.5 crashes when it thinks about useRalativeImagePath too much","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1698108519},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=37993648","Id":"hn-post-37993648","Text":"Grey market phones aren&#x27;t stolen. Samsung sells phones cheaper in some regions, so arbitrageurs buy them cheap in one region and resell them at a higher price in Mexico. Samsung wouldn&#x27;t sell region-unlocked phones at the cheaper price because they want to make money."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1697589937},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=37923542","Id":"hn-post-37923542","Text":"Ah fuck, I grepped the YouTube transcript for WASM&#x2F;WebAssembly but I guess youtube&#x27;s automatic captions aren&#x27;t very good. I feel silly now for not watching the video before commenting."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1697587889},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=37923296","Id":"hn-post-37923296","Text":"fun trivia: in WebAssembly it&#x27;s valid to read&#x2F;write to memory address 0."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1697307650},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=37882862","Id":"hn-post-37882862","Text":"The FDIC almost only does bank closures on Friday (see <a href=\"https:&#x2F;&#x2F;www.fdic.gov&#x2F;resources&#x2F;resolutions&#x2F;bank-failures&#x2F;failed-bank-list&#x2F;\" rel=\"nofollow noreferrer\">https:&#x2F;&#x2F;www.fdic.gov&#x2F;resources&#x2F;resolutions&#x2F;bank-failures&#x2F;fai...</a> - there were a few non-Friday closures <i>after</i> the SVB failure but none before), the guess that SVB would be closed on Friday wasn&#x27;t that fortuitous."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1694901160},"Comments":3,"Uri":"https://news.ycombinator.com/item?id=37539096","Id":"hn-post-37539096","Title":"Lodash Migrates to Bun","Score":3},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1694901130},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=37539091","Id":"hn-post-37539091","Text":"The bigger news is that Lodash is migrating from Node.js to Bun: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;lodash&#x2F;lodash&#x2F;commit&#x2F;97d4a2fe193a66f5f96d7b813bed96b35b5abf15#diff-9ef15c0955375fd602c4e30fb95794a5d5b33909fe57f0e79127afa10ce578f3\">https:&#x2F;&#x2F;github.com&#x2F;lodash&#x2F;lodash&#x2F;commit&#x2F;97d4a2fe193a66f5f96d...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1692452478},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=37188693","Id":"hn-post-37188693","Text":"The (relevant parts of the) legislation haven&#x27;t come into force yet - most of the sections of the Online News Act don&#x27;t come into force until the &quot;a day to be fixed by order of the Governor in Council&quot;. Facebook is preemptively complying with the law before it&#x27;s brought into force, but Google is waiting until it actually comes into effect (<a href=\"https:&#x2F;&#x2F;blog.google&#x2F;intl&#x2F;en-ca&#x2F;company-news&#x2F;outreach-initiatives&#x2F;an-update-on-canadas-bill-c-18-and-our-search-and-news-products&#x2F;\" rel=\"nofollow noreferrer\">https:&#x2F;&#x2F;blog.google&#x2F;intl&#x2F;en-ca&#x2F;company-news&#x2F;outreach-initiat...</a>)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1687577748},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=36455275","Id":"hn-post-36455275","Text":"In a legal context &quot;highway&quot; has a broader meaning than in everyday use. From the link above: highway &quot;includes every road, street, lane or right of way designed or intended for or used by the general public for the passage of vehicles&quot;"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1687232134},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=36399422","Id":"hn-post-36399422","Text":"Reverted: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;easylist&#x2F;easylist&#x2F;commit&#x2F;5deb8021949ef22547cb6d0c8bc58692ca3a202e\">https:&#x2F;&#x2F;github.com&#x2F;easylist&#x2F;easylist&#x2F;commit&#x2F;5deb8021949ef225...</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1679676013},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=35291691","Id":"hn-post-35291691","Title":"The case of the jump into the middle of an instruction from nowhere (2023)","Score":2},
{"Type":"itch","ItchType":"game","Id":"itch-640033","Text":"Shoot the red enemies with your duel-sided laser, while avoiding the good guys!","Thumb":"https://img.itch.zone/aW1nLzM0MjYwMTMucG5n/315x250%23c/H3yk6W.png","Date":{"Unix":1589151200},"Uri":"https://smitop.itch.io/doubleshoot","Title":"Doubleshoot"},
{"Type":"itch","ItchType":"game","Id":"itch-653142","Text":"Defend the pencil in the middle!","Thumb":"https://img.itch.zone/aW1nLzM1MDYyMTYucG5n/315x250%23c/8K91Cj.png","Date":{"Unix":1590361804},"Uri":"https://smitop.itch.io/pencil-defense","Title":"Pencil Defense"},
{"Type":"itch","ItchType":"game","Id":"itch-1567902","Thumb":"https://img.itch.zone/aW1nLzkxNTQ4MjIucG5n/315x250%23c/tgD5Fl.png","Date":{"Unix":1654906969},"Uri":"https://smitop.itch.io/tilt2","Title":"Tilt2"},
{"Type":"itch","ItchType":"game","Id":"itch-694159","Text":"You can freeze time for a few seconds","Thumb":"https://img.itch.zone/aW1nLzM4MzUxNTIucG5n/315x250%23c/5mWtCE.png","Date":{"Unix":1597699807},"Uri":"https://smitop.itch.io/time-freezer","Title":"Time Freezer"},
{"Type":"itch","ItchType":"game","Id":"itch-630707","Text":"You have a limited amount of movement to beat 4 levels.","Thumb":"https://img.itch.zone/aW1nLzMzNjY2NDMucG5n/315x250%23c/5v4dgM.png","Date":{"Unix":1588371722},"Uri":"https://smitop.itch.io/use-your-distance","Title":"Use your distance"},
{"Type":"scrproj","Title":"Unthrottled recursion demo","Id":"scr483168949","Text":"","Thumb":"/scr-thumbs/483168949.png","Uri":"https://scratch.mit.edu/projects/483168949/","Date":{"Unix":1612396576},"Verbose":1},
{"Type":"scrproj","Title":"Find me!","Id":"scr162301151","Text":"","Thumb":"/scr-thumbs/162301151.png","Uri":"https://scratch.mit.edu/projects/162301151/","Date":{"Unix":1533831930},"Verbose":1},
{"Type":"scrproj","Title":"Follow the instructions!","Id":"scr78343148","Text":"","Thumb":"/scr-thumbs/78343148.png","Uri":"https://scratch.mit.edu/projects/78343148/","Date":{"Unix":1533736796},"Verbose":1},
{"Type":"scrproj","Title":"Check/X Animation","Id":"scr102442046","Text":"","Thumb":"/scr-thumbs/102442046.png","Uri":"https://scratch.mit.edu/projects/102442046/","Date":{"Unix":1533736447},"Verbose":1},
{"Type":"scrproj","Title":"Collect The Apples","Id":"scr152397556","Text":"","Thumb":"/scr-thumbs/152397556.png","Uri":"https://scratch.mit.edu/projects/152397556/","Date":{"Unix":1500893831},"Verbose":1},
{"Type":"scrproj","Title":"Infinity Jumper v2 with restart button","Id":"scr165434982","Text":"Like the original (by @sohan2), but with a restart button.\n","Thumb":"/scr-thumbs/165434982.png","Uri":"https://scratch.mit.edu/projects/165434982/","Date":{"Unix":1497044063},"Verbose":1},
{"Type":"scrproj","Title":"test","Id":"scr53263894","Text":"","Thumb":"/scr-thumbs/53263894.png","Uri":"https://scratch.mit.edu/projects/53263894/","Date":{"Unix":1461961744},"Verbose":1},
{"Type":"scrproj","Title":"Drag the scripts","Id":"scr97804016","Text":"","Thumb":"/scr-thumbs/97804016.png","Uri":"https://scratch.mit.edu/projects/97804016/","Date":{"Unix":1455404144},"Verbose":1},
{"Type":"scrproj","Title":"Cool Shapes","Id":"scr94459860","Text":"","Thumb":"/scr-thumbs/94459860.png","Uri":"https://scratch.mit.edu/projects/94459860/","Date":{"Unix":1453127358},"Verbose":1},
{"Type":"scrproj","Title":"Cool Spinny Thing","Id":"scr93017305","Text":"","Thumb":"/scr-thumbs/93017305.png","Uri":"https://scratch.mit.edu/projects/93017305/","Date":{"Unix":1452204247},"Verbose":1},
{"Type":"scrproj","Title":"B-Ball hoops test","Id":"scr90883744","Text":"just a test to see if @cartoonnetwork is a bot.","Thumb":"/scr-thumbs/90883744.png","Uri":"https://scratch.mit.edu/projects/90883744/","Date":{"Unix":1449702383},"Verbose":1},
{"Type":"scrproj","Title":"Clickbait topic titles","Id":"scr87308243","Text":"","Thumb":"/scr-thumbs/87308243.png","Uri":"https://scratch.mit.edu/projects/87308243/","Date":{"Unix":1447448542},"Verbose":1},
{"Type":"scrproj","Title":"Trying to get search to find this","Id":"scr86493133","Text":"Testing...","Thumb":"/scr-thumbs/86493133.png","Uri":"https://scratch.mit.edu/projects/86493133/","Date":{"Unix":1446640372},"Verbose":1},
{"Type":"scrproj","Title":"Custom Blocks with same name ","Id":"scr79617554","Text":"","Thumb":"/scr-thumbs/79617554.png","Uri":"https://scratch.mit.edu/projects/79617554/","Date":{"Unix":1443649372},"Verbose":1},
{"Type":"scrproj","Title":"Harder Pong","Id":"scr77518176","Text":"Based on the 2014 Hour Of Code pong game.","Thumb":"/scr-thumbs/77518176.png","Uri":"https://scratch.mit.edu/projects/77518176/","Date":{"Unix":1442666267},"Verbose":1},
{"Type":"scrproj","Title":"testing...","Id":"scr75148760","Text":"-just testing remixing\n-removed everything from @Glitterglamz101's project","Thumb":"/scr-thumbs/75148760.png","Uri":"https://scratch.mit.edu/projects/75148760/","Date":{"Unix":1441286518},"Verbose":1},
{"Type":"scrproj","Title":"Square Game","Id":"scr72765066","Text":"","Thumb":"/scr-thumbs/72765066.png","Uri":"https://scratch.mit.edu/projects/72765066/","Date":{"Unix":1439418035},"Verbose":1},
{"Type":"scrproj","Title":"Text Display","Id":"scr72898794","Text":"","Thumb":"/scr-thumbs/72898794.png","Uri":"https://scratch.mit.edu/projects/72898794/","Date":{"Unix":1439409713},"Verbose":1},
{"Type":"scrproj","Title":"5 broadcasts","Id":"scr71348908","Text":"","Thumb":"/scr-thumbs/71348908.png","Uri":"https://scratch.mit.edu/projects/71348908/","Date":{"Unix":1437737662},"Verbose":1},
{"Type":"scrproj","Title":"Avoid the black","Id":"scr71277988","Text":"Made levels 1-8\n","Thumb":"/scr-thumbs/71277988.png","Uri":"https://scratch.mit.edu/projects/71277988/","Date":{"Unix":1437673520},"Verbose":1},
{"Type":"scrproj","Title":"ask and move","Id":"scr71095788","Text":"","Thumb":"/scr-thumbs/71095788.png","Uri":"https://scratch.mit.edu/projects/71095788/","Date":{"Unix":1437514794},"Verbose":1},
{"Type":"scrproj","Title":"Typewriter Scripts","Id":"scr45029810","Text":"","Thumb":"/scr-thumbs/45029810.png","Uri":"https://scratch.mit.edu/projects/45029810/","Date":{"Unix":1436565846},"Verbose":1},
{"Type":"scrproj","Title":"Gravity1 - Bounce Working","Id":"scr69974858","Text":"Just a demo that it does work - only one time per flag press, though. Uses the same code made by @KEGroovn","Thumb":"/scr-thumbs/69974858.png","Uri":"https://scratch.mit.edu/projects/69974858/","Date":{"Unix":1436473214},"Verbose":1},
{"Type":"scrproj","Title":"Canoe Game","Id":"scr69621500","Text":"-attempting to make AI for this","Thumb":"/scr-thumbs/69621500.png","Uri":"https://scratch.mit.edu/projects/69621500/","Date":{"Unix":1436274223},"Verbose":1},
{"Type":"scrproj","Title":"Scratch in backround demo","Id":"scr69610416","Text":"","Thumb":"/scr-thumbs/69610416.png","Uri":"https://scratch.mit.edu/projects/69610416/","Date":{"Unix":1436215584},"Verbose":1},
{"Type":"scrproj","Title":"Crack the Passkey! cracker","Id":"scr69221456","Text":"Original by @iamunknown2.\nAttempts to crack a hash made by it. Just brute forces it.\n-updated to allow for 10 digits\n-uses new algorithm ","Thumb":"/scr-thumbs/69221456.png","Uri":"https://scratch.mit.edu/projects/69221456/","Date":{"Unix":1435872234},"Verbose":1},
{"Type":"scrproj","Title":"Cool Unicode Characters","Id":"scr68404874","Text":" characters from http://unicode-table.com/en/","Thumb":"/scr-thumbs/68404874.png","Uri":"https://scratch.mit.edu/projects/68404874/","Date":{"Unix":1435323804},"Verbose":1},
{"Type":"scrproj","Title":"Cloning Game","Id":"scr51757910","Text":"","Thumb":"/scr-thumbs/51757910.png","Uri":"https://scratch.mit.edu/projects/51757910/","Date":{"Unix":1429965730},"Verbose":1},
{"Type":"scrproj","Title":"Dollar Words","Id":"scr58609260","Text":"Word list made using @jgatcomb's word list","Thumb":"/scr-thumbs/58609260.png","Uri":"https://scratch.mit.edu/projects/58609260/","Date":{"Unix":1429822399},"Verbose":1},
{"Type":"scrproj","Title":"Ball Game","Id":"scr51243710","Text":"","Thumb":"/scr-thumbs/51243710.png","Uri":"https://scratch.mit.edu/projects/51243710/","Date":{"Unix":1425848250},"Verbose":1},
{"Type":"scrproj","Title":"Text Based Game","Id":"scr49997260","Text":"Still making the villagers.","Thumb":"/scr-thumbs/49997260.png","Uri":"https://scratch.mit.edu/projects/49997260/","Date":{"Unix":1425426595},"Verbose":1},
{"Type":"scrproj","Title":"When stop sign pressed...","Id":"scr50149638","Text":"","Thumb":"/scr-thumbs/50149638.png","Uri":"https://scratch.mit.edu/projects/50149638/","Date":{"Unix":1425216206},"Verbose":1},
{"Type":"scrproj","Title":"Text Platformer","Id":"scr48112714","Text":"","Thumb":"/scr-thumbs/48112714.png","Uri":"https://scratch.mit.edu/projects/48112714/","Date":{"Unix":1425077268},"Verbose":1},
{"Type":"scrproj","Title":"Dance Thing","Id":"scr48751006","Text":"","Thumb":"/scr-thumbs/48751006.png","Uri":"https://scratch.mit.edu/projects/48751006/","Date":{"Unix":1424383320},"Verbose":1},
{"Type":"scrproj","Title":"Make stuff lowercase","Id":"scr41337248","Text":"","Thumb":"/scr-thumbs/41337248.png","Uri":"https://scratch.mit.edu/projects/41337248/","Date":{"Unix":1424295157},"Verbose":1},
{"Type":"scrproj","Title":"The Clones","Id":"scr44783242","Text":"Uses @Lirex's text to number converter.","Thumb":"/scr-thumbs/44783242.png","Uri":"https://scratch.mit.edu/projects/44783242/","Date":{"Unix":1423175529},"Verbose":1},
{"Type":"scrproj","Title":"User ID thing","Id":"scr45646374","Text":"Playing around with cloud variables.","Thumb":"/scr-thumbs/45646374.png","Uri":"https://scratch.mit.edu/projects/45646374/","Date":{"Unix":1422625769},"Verbose":1},
{"Type":"scrproj","Title":"Cloud Art","Id":"scr45581484","Text":"Uses relrel's cloud list system. If you're a New Scratcher, your work won't be saved.","Thumb":"/scr-thumbs/45581484.png","Uri":"https://scratch.mit.edu/projects/45581484/","Date":{"Unix":1422573671},"Verbose":1},
{"Type":"scrproj","Title":"Favourite Cookie Type","Id":"scr45575544","Text":"Trying out cloud variables. Uses relrel's cloud list engine.","Thumb":"/scr-thumbs/45575544.png","Uri":"https://scratch.mit.edu/projects/45575544/","Date":{"Unix":1422570896},"Verbose":1},
{"Type":"scrproj","Title":"There's no going back!  remix","Id":"scr43785486","Text":"This project was made by zondareeds - I just added some improvements.\nAdded:\n-better jumping\n-not starting in ground\n-touching the bottom of the scree","Thumb":"/scr-thumbs/43785486.png","Uri":"https://scratch.mit.edu/projects/43785486/","Date":{"Unix":1421593338},"Verbose":1},
{"Type":"scrproj","Title":"Box Game","Id":"scr41559936","Text":"The game is very laggy. If you find out why, could you tell me?","Thumb":"/scr-thumbs/41559936.png","Uri":"https://scratch.mit.edu/projects/41559936/","Date":{"Unix":1421586947},"Verbose":1},
{"Type":"scrproj","Title":"A Game","Id":"scr40979712","Text":"After some time, it's impossible to win.","Thumb":"/scr-thumbs/40979712.png","Uri":"https://scratch.mit.edu/projects/40979712/","Date":{"Unix":1421537243},"Verbose":1},
{"Type":"scrproj","Title":"Tokenizer","Id":"scr43688036","Text":"","Thumb":"/scr-thumbs/43688036.png","Uri":"https://scratch.mit.edu/projects/43688036/","Date":{"Unix":1421500237},"Verbose":1},
{"Type":"scrproj","Title":"Make A Maze","Id":"scr42843872","Text":"If you see inside, broadcasting \"clear\" resets it.","Thumb":"/scr-thumbs/42843872.png","Uri":"https://scratch.mit.edu/projects/42843872/","Date":{"Unix":1421238609},"Verbose":1},
{"Type":"scrproj","Title":"Random Game","Id":"scr42596484","Text":"","Thumb":"/scr-thumbs/42596484.png","Uri":"https://scratch.mit.edu/projects/42596484/","Date":{"Unix":1421188767},"Verbose":1},
{"Type":"scrproj","Title":"Color Saver","Id":"scr42432182","Text":"I made this so I could save levels in \"The Swimming Ball\". It works best in turbo mode (the level maker needs to go threw each letter of the input)","Thumb":"/scr-thumbs/42432182.png","Uri":"https://scratch.mit.edu/projects/42432182/","Date":{"Unix":1420823665},"Verbose":1},
{"Type":"scrproj","Title":"Pong Game","Id":"scr41721734","Text":"This was my attempt at making a good gravity simulator. If you go to the \"Paddle\" sprite, you can make the cursor control the platform.","Thumb":"/scr-thumbs/41721734.png","Uri":"https://scratch.mit.edu/projects/41721734/","Date":{"Unix":1420408654},"Verbose":1},
{"Type":"scrproj","Title":"Drawing API","Id":"scr41588758","Text":"I put a comment about how to use it in the code. \n","Thumb":"/scr-thumbs/41588758.png","Uri":"https://scratch.mit.edu/projects/41588758/","Date":{"Unix":1420224328},"Verbose":1},
{"Type":"scrproj","Title":"Test Computer Speed","Id":"scr41442332","Text":"This works best in turbo mode. Basically, what it does is find how long it takes to wait 1 second.","Thumb":"/scr-thumbs/41442332.png","Uri":"https://scratch.mit.edu/projects/41442332/","Date":{"Unix":1419966344},"Verbose":1},
{"Type":"scrproj","Title":"The Yellow Line","Id":"scr40729312","Text":"","Thumb":"/scr-thumbs/40729312.png","Uri":"https://scratch.mit.edu/projects/40729312/","Date":{"Unix":1419171254},"Verbose":1},
{"Type":"scrproj","Title":"The Swimming Ball","Id":"scr39649930","Text":"   ","Thumb":"/scr-thumbs/39649930.png","Uri":"https://scratch.mit.edu/projects/39649930/","Date":{"Unix":1418679289},"Verbose":1},
{"Type":"scrproj","Title":"How fast are you?","Id":"scr39608648","Text":"","Thumb":"/scr-thumbs/39608648.png","Uri":"https://scratch.mit.edu/projects/39608648/","Date":{"Unix":1418566062},"Verbose":1},
{"Type":"scrproj","Title":"Santa Game","Id":"scr39249726","Text":"","Thumb":"/scr-thumbs/39249726.png","Uri":"https://scratch.mit.edu/projects/39249726/","Date":{"Unix":1418508643},"Verbose":1},
{"Type":"scrproj","Title":"Ball Vs. Beetles","Id":"scr38959532","Text":"","Thumb":"/scr-thumbs/38959532.png","Uri":"https://scratch.mit.edu/projects/38959532/","Date":{"Unix":1418334005},"Verbose":1},
{"Type":"scrproj","Title":"Math Game","Id":"scr38888724","Text":"","Thumb":"/scr-thumbs/38888724.png","Uri":"https://scratch.mit.edu/projects/38888724/","Date":{"Unix":1418256165},"Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-74482629","Title":"How to make a link to add a filter list to uBlock Origin?","Uri":"https://stackoverflow.com/q/74482629/10113238","Date":{"Unix":1668722659},"Text":"[EasyList](https://easylist.to/) has \"add it to your ad blocker\" links for their various filter lists. When I click on them, my content blocker browser extension prompts me to add the filter list from EasyList. The EasyList website uses links to the `subscribe.adblockplus.org` domain (which doesn't actually resolve) to accomplish this. I want to make a link for people to easily be able to add *my* filter list to their content blocker (uBlock Origin in particular).\r\n\r\nI've tried using the same link as EasyList, but uBlock Origin doesn't seem to be intercepting navigations to the magical `subscribe.adblockplus.org` domain, so I just get a \"Server Not Found\" error. How can I properly construct such a link?","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-74482630","Title":"How to make a link to add a filter list to uBlock Origin?","Uri":"https://stackoverflow.com/a/74482630/10113238","Date":{"Unix":1668722659},"Text":"uBlock Origin only allows subscribe URLs on a [hardcoded list of domains](https://github.com/gorhill/uBlock/blob/d0dbc27c025b894bdc5cf32d501a1aaf36725b07/platform/firefox/manifest.json#L60). `https://*.github.io/*` is on that list, so you can use a [GitHub Pages](https://pages.github.com/) site to host the page with the URL. (alternatively, you could just ask to be added to the list)\r\n\r\nOn an allowed domain, you can make a link to add a filter list like `https://subscribe.adblockplus.org/?location=[list URL]&title=[filter list title]` (where the URL and title are be URL-encoded), and clicking the link will prompt the user to add the filter list.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-74140210","Title":"How to install Timescaledb-toolkit extension on Windows server","Uri":"https://stackoverflow.com/a/74140210/10113238","Date":{"Unix":1666270392},"Text":"No, Toolkit doesn't support Windows currently, and probably won't gain Windows support in the near future.\r\n\r\nSee also [this discussion](https://github.com/timescale/timescaledb-toolkit/discussions/447).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66880234","Title":"What does use crate::body::Body; mean?","Uri":"https://stackoverflow.com/a/66880234/10113238","Date":{"Unix":1617152093},"Text":"It refers to to the crate currently being compiled. So in this example, it is resolved as `rtsp_server::body::Body`. The `body::Body` part is refering to the `Body` item in the `body` module.\r\n\r\nThe [Rust documentation says](https://doc.rust-lang.org/std/keyword.crate.html):\r\n> `crate` is also used to represent the absolute path of a module, where `crate` refers to the\r\n> root of the current crate. For instance, `crate::foo::bar` refers to the name `bar` inside the\r\n> module `foo`, from anywhere else in the same crate.\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-73365682","Title":"How cfg are dealt with in rustc?","Uri":"https://stackoverflow.com/a/73365682/10113238","Date":{"Unix":1660592198},"Text":"The [`rustc_expand`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_expand/index.html) crate is responsible for expanding macros. It [special cases](https://github.com/rust-lang/rust/blob/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/compiler/rustc_expand/src/expand.rs#L1660-L1669) `#[cfg]` and `#[cfg_attr]` when parsing attribute macros such that they aren't treated like normal macros.\r\n- `rustc_expand` calls [`rustc_parse::parse_cfg_attr`](https://doc.rust-lang.org/1.63.0/nightly-rustc/rustc_parse/fn.parse_cfg_attr.html) to parse the attribute.\r\n- With the parsed macro, `rustc_expand` calls [`rustc_attr::cfg_matches`](https://doc.rust-lang.org/1.63.0/nightly-rustc/rustc_attr/fn.cfg_matches.html) to evaluate if the condition is met.\r\n- `rustc_expand` then either includes or doesn't include the attribute passed as an argument.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-73263832","Title":"How to choose between Google Noto emoji black and white, versus color, icon?","Uri":"https://stackoverflow.com/a/73263832/10113238","Date":{"Unix":1659827330},"Text":"You can use [variation selectors](https://en.wikipedia.org/wiki/Variation_Selectors_(Unicode_block)) after a codepoint to control if an glyph should display emoji-style (like üòÄÔ∏è) or monochrome style (üòÄÔ∏é). How glyphs are rendered if no variant selection is specified varies among text renderers, in practice.\r\n\r\nYou can use U+FE0E (VARIATION SELECTOR-15) to force text style, and U+FE0F (VARIATION SELECTOR-16) to force emoji style:\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n    Emoji style: üòÄ&#xFE0F; <br>\r\n    Text style: üòÄ&#xFE0E;\r\n\r\n<!-- end snippet -->\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-73263688","Title":"How to subset Basic Latin (128 glyphs) with the Unicode range descriptor","Uri":"https://stackoverflow.com/a/73263688/10113238","Date":{"Unix":1659825090},"Text":"You can't reduce the amount of data transferred with `unicode-range`. It's only used for deciding if a font should be loaded at all:\r\n\r\n> [\"If the page doesn't use any character in this range, the font is not downloaded; if it uses at least one, the whole font is downloaded\"](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/unicode-range)\r\n\r\nSo no special server configuration is needed beyond just serving the font files as-is for `unicode-range` to function.\r\n\r\nIf you want to only download certain characters you need to create a whole new font file that only has certain characters. When I've needed to create optimized font subsets, I've done so manually by editing the font with [FontForge](https://fontforge.org/en-US/) to remove glyphs I don't need. You could also automate the process with software such as [pyftsubset](https://fonttools.readthedocs.io/en/latest/subset/index.html).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72766176","Title":"Cannot find method or associated constant `join` in `std::thread::JoinHandle`","Uri":"https://stackoverflow.com/a/72766176/10113238","Date":{"Unix":1656292401},"Text":"`JoinHandle` isn't a trait, so full qualified trait syntax isn't applicable. Invoke the method directly, without the fully qualified trait syntax:\r\n\r\n```rust\r\nstd::thread::JoinHandle::join(self).unwrap()\r\n```\r\n\r\nThe error message is certainly bad.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72765910","Title":"Replit DB is not loading data into variables","Uri":"https://stackoverflow.com/a/72765910/10113238","Date":{"Unix":1656288209},"Text":"According to [the documentation for `replit-py`](https://replit-py.readthedocs.io/en/latest/api.html#replit.database.Database.get_raw), a `KeyError` is raised when an attempt is made to read from a key that doesn't exist in the database.\r\n\r\nYou can use `db.get` to specify a default value for if the key doesn't exist:\r\n```python\r\nprint(db.get(\"b\", \"default\")) # default\r\ndb[\"b\"] = \"pie\"\r\nprint(db.get(\"b\", \"default\")) # pie\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72750532","Title":"Compare DateTime with fixed offset to DateTime with time zone","Uri":"https://stackoverflow.com/a/72750532/10113238","Date":{"Unix":1656117399},"Text":"Convert the timezone of `b` into the timezone of `a` before assigning it:\r\n\r\n```rust\r\na = b.with_timezone(&a.timezone());\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72750227","Title":"Async recursive function that takes a mutex","Uri":"https://stackoverflow.com/a/72750227/10113238","Date":{"Unix":1656113067},"Text":"In this case, you can restructure the code to make it so `unwrapped` can't be used across an `await`:\r\n```rust\r\nlet value = {\r\n    let mut unwrapped = mutex.lock().unwrap();\r\n    *unwrapped += 1;\r\n    *unwrapped\r\n};\r\ntokio::time::sleep(tokio::time::Duration::from_millis(1000)).await;\r\nif value < 100 {\r\n    f(mutex);\r\n}\r\n```\r\n\r\nIf you weren't able to do this, then you'd need to make it so you don't return a `Future` that implements `Send`. The [`async_recursion` docs](https://docs.rs/async-recursion/latest/async_recursion/#send-option) specify an option you can pass to the macro to disable the `Send` bound it adds:\r\n\r\n```rust\r\n#[async_recursion(?Send)]\r\nasync fn f(mutex: &Arc<Mutex<u128>>) {\r\n    ...\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=1e0e5709f39aa8ac4c1c0128007d0509)\r\n\r\nYou wouldn't be able to send such a `Future` across threads though.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72736063","Title":"How to get full std::process::Command invocation as string in Rust?","Uri":"https://stackoverflow.com/a/72736063/10113238","Date":{"Unix":1656015092},"Text":"There's no built-in method on `Command` to do that. You could write a function to make such a string though:\r\n\r\n```rust\r\nfn pretty_cmd(cmd: &Command) -> String {\r\n    format!(\r\n        \"{} {:?}\",\r\n        cmd.get_envs()\r\n            .map(|(key, val)| format!(\"{:?}={:?}\", key, val))\r\n            .fold(String::new(), |a, b| a + &b),\r\n        cmd\r\n    )\r\n}\r\nprintln!(\"{}\", pretty_cmd(&cmd)); // e.g. \"PATH\"=Some(\"/usr\") \"sh\" \"-c\" \"echo hello\"\r\n```\r\n\r\nAlternatively you could use a wrapper struct and implement `Debug` on that:\r\n\r\n```\r\nuse std::fmt;\r\n\r\nstruct PrettyCmd(pub Command);\r\nimpl fmt::Debug for PrettyCmd {\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        write!(\r\n            f,\r\n            \"{} {:?}\",\r\n            self.0.get_envs()\r\n                .map(|(key, val)| format!(\"{:?}={:?}\", key, val))\r\n                .fold(String::new(), |a, b| a + &b),\r\n            self.0\r\n        )\r\n    }\r\n}\r\n\r\nprintln!(\"{:?}\", PrettyCmd(cmd)); // \"PATH\"=Some(\"/usr\") \"sh\" \"-c\" \"echo hello\"\r\n```\r\n\r\n[(try on playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=66b7923167b2ca11746b34ecb73a4959)\r\n\r\nThe advantage of using a wrapper struct like this is that you can store a `PrettyCmd` wherever you currently store a `Command`, and the different `Debug` formatting will happen without needing an extra function call.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72705968","Title":"What are all the ways rust might panic without explicitly calling unwrap/panic?","Uri":"https://stackoverflow.com/a/72705968/10113238","Date":{"Unix":1655838324},"Text":"There are many functions in `core` that panic when used improperly (random example: [`AtomicI64::load`](https://doc.rust-lang.org/stable/core/sync/atomic/struct.AtomicI64.html#method.load)). All of these panics are documented in the [`core` documentation](https://doc.rust-lang.org/stable/core/index.html). There are also ways that panics can occur even without an explicit function call or macro invocation in `core`. All of these are syntax sugar for a `core` trait (such as [`Add`](https://doc.rust-lang.org/stable/core/ops/trait.Add.html) or [`Index`](https://doc.rust-lang.org/stable/core/ops/trait.Index.html)) but are typically invoked using their syntax sugar, and are implemented with compiler magic (code generation is handled differently than normal by the compiler):\r\n\r\n- `+`/`-`/`*`/`>>`/`<<` panic on overflow in debug mode\r\n- dividing by zero or modulusing zero (`x / 0` or `x % 0`)\r\n- for signed integer types, `i*::MIN / -1` and `i*::MIN % -1` always panics, **even in release mode**\r\n- for signed integer types, `-i*::MIN` \r\n- performing an out of bounds array index into a slice/array/str\r\n\r\nThe [no_panic](https://docs.rs/no-panic/latest/no_panic/) crate can be used to statically verify that a function will never panic. There are a few catches to be aware of when using this crate ‚Äî be sure to read the documentation first.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72678947","Title":"Unable to query graphql endpoint","Uri":"https://stackoverflow.com/a/72678947/10113238","Date":{"Unix":1655659498},"Text":"Your query isn't valid GraphQL. `getMetric` isn't a query - instead, you need to call it like this:\r\n\r\n```graphql\r\n{\r\n  getMetric(metric: \"dev_activity\") {\r\n    timeseriesData(slug: \"ethereum\", from: \"2020-02-10T07:00:00Z\", to: \"2020-03-10T07:00:00Z\", interval: \"1w\") {\r\n      datetime\r\n      value\r\n    }\r\n  }\r\n}\r\n```\r\n[(see on GraphiQL)](https://api.santiment.net/graphiql?query=%7B%0A%20%20getMetric(metric%3A%20%22dev_activity%22)%20%7B%0A%20%20%20%20timeseriesData(slug%3A%20%22ethereum%22%2C%20from%3A%20%222020-02-10T07%3A00%3A00Z%22%2C%20to%3A%20%222020-03-10T07%3A00%3A00Z%22%2C%20interval%3A%20%221w%22)%20%7B%0A%20%20%20%20%20%20datetime%0A%20%20%20%20%20%20value%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72671918","Title":"Can I modify the content of the default \"main.rs\" file in Rust?","Uri":"https://stackoverflow.com/a/72671918/10113238","Date":{"Unix":1655578436},"Text":"No, the initial file contents for `main.rs` (if creating a binary) or `lib.rs` (if creating a library) are [hardcoded into Cargo](https://github.com/rust-lang/cargo/blob/754a5bfbaa9b5c677e0d96ca7edc17051bf311e1/src/cargo/ops/cargo_new.rs#L804-L827).\r\n\r\nYou could try using [`cargo-generate`](https://crates.io/crates/cargo-generate) to be able to generate Cargo projects from a Git repo template. See [its documentation](https://cargo-generate.github.io/cargo-generate/index.html) for information about how to use it.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-72380173","Title":"How to resolve \"edition2021 is required\" when compiling all cw-plus contracts in docker container?","Uri":"https://stackoverflow.com/a/72380173/10113238","Date":{"Unix":1653491480},"Text":"The Rust compiler in your Docker version is separate from the version on your system, and the version in the image isn't new enough to support the 2021 edition. You can fix this by using a newer version of the Docker image that has a newer Rust compiler:\r\n\r\n```sh\r\ndocker run --rm -v \"$(pwd)\":/code \\\r\n  --mount type=volume,source=\"$(basename \"$(pwd)\")_cache\",target=/code/target \\\r\n  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \\\r\n  cosmwasm/workspace-optimizer:0.12.6\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71624183","Title":"Rust Read CSV without header","Uri":"https://stackoverflow.com/a/71624183/10113238","Date":{"Unix":1648251688},"Text":"Use a `ReaderBuilder`, and call [`ReaderBuilder::has_headers`](https://docs.rs/csv/latest/csv/struct.ReaderBuilder.html#method.has_headers) to disable header parsing. You can then use [`StringRecord::deserialize`](https://docs.rs/csv/latest/csv/struct.StringRecord.html#method.deserialize) to extract and print each record, skipping the first header row:\r\n\r\n    let mut reader = csv::ReaderBuilder::new()\r\n        .has_headers(false)\r\n        .from_reader(Box::new(file));\r\n\r\n    let headers = csv::StringRecord::from(vec![\"city\", \"pop\"]);\r\n    for record in reader.records().skip(1) {\r\n        let record: CityRow = record.unwrap().deserialize(Some(&headers)).unwrap();\r\n        println!(\"{:?}\", record);\r\n    }\r\n\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=3c8d74247a53ae0d4677ff270849a1f0)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71574872","Title":"GH cli - how to get current repo?","Uri":"https://stackoverflow.com/a/71574872/10113238","Date":{"Unix":1647963464},"Text":"To get the name of the repo in the curernt working directory, run\r\n```sh\r\ngh repo view --json name -q \".name\"\r\n```\r\n\r\nThis extracts the name of the repo from the command that lists information about the repo in the current directory, and extracts the actual name from the JSON output. For instance, if you were in the working directory for the repo with a URL of http://github.com/rust-lang/rust, the output would be `rust`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71565742","Title":"What is the Unicode code for a grey ball?","Uri":"https://stackoverflow.com/a/71565742/10113238","Date":{"Unix":1647910029},"Text":"You're probably looking for either ‚ö™ or ‚ö´, which are \"medium white/black\" circles. The exact display depends on the font being used. You might also be interested in ‚¨§, which takes on the color of the text color.\r\n\r\nComparison:\r\n\r\n|Character|Name|\r\n|-|-|\r\n|‚ö™|MEDIUM WHITE CIRCLE|\r\n|‚ö´|MEDIUM BLACK CIRCLE|\r\n|‚¨§|BLACK LARGE CIRCLE (takes on the color of the text)|","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71563099","Title":"Rust: Implement Hash/Eq","Uri":"https://stackoverflow.com/a/71563099/10113238","Date":{"Unix":1647890971},"Text":"You can compare the `String` pointers instead of the actual `String` data. Of course, this method has issue that the `Hash` of a person will change every execution, but you can't really get around that since there's no extra data in a `Person`:\r\n\r\n```rust\r\nuse std::{cmp, hash};\r\n\r\nimpl cmp::PartialEq for Person {\r\n    fn eq(&self, other: &Self) -> bool {\r\n        self.name.as_ptr() == other.name.as_ptr()\r\n    }\r\n}\r\nimpl cmp::Eq for Person {}\r\n\r\nimpl hash::Hash for Person {\r\n    fn hash<H: hash::Hasher>(&self, state: &mut H) {\r\n        self.name.as_ptr().hash(state);\r\n    }\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71562810","Title":"hugo how to sort tags and categories in terms.html","Uri":"https://stackoverflow.com/a/71562810/10113238","Date":{"Unix":1647889276},"Text":"You need to specify the property to sort on to the [`sort` function](https://gohugo.io/functions/sort/). Since you're iterating over a list of tag pages, you probably want to use the titles of the pages (which are the tag names):\r\n\r\n```html\r\n{{ range (sort .Pages \"Title\") }}\r\n<li>\r\n    <a href=\"{{ .Permalink }}\">{{ .Title }}</a>\r\n</li>\r\n{{ end }}\r\n```\r\n\r\nIf you want the list to be in the opposite order, pass `\"desc\"` to the `sort` function as the third argument.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71543266","Title":"str Memory Representation","Uri":"https://stackoverflow.com/a/71543266/10113238","Date":{"Unix":1647738226},"Text":"A `String` is just a normal struct, and isn't built into the language, nor does it use any (substantive) compiler magic. `String`s are just wrappers around `Vec<u8>`. A `Vec` is a pointer to a buffer, along with a size and capacity to keep track of the buffer size. Thus a `String` has a size of thrice `usize` on the heap, along with a variable amount of heap storage.\r\n\r\nA <code><b>&</b>str</code> is \"a pointer to some bytes, and a length\". It's a fat pointer with a fixed size. Notice the ampersand: an `&str` is different from a `str`. A `str` is a [dynamically sized type](https://doc.rust-lang.org/nomicon/exotic-sizes.html#dynamically-sized-types-dsts) that refers directly to the bytes of a string, without any reference or indirection. For the most part, you can't directly handle `str`s, since they don't have a fixed size, and so they must be handled behind a reference.\r\n\r\nTo summarize:\r\n- That quote refers to `&str`, which is a fat pointer to some UTF-8 bytes\r\n- A `str` refers to some UTF-8 bytes, and usually can't be handled without some indirection","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69273385","Title":"Is it possible to check if `panic` is set to `abort` while a library is compiling?","Uri":"https://stackoverflow.com/a/69273385/10113238","Date":{"Unix":1632246484},"Text":"You can use this unstable code in your binary or library to cause an error when `-C panic=abort` is specified:\r\n```lang-rust\r\n#![feature(panic_unwind)]\r\nextern crate panic_unwind;\r\n```\r\nWhich causes this helpful error when the wrong panic strategy is used:\r\n```lang-text\r\nerror: the linked panic runtime `panic_unwind` is not compiled with this crate's panic strategy `abort`\r\n```\r\n\r\nWhen the panic strategy is correct, the `extern crate` declaration is redundant, but does nothing. When the panic strategy is wrong, it causes a linking error since you can't have two different panic strategy crates in the same binary. Since this check happens when crates are linked, note that if a library is never actually used by the top-level crate, then the check isn't run. (but this is a good thing: if your library is unused, then there is no need for this check anyways!)\r\n\r\nAlso, this error happens very late in the compilation process, so while `cargo build` will error out, `cargo check` won't complain since `cargo check` doesn't check for linking errors for performance reasons.\r\n\r\nUnfortunately, there doesn't seem to be a way to do this on the stable channel.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-71238367","Title":"What is the maximum number of Unicode combined characters that may be needed to render one glyph in real-life languages?","Uri":"https://stackoverflow.com/a/71238367/10113238","Date":{"Unix":1645625092},"Text":"Nobody can be an expert in what makes up a \"real-life\" character in every language, so I might be missing some longer sequences here. But I do know about a lot of emoji! There are a few emojis for flags of geographic subdivisions which are implemented with combining codepoints. For example, the flag for Scotland, üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åø, is 7 codepoints, taking up 28 bytes in UTF-32:\r\n\r\n- *WAVING BLACK FLAG*\r\n- *TAG LATIN SMALL LETTER G*\r\n- *TAG LATIN SMALL LETTER B*\r\n- *TAG LATIN SMALL LETTER S*\r\n- *TAG LATIN SMALL LETTER C*\r\n- *TAG LATIN SMALL LETTER T*\r\n- *CANCEL TAG*\r\n\r\nCountry flags, like üáØüáµ, have just two combining codepoints.\r\n\r\nFamily emojis with 4 people, like üë©‚Äçüë©‚Äçüëß‚Äçüëß, are also 7 codepoints. The only emoji I'm aware of that's longer are family emojis with a skin-tone specified for each family member, but these don't have a lot of support right now. Here's what one displays as on your device: üë©üèæ‚Äçüë®üèæ‚Äçüëßüèæ‚Äçüëßüèæ (if you just see four heads, then you don't have a font installed that supports this). That emoji has 11 codepoints.\r\n\r\nThat being said, keep in mind that not all languages are rendered as a series of glyphs in sequence: `ÿ£ŸáŸÑÿß` is segmented using Unicode rules into 4 distinct characters.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70933107","Title":"Svelte make {:then} value of {#await} statement reactive","Uri":"https://stackoverflow.com/a/70933107/10113238","Date":{"Unix":1643665032},"Text":"`data` is a reactive variable. The presence of a promise is unrelated to the issue: this occurs even if `data` is a normal variable. The issue is that Svelte doesn't properly pick up that a change occurred to `data` when you click the button. You can force Svelte to pick up the changes by explictly assigning to `data`.\r\n\r\nThe other issue is that you can't sort objects without providing a custom sort function to sort based on a key of the object. `.sort((a, b) => a.firstname.localeCompare(b.firstname))` sorts based on the `firstname` property of the objects.\r\n\r\nPutting that together gives us:\r\n\r\n```html\r\n<button on:click={() => data = data.sort((a, b) => a.firstname.localeCompare(b.firstname))}>sort data</button>\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70929765","Title":"Why are top level or-patterns not allowed in let bindings?","Uri":"https://stackoverflow.com/a/70929765/10113238","Date":{"Unix":1643648003},"Text":"The reason that top-level or-patterns aren't allowed is because [it would cause certain `macro_rules!` macros](https://github.com/rust-lang/rfcs/pull/2535#issuecomment-418757466) to break. The pattern in a let expression should be matchable by a single `$p:pat`, but without requiring it to be parenthesized, a `$p:pat` would only consume the first part of the or-pattern.\r\n\r\n\r\nNote that you can work around this easily, as the compiler suggests when you try this:\r\n```none\r\nerror: top-level or-patterns are not allowed in `let` bindings\r\n --> src/main.rs:6:9\r\n  |\r\n6 |     let Ok(x) | Err(x) = foo(true);\r\n  |         ^^^^^^^^^^^^^^ help: wrap the pattern in parentheses: `(Ok(x) | Err(x))`\r\n```\r\n\r\nWrapping the or-expression in brackets fixes this, since now a bracket expression is the top-level expression:\r\n```rust\r\nlet (Ok(x) | Err(x)) = foo(true);\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70842931","Title":"\"Pattern match is redundant\" when using input list argument inside list comprehension","Uri":"https://stackoverflow.com/a/70842931/10113238","Date":{"Unix":1643079477},"Text":"Pattern matches go top to bottom, so every call to `positiveSum` returns `0`. Since the pattern for the first rule is `positiveSum (x) = 0`, which matches *everything*, since every value can be bound to `x`. By making that rule the last one, you can avoid this issue:\r\n```haskell\r\npositiveSum :: [Int] -> Int\r\npositiveSum (x:xs) = result\r\n  where \r\n    result = sum [y+y | y <- xs, y > 0]\r\npositiveSum (x) = 0\r\n```\r\nWith this code, we only fall back to the `0` case if there isn't a tail for the argument, causing the expected behaviour.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70836957","Title":"How to create a byte slice constant with specific value?","Uri":"https://stackoverflow.com/a/70836957/10113238","Date":{"Unix":1643040886},"Text":"On recent nightly compilers, you can now use the [unstable `concat_bytes!` macro](https://github.com/rust-lang/rust/issues/87555) to do this:\r\n\r\n```rust\r\n#![feature(concat_bytes)]\r\npub const MY_CONST: &[u8; 256] = concat_bytes!(b\"abcdef\", [0; 250]);\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70826433","Title":"Is there a way to collect statistics from cargo test?","Uri":"https://stackoverflow.com/a/70826433/10113238","Date":{"Unix":1642970882},"Text":"On nightly compilers, you can use some unstable flags to get these statistics.\r\n\r\nPassing the unstable `--report-time` to the test executable makes it output the time it took for each test to run:\r\n\r\n```none\r\n$ cargo +stable test -- -Z unstable-options --report-time\r\n    Finished test [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running target/debug/deps/numerals-1da2b04c985a7342\r\n\r\nrunning 5 tests\r\ntest roman::test::value_checked_err_on_large ... ok <0.000s>\r\ntest roman::test::value_panic_on_large ... ok <0.000s>\r\ntest roman::test::test_big_numbers ... ok <0.002s>\r\ntest bt::test::test_many_numbers ... ok <0.009s>\r\ntest roman::test::test_many_numbers ... ok <0.023s>\r\n\r\ntest result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s\r\n\r\n   Doc-tests numerals\r\n\r\nrunning 5 tests\r\ntest src/roman.rs - roman (line 9) ... ok <0.249s>\r\ntest src/roman.rs - roman (line 38) ... ok <0.257s>\r\ntest src/roman.rs - roman (line 55) ... ok <0.269s>\r\ntest src/roman.rs - roman (line 72) ... ok <0.303s>\r\ntest src/roman.rs - roman (line 23) ... ok <0.318s>\r\n\r\ntest result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.32s\r\n```\r\n\r\nYou can combine the unstable `--format json` and the `--report-time` flags to have the test executable output as structured JSON that contains the execution time of each test. Running `cargo test -- -Z unstable-options --report-time --format json 2> /dev/null` on the same crate gives:\r\n\r\n```json\r\n$ cargo test -- -Z unstable-options --report-time --format json 2> /dev/null\r\n{ \"type\": \"suite\", \"event\": \"started\", \"test_count\": 5 }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"bt::test::test_many_numbers\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"roman::test::test_big_numbers\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"roman::test::test_many_numbers\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"roman::test::value_checked_err_on_large\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"roman::test::value_panic_on_large\" }\r\n{ \"type\": \"test\", \"name\": \"roman::test::value_checked_err_on_large\", \"event\": \"ok\", \"exec_time\": 0.00002701 }\r\n{ \"type\": \"test\", \"name\": \"roman::test::value_panic_on_large\", \"event\": \"ok\", \"exec_time\": 0.000070299 }\r\n{ \"type\": \"test\", \"name\": \"roman::test::test_big_numbers\", \"event\": \"ok\", \"exec_time\": 0.0014721 }\r\n{ \"type\": \"test\", \"name\": \"bt::test::test_many_numbers\", \"event\": \"ok\", \"exec_time\": 0.009415822 }\r\n{ \"type\": \"test\", \"name\": \"roman::test::test_many_numbers\", \"event\": \"ok\", \"exec_time\": 0.019445221 }\r\n{ \"type\": \"suite\", \"event\": \"ok\", \"passed\": 5, \"failed\": 0, \"allowed_fail\": 0, \"ignored\": 0, \"measured\": 0, \"filtered_out\": 0, \"exec_time\": 0.01973012 }\r\n{ \"type\": \"suite\", \"event\": \"started\", \"test_count\": 5 }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"src/roman.rs - roman (line 23)\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"src/roman.rs - roman (line 38)\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"src/roman.rs - roman (line 55)\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"src/roman.rs - roman (line 72)\" }\r\n{ \"type\": \"test\", \"event\": \"started\", \"name\": \"src/roman.rs - roman (line 9)\" }\r\n{ \"type\": \"test\", \"name\": \"src/roman.rs - roman (line 9)\", \"event\": \"ok\", \"exec_time\": 0.25434107 }\r\n{ \"type\": \"test\", \"name\": \"src/roman.rs - roman (line 72)\", \"event\": \"ok\", \"exec_time\": 0.25587009 }\r\n{ \"type\": \"test\", \"name\": \"src/roman.rs - roman (line 55)\", \"event\": \"ok\", \"exec_time\": 0.28541328 }\r\n{ \"type\": \"test\", \"name\": \"src/roman.rs - roman (line 38)\", \"event\": \"ok\", \"exec_time\": 0.304906301 }\r\n{ \"type\": \"test\", \"name\": \"src/roman.rs - roman (line 23)\", \"event\": \"ok\", \"exec_time\": 0.314071325 }\r\n{ \"type\": \"suite\", \"event\": \"ok\", \"passed\": 5, \"failed\": 0, \"allowed_fail\": 0, \"ignored\": 0, \"measured\": 0, \"filtered_out\": 0, \"exec_time\": 0.314348062 }\r\n```\r\n\r\nEach line is a single compilation event, as structured JSON. You could parse the data to determine which tests have the longest `exec_time` fields.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70809094","Title":"Using page variables in Hugo","Uri":"https://stackoverflow.com/a/70809094/10113238","Date":{"Unix":1642812232},"Text":"In Hugo, `.` gives you the current context. In a page, this has `.IsHome`. But it doesn't cascade down to partials unless you explicitly pass it. You're probably including your header and footer partials like so:\r\n\r\n```hugo\r\n{{- partial \"header.html\" . -}}\r\n```\r\n\r\nThe `.` in there passes along the current context to the header partial. Note that there's nothing special about header or footer partials in Hugo: they don't get any special treatment when it comes to the context. I'm guessing that you are including the other partials like so:\r\n\r\n```hugo\r\n{{- partial \"otherpartial.html\" -}}\r\n```\r\n\r\nNotice that there isn't any `.` in there to pass along the context. In Hugo, context is never implictly given to partials: you have to explicitly pass it. The solution is to make sure you're passing the context to your partials (notice the added `.`):\r\n\r\n<pre>\r\n{{- partial \"otherpartial.html\" <b>.</b> -}}\r\n</pre>","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70587188","Title":"Disparity in accessing command-line arguments using nth()","Uri":"https://stackoverflow.com/a/70587188/10113238","Date":{"Unix":1641349984},"Text":"`.nth()` mutates the iterator it's called on. In approach 1, this isn't a problem since a new `Args` iterator is created in each call to `get_nth_arg`. But in approach 2, the same iterator is used for each `.nth()` call. Here's what happens:\r\n```rust\r\nlet mut args: Args = args();\r\n// At position 0, nothing has been taken from the iterator\r\nlet arg1: String = args.nth(1).unwrap(); // take 1 item from the iterator\r\n// At position 1\r\nlet arg2: String = args.nth(2).unwrap(); // take 2 items from the *existing* iterator\r\n// At position 3\r\nlet arg3: String = args.nth(3).unwrap(); // take 3 items from the *existing* iterator\r\n// At position 6\r\nprintln!(\"{} {} {}\", arg1, arg2, arg3);\r\n```\r\n\r\nAnother way to look at this is to replace the `nth` calls with the equivalent calls to `.next()`:\r\n\r\n```rust\r\nlet mut args: Args = args();\r\nlet arg1: String = args.next().unwrap();\r\nlet _ = args.next().unwrap(); // discard 1 element for nth(2)\r\nlet arg2: String = args.next().unwrap();\r\nlet _ = args.next().unwrap(); // discard 2 elements for nth(3)\r\nlet _ = args.next().unwrap();\r\nlet arg3: String = args.next().unwrap();\r\nprintln!(\"{} {} {}\", arg1, arg2, arg3);\r\n```\r\n\r\nRemember, iterator don't remember past elements. Once you call `next` on an iterator, you can't \"go back\" to get a previous element. You can *only* get new elements from an iterator. ","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70550017","Title":"What enables a closure type to be used where a function pointer type is expected in Rust?","Uri":"https://stackoverflow.com/a/70550017/10113238","Date":{"Unix":1641052617},"Text":"Closures can be coerced to function pointers if they do not capture any local variables.\r\n\r\nClosures that don't capture any variables are effectively the same as normal functions, making this sound. This behaviour was defined in [RFC 1558](https://rust-lang.github.io/rfcs/1558-closure-to-fn-coercion.html), which says:\r\n\r\n> A closure that does not move, borrow, or otherwise access (capture) local variables should be coercable to a function pointer (`fn`).\r\n\r\nSo `|n| n` can be coerced since it doesn't capture any local variables, but `|n| n + a` cannot be coerced since it captures a variable, `a`, from the outer environment.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70549948","Title":"How to swap two vectors in a mutable struct","Uri":"https://stackoverflow.com/a/70549948/10113238","Date":{"Unix":1641051898},"Text":"Use [`std::mem::swap`](https://doc.rust-lang.org/stable/std/mem/fn.swap.html) to swap the values in-place:\r\n```rust\r\nimpl Data {\r\n    fn proc(&mut self) {\r\n        std::mem::swap(&mut self.xs, &mut self.ys);\r\n    }\r\n}\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=6f3c54818ec724b7b932de2e03882cbb)\r\n\r\n`self.xs = self.ys` doesn't work because `Vec` doesn't implement `Copy`: you'd have to `.clone()` `ys`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-56203012","Title":"Why does Chrome pretend I'm sending a X-DNS-Prefetch-Control header?","Uri":"https://stackoverflow.com/q/56203012/10113238","Date":{"Unix":1558215227},"Text":"I'm running a server that always responds to all requests with\r\n```\r\nHTTP/1.1 200 OK\r\n\r\nTest\r\n```\r\nBut Chrome DevTools shows that I'm sending a header:\r\n[X-DNS-Prefetch-Control][1]. When I click \"view source\", Chrome shows that I am indeed not sending any headers.\r\n\r\n![A screenshot of Chrome Devtools, that shows no response headers][2].\r\n\r\nWhy does Chrome DevTools show this header?\r\n\r\n\r\n  [1]: https://i.sstatic.net/1RtcD.png\r\n  [2]: https://i.sstatic.net/kf5Mx.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70483620","Title":"Why is `PartialOrd` not blanket-implemented for all types that implement `Ord`?","Uri":"https://stackoverflow.com/a/70483620/10113238","Date":{"Unix":1640479560},"Text":"It *would* be a good idea to have a blanket implementation of `Ord` for types that implement `PartialOrd`. The reason that such a blanket implementation doesn't exist is because it's not technically possible. Just adding a `impl<T: Ord> PartialOrd for T` block to `core` would result in an error:\r\n\r\n```none\r\nerror[E0119]: conflicting implementations of trait `std::cmp::PartialOrd<&_>` for type `&_`\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | impl<T: Ord> PartialOrd for T {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: conflicting implementation in crate `core`:\r\n          - impl<A, B> PartialOrd<&B> for &A\r\n            where A: PartialOrd<B>, A: ?Sized, B: ?Sized;\r\n```\r\n\r\nThere is already a blanket implementation in `core` that implements `PartialOrd` for all references to `PartialOrd` types. By implementing `PartialOrd` for *all* types that implement `Ord`, it would be possible to have `PartialOrd` implemented for the same type twice. It would then be unclear which implementation should be used. Consider this code:\r\n\r\n```rust\r\n#[derive(PartialEq, Eq)]\r\nstruct X;\r\nimpl PartialOrd for X {\r\n    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\r\n        panic!(\"1\");\r\n    }\r\n}\r\nimpl Ord for &X {\r\n    fn cmp(&self, other: &Self) -> Ordering {\r\n        panic!(\"2\");\r\n    }\r\n}\r\n```\r\n\r\nHere are the traits that get implemented on `X`\r\n\r\n- `X: PartialOrd` (directly implemented), panics with `1`\r\n- `&X: PartialOrd` (blanket implementation for references), panics with `1`\r\n- `&X: Ord` (directly implemented), panics with `2`\r\n\r\nBut if we were to implement `PartialOrd` automatically, then there would be an additional implementation of `PartialOrd` on `&X` that panics with `2`. It is ambiguous how it should be resolved.\r\n\r\nThe solution to this is to use specialization, which is an unstable feature in Rust, that didn't even exist when Rust 1.0 was released. As such, not implementing `PartialOrd` was the only option. Specialization allows the same item to have multiple conflicting trait implementations in a way that is unambiguous, but it is currently unstable, unsound, and nightly only. See [this Rust issue for more details on the issue](https://github.com/rust-lang/rust/issues/63104).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70416318","Title":"Pin 100k hashes on own IPFS cluster","Uri":"https://stackoverflow.com/a/70416318/10113238","Date":{"Unix":1639959797},"Text":"You can stream a list of files to `ipfs pin add` on STDIN. Here, `/path/to/hashes` is a file with one IPFS hash on each line:\r\n\r\n```bash\r\nipfs pin add < /path/to/hashes\r\n```\r\n\r\nYou can also pass the `--progress` flag to see the current pinning progress.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70416271","Title":"Removing url full stop values from string \".\" and \"„ÄÇ\"","Uri":"https://stackoverflow.com/a/70416271/10113238","Date":{"Unix":1639959051},"Text":"Yes, here are the characters that are treated as a full stop in a URI:\r\n```\r\n. # \"Full stop\", a normal period\r\n„ÄÇ# \"Ideographic full stop\", a Japanese period\r\nÔºé# \"Fullwidth full stop\"\", a period that takes up a whole character in non-monospaced fonts\r\nÔΩ° # \"Halfwidth ideographic full stop\", a Japanese period with half the width\r\n```\r\n\r\nI figured this out by writing a script to check every possible character, and seeing which ones acted the same as `.` in URIs:\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n    function check(char) {\r\n       try {\r\n         let u = new URL(\"https://example\" + char + \"com\");\r\n         return u.hostname === \"example.com\";\r\n       } catch (e) {\r\n         return false\r\n       }\r\n    }\r\n    for (let i = 0; i < 65535; i++) {\r\n      let char = String.fromCharCode(i);\r\n      if (check(String.fromCharCode(i))) console.log(char, i);\r\n    }\r\n\r\n<!-- end snippet -->\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70413874","Title":"When trying to make fullscreen glfw window: cannot borrow `glfw` as mutable because it is also borrowed as immutable","Uri":"https://stackoverflow.com/a/70413874/10113238","Date":{"Unix":1639935705},"Text":"The first argument passed to the closure in `with_primary_monitor` is the `glfw` object you can use to perform further operations with. Use that argument to use `glfw`, instead of using the one from an outer scope:\r\n```rust\r\nlet mut glfw = glfw::init(glfw::FAIL_ON_ERRORS).unwrap();\r\nlet (mut window, events) = glfw.with_primary_monitor(|glfw, m| {\r\n    glfw.create_window(300, 300, \"Window\",\r\n        m.map_or(glfw::WindowMode::Windowed, |m| glfw::WindowMode::FullScreen(m)))\r\n}).expect(\"Failed to create GLFW window\");\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70412908","Title":"Rust: print! doesn't display when trying to get input","Uri":"https://stackoverflow.com/a/70412908/10113238","Date":{"Unix":1639928620},"Text":"The `print!` adds the text to be printed to a buffer, but doesn't flush that buffer to output it to the terminal right away, to improve performance when you are printing lots of things.\r\n\r\nYou said you tried flushing the buffer (as suggested in [this question](https://stackoverflow.com/a/67185950/14004262)), but perhaps you didn't flush it at the right place? You need to flush it before reading from `stdin`. This works for me:\r\n```\r\nuse std::io::Write;\r\n\r\nprint!(\"enter some thing: \");\r\nstd::io::stdout().flush().unwrap();\r\nlet mut input = String::new();\r\nstd::io::stdin().read_line(&mut input).expect(\"Failed to read line\");\r\nprint!(\"{}\", input);\r\n```\r\nExample run:\r\n```none\r\n$ ./x\r\nenter some thing: pie\r\npie\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70412618","Title":"Pointer to first element of vector in Result<Vec<f64>, _> is corrupted","Uri":"https://stackoverflow.com/a/70412618/10113238","Date":{"Unix":1639926522},"Text":"The behaviour of that program is undefined, which can be seen by running it under Miri, which is a Rust interpreter that can sometimes detect Undefined Behavior. (you can do this in the playground by clicking \"Tools\" (top right) -> \"Miri\"):\r\n\r\n```none\r\nerror: Undefined Behavior: pointer to alloc1039 was dereferenced after this allocation got freed\r\n --> src/main.rs:9:25\r\n  |\r\n9 |     assert_eq!(unsafe { *dptr }, 1.0);\r\n  |                         ^^^^^ pointer to alloc1039 was dereferenced after this allocation got freed\r\n  |\r\n  = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\r\n  = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\r\n```\r\n\r\nWhat's happening here is a use-after-free: the `Ok(v) => &v[0],` line moves data from `v` (and thus `res`), causing it to be freed. Later, data used for other variable overwrote the existing data (because using a pointer after the memory it points to is freed is Undefined Behaviour).\r\n\r\nIf you had tried to read the data out of the `res` the normal way without `unsafe`, you would have got a compile-time error for this very issue:\r\n\r\n```none\r\nerror[E0382]: use of partially moved value: `res`\r\n --> src/main.rs:9:10\r\n  |\r\n6 |         Ok(v) => &v[0],\r\n  |            - value partially moved here\r\n...\r\n9 |     dbg!(res.unwrap()[0]);\r\n  |          ^^^ value used here after partial move\r\n  |\r\n  = note: partial move occurs because value has type `Vec<f64>`, which does not implement the `Copy` trait\r\nhelp: borrow this field in the pattern to avoid moving `res.0`\r\n  |\r\n6 |         Ok(ref v) => &v[0],\r\n  |            +++\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=98965560a96feb4a429992562b254285)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70412505","Title":"GitHub Codespaces: can't open file explorer at top-level directory","Uri":"https://stackoverflow.com/a/70412505/10113238","Date":{"Unix":1639925687},"Text":"Add `?folder=/` to the end of the Codespace URI to open it in the root directory. This makes the URI look like `https://username-repo-random.github.dev/?folder=/`.\r\n\r\nAlternatively, you can use the integrated terminal and run `cd / && code .` from there to open a new tab with the Codespace in the root directory. The opened Codespace will have ``?folder=/`` in the URI, so this is effectively equivalent to the other way I described. ","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70408665","Title":"Serde missing field error when deserializing json file","Uri":"https://stackoverflow.com/a/70408665/10113238","Date":{"Unix":1639882070},"Text":"It's not just `link` that is missing: Serde bails at the first error. `link`, `page`, and `pageid`, and `update_timestamp` are all missing. Serde looks for those fields on the top level object, and doesn't find them, since the only key present there is `char_page_info`. Since there can be multiple values of `char_page_info` (it is an array), your `struct` doesn't model the underlying data correctly. By fully modelling the data, we can get the expected results:\r\n\r\n```rust\r\n#[derive(Serialize, Deserialize, Debug)]\r\nstruct Init {\r\n    link: String,\r\n    page: String,\r\n    pageid: u16,\r\n    update_timestamp: u16,\r\n}\r\n\r\n#[derive(Serialize, Deserialize, Debug)]\r\nstruct Data {\r\n    char_page_info: Vec<Init>,\r\n}\r\n\r\nlet data = r#\"{\r\n    \"char_page_info\": [\r\n        {\r\n            \"link\": \"\",\r\n            \"page\": \"GGST/Jack-O/Frame_Data\",\r\n            \"pageid\": 27121,\r\n            \"update_timestamp\": 0\r\n        }\r\n    ]\r\n}\"#;\r\nprintln!(\"{}\", data);\r\nlet p: Data = serde_json::from_str(&data).unwrap();\r\nprintln!(\"{:#?}\", p.char_page_info); \r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=028868871287604079e271d4fc787459)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70407446","Title":"GitHub Actions API: Get view workflow run history","Uri":"https://stackoverflow.com/a/70407446/10113238","Date":{"Unix":1639864436},"Text":"Use the [`/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs`](https://docs.github.com/en/rest/reference/actions#list-workflow-runs) endpoint to list the runs of a given workflow ID in a given repository.\r\n\r\nFor example, to get all of the runs of the CI job for the `rust-lang/rust` repository, use [`https://api.github.com/repos/rust-lang/rust/actions/workflows/817415/runs`](https://api.github.com/repos/rust-lang/rust/actions/workflows/817415/runs).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70407128","Title":"What is \"<[_]>\" in Rust?","Uri":"https://stackoverflow.com/a/70407128/10113238","Date":{"Unix":1639861388},"Text":"Let's go step by step to see how `<[_]>::into_vec(box [$($x),+])` produces a `Vec`:\r\n1. `[$($x),+]` expands to an array of input elements: `[1, 2, 3]`\r\n2. `box ...` puts that into a `Box`. `box` expressions are nightly-only syntax sugar for `Box::new`: `box 5` is syntax sugar for `Box::new(5)` (actually it's the other way around: internally `Box::new` uses `box`, which is implemented in the compiler)\r\n3. `<[_]>::into_vec(...)` calls the `to_vec` method on a slice containing elements that have an inferred type (`[_]`). Wrapping the `[_]` in angled brackets is needed for syntactic reasons to call an method on a slice type. And `into_vec` is a function that takes a boxed slice and produces a `Vec`:\r\n    ```\r\n    pub fn into_vec<A: Allocator>(self: Box<Self, A>) -> Vec<T, A> {\r\n        // ...\r\n    }\r\n    ```\r\n\r\nThis *could* be done in many simpler ways, but this code was fine-tuned to improve the performance of `vec!`. For instance, since the size of the `Vec` can be known in an advance, `into_vec` doesn't cause the `Vec` to be reallocated during its construction. ","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70405810","Title":"How can I get the largest element from array, using generics and traits?","Uri":"https://stackoverflow.com/a/70405810/10113238","Date":{"Unix":1639850572},"Text":"You need to make the `Largeable` trait return a `T` from the `Vec<T>`, which you can do with an associated type:\r\n```\r\nuse std::fmt;\r\n\r\npub trait Largeble {\r\n    type Output;\r\n    fn largest(&self) -> Self::Output;\r\n}\r\n\r\nimpl<T: Copy + PartialOrd + fmt::Display> Largeble for Vec<T> {\r\n    type Output = T;\r\n    fn largest(&self) -> T {\r\n        let mut largest = match self.get(0) {\r\n            Some(&el) => el,\r\n            None => panic!(\"Non Empty array expected\")\r\n        };\r\n\r\n        for &el in self {\r\n            if el > largest {\r\n                largest = el;\r\n            }\r\n        } \r\n    \r\n        largest\r\n    }\r\n}\r\n\r\nprintln!(\"{}\", vec![1, 2, 3, 2].largest()); // prints \"3\"\r\n```\r\n\r\nTraits like `Largeable` are usually called [*extension traits*](https://rust-lang.github.io/rfcs/0445-extension-trait-conventions.html), since they extend existing items with new features. Using extension traits to extend items in existing libraries is common in the Rust ecosystem. It's common to suffix the names of extensions with `Ext` (so a collection of additional methods for `Vec` would be called `VecExt`). A popular use of extension traits is the [`itertools`](https://docs.rs/itertools/latest/itertools/) library, which provides a trait that adds additional useful methods to `Iterator` in the standard library. ","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70403665","Title":"What exactly does __rust_force_expr do?","Uri":"https://stackoverflow.com/a/70403665/10113238","Date":{"Unix":1639832702},"Text":"It doesn't have any result on how the macro is used, it only serves to improve the quality of error messages when the macro is used incorrectly by telling the compiler that the output of the macro is always a single expression, not an item or multiple expressions.\r\n\r\nThe specific error that this was added to improve was for using `vec![]` in a pattern match, which is invalid (you can't structually match on a `Vec`):\r\n```rust\r\nlet x: Option<Vec<i32>> = Some(vec![]);\r\nmatch x {\r\n    Some(my_vec![]) => println!(\"1\"),\r\n    _ => println!(\"2\"),\r\n};\r\n```\r\nresults in\r\n```none\r\nerror[E0164]: expected tuple struct or tuple variant, found associated function `Vec::new`\r\n  --> src/main.rs:9:9\r\n   |\r\n9  |         Vec::new()\r\n   |         ^^^^^^^^^^ `fn` calls are not allowed in patterns\r\n...\r\n15 |     Some(my_vec![]) => println!(\"1\"),\r\n   |          --------- in this macro invocation\r\n   |\r\n   = help: for more information, visit https://doc.rust-lang.org/book/ch18-00-patterns.html\r\n   = note: this error originates in the macro `mvec` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\nThis is a fairly confusing error, especially when using the `vec![1, 2, 3]` syntax. It doesn't *look* like are any function calls in the caller. But by wrapping the body of `vec!` with `__rust_force_expr`, we get a better error:\r\n```none\r\nerror: arbitrary expressions aren't allowed in patterns\r\n  --> src/main.rs:15:10\r\n   |\r\n15 |     Some(vec![]) => println!(\"1\"),\r\n   |          ^^^^^^\r\n   |\r\n   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\nThis makes a lot more sense: `vec![]` produces an expression, and there are no reference to function calls that are behind a macro.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70339506","Title":"What is the etymology or software principle behind \"fuse\" in Rust?","Uri":"https://stackoverflow.com/a/70339506/10113238","Date":{"Unix":1639421245},"Text":"The earliest use I could find of \"fuse\" in the Rust ecosystem is [`Iterator::fuse`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.fuse), which [was added to the standard library](https://github.com/rust-lang/rust/pull/8276) during the pre-1.0 days. The initial documentation for `Iterator::fuse` said:\r\n```rust\r\n/// Creates an iterator that yields `None` forever after the underlying\r\n/// iterator yields `None`. Random-access iterator behavior is not\r\n/// affected, only single and double-ended iterator behavior.\r\n```\r\nThere was also a function on the returned iterator that has since been removed:\r\n```rust\r\nimpl<T> Fuse<T> {\r\n    /// Resets the fuse such that the next call to .next() or .next_back() will\r\n    /// call the underlying iterator again even if it prevously returned None.\r\n    #[inline]\r\n    fn reset_fuse(&mut self) {\r\n        self.done = false\r\n    }\r\n}\r\n```\r\nThis indicates that `Fuse` is an analogy to [a resettable electric fuse](https://en.wikipedia.org/wiki/Resettable_fuse). The name is entirely unrelated to the FUSE filesystem.\r\n\r\n[`FutureExt::Fuse`](https://docs.rs/futures/0.3.14/futures/future/trait.FutureExt.html#method.fuse) is basically the `Future` equivalent to `Iterator::Fuse`. Support for `Future`s in Rust came far after support for `Iterator`s.\r\n\r\nThe common thread here is that a `fuse` function takes **\"a thing that produces things, and can stop\"**, and makes it so it doesn't produce things after it stops.\r\n\r\n`slog::Fuse` is not a typical use of the word \"fuse\": that use might be referencing the fuse of a bomb, which is easily ignited (it makes errors easily ignite/panic the program). You can *kinda* fit it onto the earlier definition I made if you think of it as \"a thing produces a stream of successes/failures, and `fuse` takes a failure and makes it so it doesn't produce anything more after a failure\". [The commit that added it](https://github.com/slog-rs/slog/commit/e44b22f2f4321fee452aa9bd95658afbe06dd508) doesn't provide any hints as to the meaning.\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70338563","Title":"How to traverse tuple in rust?","Uri":"https://stackoverflow.com/a/70338563/10113238","Date":{"Unix":1639416184},"Text":"You *can* do this, but it's a really bad idea. Tuples have fixed length and data at compile time, and this is almost certainly not what you want to do.\r\n\r\nBut if you really think this is a good idea, you can use a macro to simplify the traversing. Since the length and values of tuples are fixed at compile time, this can hardcode some information about each tuple element when invoking the macro.\r\n\r\n```\r\nmacro_rules! note {\r\n    (unnamed $idx:tt) => {\r\n        Note {\r\n            start_time: tunple.$idx.0,\r\n            key: tunple.$idx.1,\r\n            length: tunple.$idx.2,\r\n            note_type: String::new(), // default to empty string if none provided\r\n        }\r\n    };\r\n    (named $idx:tt) => {\r\n        Note {\r\n            start_time: tunple.$idx.0,\r\n            key: tunple.$idx.1,\r\n            length: tunple.$idx.2,\r\n            note_type: tunple.$idx.3.to_string(),\r\n        }\r\n    };\r\n}\r\nlet parsed = (\r\n    note!(unnamed 0),\r\n    note!(unnamed 1),\r\n    note!(named 2),\r\n    note!(named 3),\r\n);\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4c7d20a391c900695ec689d7a2abf2b6)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70338106","Title":"Difference between Vec<_> and Vec<T>","Uri":"https://stackoverflow.com/a/70338106/10113238","Date":{"Unix":1639414127},"Text":"`Vec<T>` could be defined as (the actual definition is more complex):\r\n```\r\npub struct Vec<T> {\r\n    buf: RawVec<T>,\r\n    len: usize,\r\n}\r\n```\r\n\r\nAs such, it's called `Vec<T>` because that's how the generic struct is defined.\r\nWhen creating a `Vec`, you have to specify what the type of the elements are:\r\n```\r\nlet x: Vec<u8> = vec![1, 2, 3];\r\n```\r\nHere, the type annotation isn't actually needed, since the compiler can infer it for us.\r\n\r\nLet's say we want to obtain all of the command line arguments as a `Vec`. We could try:\r\n```\r\nlet args = std::env::args().collect();\r\n```\r\n...but that fails with:\r\n```lang-text\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:2:9\r\n  |\r\n2 |     let args = std::env::args().collect();\r\n  |         ^^^^ consider giving `args` a type\r\n```\r\nsince we didn't specify which container to collect the arguments into: `.collect()` can collect the iterator elements into a `Vec<T>`, a `Box<[T]>`, a `LinkedList<T>`, [and many more](https://doc.rust-lang.org/stable/std/iter/trait.FromIterator.html#implementors). Let's specify a type:\r\n```\r\nlet args: Vec<String> = std::env::args().collect();\r\n```\r\nThis compiles, but we can make this a bit simpler: we can do\r\n```\r\nlet args: Vec<_> = std::env::args().collect();\r\n```\r\nand get the same effect, since the `_` tells the compiler to infer what the type is. Since there is only one possible type inferred by the compiler, it replaces the `_` with `String`. `Vec<_>` isn't a type, it's a partial type that makes the compiler fill in the `_`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70307923","Title":"How can I parse the .nth() line in a file as an integer?","Uri":"https://stackoverflow.com/a/70307923/10113238","Date":{"Unix":1639155244},"Text":"You can't parse a number out of an `Option<String>`, since if it is `None` then there is nothing to parse. You must unwrap the `Option` first (or do proper error handling):\r\n```\r\nuse std::io::{BufRead, BufReader};\r\nuse std::fs::File;\r\n\r\nfn main() {\r\n    let reader = BufReader::new(File::open(\"input\").expect(\"Cannot open file\"));\r\n    let number: u32 = reader.lines()\r\n        .nth(5)\r\n        .expect(\"input is not 5 lines long\")\r\n        .expect(\"could not read 5th line\")\r\n        .parse::<u32>()\r\n        .expect(\"invalid number\");\r\n\r\n    println!(\"{}\", number);\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70296372","Title":"GitHub git hook on remote site to update wiki pages","Uri":"https://stackoverflow.com/a/70296372/10113238","Date":{"Unix":1639082043},"Text":"GitHub doesn't support Git hooks (on GitHub.com at least, they *are* supported on GitHub Enterprise). However, you can use [GitHub Actions](https://github.com/features/actions) to run arbitrary code on a push, albeit in an isolated VM and not on the actual Git server.\r\n\r\nIn `.github/workflows/wiki-mirror.yml` (or whatever filename you want in `.github/actions`), you can add an Action to do the syncing. Since GitHub wikis expect markdown files, this changes the extensions of the `.txt` files to match:\r\n```yaml\r\nname: \"Mirror doc/ to wiki\"\r\n\r\n# Run on changes to the `doc` directory on the `master` branch\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    paths:\r\n      - 'doc/**'\r\n\r\njobs:\r\n  mirror:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - name: Checkout main\r\n        uses: actions/checkout@v2\r\n        with:\r\n          path: [repo name]\r\n      - name: Checkout wiki\r\n        uses: actions/checkout@v2\r\n        with:\r\n          repository: \"[owner]/[repo name].wiki\"\r\n          path: [repo name].wiki\r\n      - name: Copy files\r\n        run: |\r\n          git config --global user.email \"actions@github.com\"\r\n          git config --global user.name \"Wiki mirror\"\r\n          cp $GITHUB_WORKSPACE/[repo name]/doc/*.txt $GITHUB_WORKSPACE/[repo name].wiki\r\n          cd $GITHUB_WORKSPACE/[repo name].wiki\r\n          rename.ul -v .txt .md *.txt\r\n          git add .\r\n          # only commit if there are changes\r\n          git diff-index --quiet HEAD -- || git commit -m \"sync from doc/\"\r\n          git push\r\n```\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70293462","Title":"Rust: install locally built executable systemwide","Uri":"https://stackoverflow.com/a/70293462/10113238","Date":{"Unix":1639067733},"Text":"You can do\r\n```bash\r\n$ cargo install --path .\r\n```\r\nto have `cargo` compile in release mode and install the crate in the current directory. This makes Cargo install it to `~/.cargo/bin`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70291632","Title":"Rust tells me that an import is unused, and then in the very same breath tells me that I should make that import","Uri":"https://stackoverflow.com/a/70291632/10113238","Date":{"Unix":1639060037},"Text":"`use`s are scoped to the module that imports them, not the file they are in. \r\nMove the import into the `dogroom` module:\r\n\r\n```\r\npub mod dogroom {\r\n    use crate::rooms::room::RoomInterface;\r\n\r\n    pub struct R;\r\n\r\n    impl RoomInterface for R {\r\n\r\n    }\r\n}\r\n```\r\n\r\nAlternatively, you might want the `dogroom` module to re`use` everything from the parent module:\r\n```\r\nuse crate::rooms::room::RoomInterface;\r\npub mod dogroom {\r\n    use super::*;\r\n\r\n    pub struct R;\r\n\r\n    impl RoomInterface for R {\r\n\r\n    }\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70291414","Title":"Not getting expected output from as_string implemented for enum type","Uri":"https://stackoverflow.com/a/70291414/10113238","Date":{"Unix":1639059184},"Text":"The `match` expression always matches on the first option, binding it to a variable named `val1`. That's why you got this compiler warning (in addition to a `unreachable pattern` warning):\r\n```text\r\nwarning[E0170]: pattern binding `val1` is named the same as one of the variants of the type `Config`\r\n  --> src/main.rs:11:13\r\n   |\r\n11 |             val1 => \"val1\",\r\n   |             ^^^^ help: to match on the variant, qualify the path: `Config::val1`\r\n   |\r\n   = note: `#[warn(bindings_with_variant_name)]` on by default\r\n```\r\n\r\nAlso, the wildcard binding is unnecessary and ignored by the compiler. Null isn't really a thing in Rust (you can use `Option` to represent the potential lack of a value).\r\n\r\n\r\nYou can fix this by specifying the enum that is being matched against and removing the `_` pattern:\r\n```\r\nmatch self {\r\n    Config::val1 => \"val1\",\r\n    Config::val2 => \"val2\",\r\n    Config::val3 => \"val3\",\r\n    Config::val4 => \"val4\",\r\n}\r\n```\r\n\r\nAlternatively, you could import the `enum` variants with `use Config::*;` and keep your existing `match` statement.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70203517","Title":"Is it possible to run nightly cargo with stable rustc","Uri":"https://stackoverflow.com/a/70203517/10113238","Date":{"Unix":1638464034},"Text":"You can use the `__CARGO_TEST_CHANNEL_OVERRIDE_DO_NOT_USE_THIS` environment variable to override the Cargo channel. As the name suggests, it's not really intended to be used. But you can! Keep in mind that with this approach you only get the unstable features included in the latest stable release (and important fixes for unstable features aren't going to get backported to the stable branch, because this shouldn't be used)\r\n```bash\r\n# Allow unstable options in Cargo, but use stable rustc\r\n__CARGO_TEST_CHANNEL_OVERRIDE_DO_NOT_USE_THIS=nightly cargo build -Z unstable-options\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-70156484","Title":"Read site configuration from a Hugo partial","Uri":"https://stackoverflow.com/a/70156484/10113238","Date":{"Unix":1638196784},"Text":"You can pass the current context to a partial with `.`:\r\n```lang-hugo\r\n{{ partial \"header.html\" . }}\r\n```\r\nYou can then access the context from within the partial as you would from the caller:\r\n```plain\r\nThis site is called {{ .Site.Title }}.\r\n```\r\n---\r\nHugo doesn't directly support passing multiple arguments to a partial. If you want to pass things in addition to the context, you can pass a dictionary with all the values:\r\n```lang-hugo\r\n{{ partial \"header.html\" (dict \"Ctx\" . \"Percent\" \"84\") }}\r\n```\r\nAnd then from within the partial:\r\n```plain\r\nThis site is called {{ .Ctx.Site.Title }}, and is {{ .Percent }}% awesome!\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67650170","Title":"How to implement serde::Deserialize on struct containing &'static str?","Uri":"https://stackoverflow.com/q/67650170/10113238","Date":{"Unix":1621690963},"Text":"I'm trying to implement `serde::Deserialize` on a `SourceConfig` struct, which wraps a struct containing an `&'static str` along with having some data of its own [(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c3b738fd09f12645d733e631bc9be67c):\r\n```rust\r\nuse serde::{Serialize, Deserialize};\r\n\r\n#[derive(Serialize, Deserialize)]\r\npub struct Config {\r\n    pub name: &'static str,\r\n}\r\n\r\n#[derive(Serialize, Deserialize)]\r\nstruct SourceConfig {\r\n    config: Config,\r\n    id: u32,\r\n}\r\n```\r\n\r\nBut that gives me a lifetime error:\r\n```lang-text\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'de` due to conflicting requirements\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime `'de` as defined on the impl at 8:21...\r\n  --> src/lib.rs:8:21\r\n   |\r\n8  | #[derive(Serialize, Deserialize)]\r\n   |                     ^^^^^^^^^^^\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `SeqAccess<'_>`\r\n              found `SeqAccess<'de>`\r\n   = note: but, the lifetime must be valid for the static lifetime...\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `Deserialize<'_>`\r\n              found `Deserialize<'static>`\r\n   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'de` due to conflicting requirements\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime `'de` as defined on the impl at 8:21...\r\n  --> src/lib.rs:8:21\r\n   |\r\n8  | #[derive(Serialize, Deserialize)]\r\n   |                     ^^^^^^^^^^^\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `MapAccess<'_>`\r\n              found `MapAccess<'de>`\r\n   = note: but, the lifetime must be valid for the static lifetime...\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `Deserialize<'_>`\r\n              found `Deserialize<'static>`\r\n   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nI tried adding `#[serde(borrow)]` to the `config` in `SourceConfig`, but that doesn't work since `Config` isn't borrowed. Adding it to the `name` in `Config` doesn't work either. How can I correctly implement `Deserialize` on `SourceConfig`?","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69326022","Title":"Why is there no logical negation for atomic operations?","Uri":"https://stackoverflow.com/a/69326022/10113238","Date":{"Unix":1632571890},"Text":"The x86 assembly for `fetch_or` looks like this (when the value is discarded):\r\n\r\n```asm\r\nlock\r\nor byte ptr [rsp], 51\r\n```\r\n\r\nThat's actually one instruction: `lock` is an instruction prefix that modifies the next instruction. Specifically, `lock` makes the instruction be executed atomically. [Intel's x86 manual](https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf) specifies what instructions support the `lock` prefix. Bitwise `not` supports the `lock` prefix\r\n> This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically.\r\n\r\nSo if there's an x86 instruction for it, why isn't there an atomic operation for it? [LLVM](https://llvm.org/) doesn't have an intrinsic for it. In Rust, the `Atomic*` functions all forward directly to an LLVM intrinsic, so only the operations that had a corresponding LLVM intrinsic got a function. The memory model for JavaScript atomics [\"takes significant inspiration from LLVM\"](https://github.com/tc39/ecmascript_sharedmem/blob/5acab4636ead3cc9fe13b0d97a40c7dadab2fed9/LLVM_LIKE.md), so it doesn't seem like a stretch to guess that the `Atomics` functions were just copied from what LLVM had.\r\n\r\n[LLVM supports 6 intrinsic operations](https://llvm.org/docs/Atomics.html#libcalls-atomic): `add`, `sub`, `and`, `or`, `xor`, and `nand`. It supports those ones because [GCC has intrinsic operations with the same names](https://gcc.gnu.org/wiki/Atomic/GCCMM/LIbrary#line-238) (except for the type). Atomic `and`, `sub`, `and`, `or`, and `xor` operations [were added to GCC](https://gcc.gnu.org/pipermail/gcc-patches/2011-August/320670.html) ([`nand` was added later](https://gcc.gnu.org/pipermail/gcc-patches/2011-September/323038.html)) as a part of adding support for `std::atomic` in C++11.\r\n\r\nC++11 has 5 bitwise atomic operations in `std::atomic`: add, sub, and, or, xor. (but not nand, which gets an intrinsic in GCC but no actual support in `std::atomic`). Why? Because that is what was suggested in the [2007 paper](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2324.html) originally proposing atomics in C++, which defines the operations \"fetch-and-{add,sub,and,or,xor}\". They don't provide a reason for only having those 5 operations, but my guess is that they wanted to minimise the amount of implementation work for compiler implementors, since you can get a NOT operation by XORing against all ones. Or maybe they just didn't think about it.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69609786","Title":"Character whose ASCII value is equal to tick the mark on YouTube and Instagram","Uri":"https://stackoverflow.com/a/69609786/10113238","Date":{"Unix":1634519603},"Text":"Yes, ‚òëÔ∏è or ‚úÖ looks like those. Twitter even [has a list of emojis that look like the verified symbol](https://blog.emojipedia.org/why-you-cant-use-these-emojis-in-your-twitter-name/) (and prevents those emojis from being used in usernames).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69609560","Title":"Do I need to use Firebase to access all Hacker News articles?","Uri":"https://stackoverflow.com/a/69609560/10113238","Date":{"Unix":1634516431},"Text":"You don't have to use the Firebase SDK to interact with the API, although [you *can* if you want to](https://stackoverflow.com/q/69518903/14004262). Using the Firebase SDK gets you minor performance gains, at the cost of some more implementation complexity. But you can also just make requests to the API endpoints using a normal HTTP client using the API endpoints listed in the documentation (like `https://hacker-news.firebaseio.com/v0/item/8863.json`).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69518904","Title":"How can I access the Hacker News API using the Firebase SDK?","Uri":"https://stackoverflow.com/a/69518904/10113238","Date":{"Unix":1633899236},"Text":"You can interact it with it using the [Realtime Database API](https://firebase.google.com/docs/database). Set the `databaseURL` to `https://hacker-news.firebaseio.com`, and you can make queries using the Firebase client libraries. The paths are the same as the paths in the API, without the `.json` file extension. For example, this would get data for the user `jl` using the web client:\r\n\r\n```lang-js\r\nvar config = {\r\n    databaseURL: \"https://hacker-news.firebaseio.com\",\r\n};\r\nfirebase.initializeApp(config);\r\nvar database = firebase.database();\r\nconsole.log((await database.ref(\"v0/user/jl\").get()).val());\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69518903","Title":"How can I access the Hacker News API using the Firebase SDK?","Uri":"https://stackoverflow.com/q/69518903/10113238","Date":{"Unix":1633899236},"Text":"The Hacker News API documentation says:\r\n> If you can use one of the many [Firebase client libraries](https://firebase.google.com/docs/libraries/), you really should. The libraries handle networking efficiently and can raise events when things change. Be sure to check them out.\r\n\r\nIt doesn't specify *how* to do that though. How can I use the Firebase client libraries to interact with the Hacker News API, to gain more efficient networking and support for listening for events?","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69518830","Title":"How does the Hacker News API produce a topStories and newStories endpoint on Firebase?","Uri":"https://stackoverflow.com/a/69518830/10113238","Date":{"Unix":1633898357},"Text":"It doesn't appear that there is a way to have endpoints like that with content generated on-the-fly by Firebase. It appears that those endpoints are just normal data endpoints, with their data continuously updated by the Hacker News backend to be correct. Firebase isn't the source of truth for HN data anyways: *all* of the data in the API is updated by a script whenever the underlying data changes in the real database.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69440248","Title":"Location of data in PNG chunks","Uri":"https://stackoverflow.com/a/69440248/10113238","Date":{"Unix":1633369321},"Text":"Yes. Note that the `PLTE` chunk has multiple fields: it specifies the whole palette, not just a single colour. Also, if the image uses a different color scheme (such as grayscale or RGBA) then the data stored in the PLTE chunk will be different due to encoding different types of colors. Here's the `PLTE` chunk looks like in a PNG image:\r\n\r\n```\r\n[LENGTH] [  NAME  ]  [       DATA       ] [CRC]\r\n         P  L  T  E  Color1 Color2 ColorN \r\n00000288 50 4c 54 45 000000 000033 [...]  000000e5\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69380884","Title":"Why does LLVM appear to ignore Rust's assume intrinsic?","Uri":"https://stackoverflow.com/a/69380884/10113238","Date":{"Unix":1632935978},"Text":"This [now compiles to just a `ret`](https://rust.godbolt.org/z/sKxWWG5vz) on recent versions of rustc due to improvements in rustc and LLVM. LLVM ignored the intrinsic because it wasn't able to optimize it before, but now it has the ability to optimize this better.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69353504","Title":"Displaying raw pixel array on a web page using image tag","Uri":"https://stackoverflow.com/a/69353504/10113238","Date":{"Unix":1632778450},"Text":"Relevant links: the [zlib RFC](https://www.ietf.org/rfc/rfc1950.txt), the [DEFLATE RFC](https://datatracker.ietf.org/doc/html/rfc1951), and the [PNG spec](https://www.w3.org/TR/PNG/). You may wish to consult these while reading.\r\n\r\nLet's make a PNG!\r\nStart with the image data as an RGBA image, for example for a 2x2 image:\r\n```\r\n12 34 56 78  9a bc de f0\r\ncd ef 01 23  45 67 89 ab \r\n```\r\n## Specify filters\r\nFor each row of the image, add a null byte to the beginning to set the PNG filter to none. For example,\r\n```\r\n00  12 34 56 78  9a bc de f0 # row 1 of image\r\n00  cd ef 01 23  45 67 89 ab # row 2 of image\r\n```\r\n## DEFLATE encode it\r\nWhile this is a compression format, we don't actually need to compress it! DEFLATE provides a way to encode data without compressing it (see section 3.2.4 of the DEFLATE spec). Find the length of the filtered image data from above as a 16-bit integer (if it is bigger than 65535, then split the image data into 65535-sized chunks, and do this step for each chunk). Create an empty array to hold the DEFLATE data stream. Insert that size as a 16-bit integer in big-endian format into the currently empty DEFLATE data stream. Next, append the bitwise inverse of the length. Finally, insert the filtered image data into the data stream.\r\n\r\n## Wrap it in zlib\r\nNext, we need to zlib-encode the data. Start with an empty zlib data stream, and insert 2 null bytes for the header. Next, insert the DEFLATEd data from above. Finally, insert the Adler32 checksum of the **uncompressed** data. Specifically, the Adler32 checksum should be created from the filtered image data.\r\n\r\n## Wrap it in a PNG format\r\nFinally, let's wrap this into a PNG. Replace the width and height values, specify the length of the `IDAT` chunk as the length of the zlib-encoded data, and replace the CRCs of the `IDHR` and `IDAT` chunks by taking the CRC32 checksum of the the chunk name concatenated with the data.\r\n```\r\n# PNG signature\r\n137 80 78 71 13 10 26 10\r\n\r\n# IDHR chunk\r\n00 00 00 0d # IDHR length\r\n73 72 68 82 # IDHR type\r\n00 00 00 02 # width: COMPUTE THIS\r\n00 00 00 02 # height: COMPUTE THIS\r\n08 # bit depth: 8\r\n06 # colour type: truecolour with alpha\r\n00 # compression method: zlib\r\n00 # filter method: normal\r\n00 # no interlacing\r\n55 55 55 55 # CRC: COMPUTE THIS from \"IDHR\" + data\r\n\r\n# IDAT chunk\r\n55 55 55 55 # IDAT length: COMPUTE THIS\r\n73 68 65 84 # IDAT type\r\n[zlib data]\r\n55 55 55 55 # CRC: COMPUTE THIS from the \"IDAT\" + data\r\n\r\n# IEND chunk\r\n00 00 00 00 # IEND length\r\n73 69 78 68 # IEND type\r\nAE 42 60 82 # CRC (always the same value, doesn't need to be computed)\r\n```\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69345261","Title":"Cargo says \"test failed, to rerun pass '--lib\" - What does it mean?","Uri":"https://stackoverflow.com/a/69345261/10113238","Date":{"Unix":1632739410},"Text":"That error message means that in order to rerun the tests that failed, you should pass `--lib`. What `--lib` does is (from the help) \"Test only this package's library unit tests\". So a library unit test failed, and Cargo is telling you how to rerun only the library unit tests, since you don't need to bother re-running the tests that just passed, but instead usually want to focus on the tests that failed and rerun those only.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69340069","Title":"How to satisfy strict mime type checking for wasm?","Uri":"https://stackoverflow.com/a/69340069/10113238","Date":{"Unix":1632703421},"Text":"`application/wasm` is indeed the correct MIME type to use for WASM files. The problem is that the WASM isn't being imported the proper way, through `WebAssembly.instantiate[Streaming]`. Instead, it is imported with:\r\n```lang-js\r\nimport { add } from \"./add.wasm\";\r\n```\r\nNormally, this gets transpiled to a `WebAssembly.instantiate` call, but this isn't happening. Instead, the module is being served without the `import`s being transpiled to proper importing. Make sure you are transpiling the JavaScript, and not just serving it as a static file, as seems to be the case in that code. Alternatively, you could make the `WebAssembly.instantiate` call yourself.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69338687","Title":"Dereferencing a pointer to a dropped value and the memory is still there","Uri":"https://stackoverflow.com/a/69338687/10113238","Date":{"Unix":1632687902},"Text":"When a String is dropped in Rust, ultimately what ends up getting called is [`Allocator::deallocate`](https://doc.rust-lang.org/stable/std/alloc/trait.Allocator.html#tymethod.deallocate) on the system allocator. After this, using the data is undefined behaviour, so anything could happen! But in practice what tends to happen if there aren't any funky compiler optimizations is that you just get whatever data is stored in memory there. If there aren't any new allocations at that place, then you just get whatever data was there before.\r\n\r\nWhen a memory allocation is freed, nothing happens to the allocation. Clearing the data by setting it to all zero (or some other value) would be pointless, since any newly allocated memory always needs to be initialized by the user of that memory.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69335282","Title":"Javascript regex to match JSDoc tags inside a documentation block","Uri":"https://stackoverflow.com/a/69335282/10113238","Date":{"Unix":1632662102},"Text":"Yep, the problem is that the description matcher is greedy. Changing `*` to `*?` to make it non-greedy fixes it. But it still has the problem of knowing when to stop. You can do that by checking if the input is over, or if there is  a `/// @` ahead. Note that this includes the `///` at the start of each description line: I don't think it's possible to filter them out directly in the regex, so you'd have to post-process the output to remove `///`s in `desc`.\r\n\r\n`/^\\/{3} @(?<tag>\\w+)(?:[ \\t]+{(?<type>.*)})?(?:[ \\t]+(?<name>\\w+))((?:[ \\t]+(?<desc>[\\s\\S]*?)((?=\\/\\/\\/ @)|\\s*\\z)))?/gm`","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69331051","Title":"Certbot failed to authenticate some domains","Uri":"https://stackoverflow.com/a/69331051/10113238","Date":{"Unix":1632617600},"Text":"When using the `webroot` method with Certbot, a web server is spun up that serves a single file, so that Let's Encrypt can verify the ownership of the server at a domain. But when LE accessed your domain, it got a different server that served a 404 page. It seems that the DNS for your domain isn't pointing to the EC2 instance that is requesting a certificate. (or perhaps it has been updated but just hasn't propagated yet). You need to update the DNS records to point to the server requesting a certificate with certbot. Alternatively, you can use a different challenge type that doesn't require running a server to prove ownership (such as `dns-01`).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69329560","Title":"APNG gets out of sync after second page refresh","Uri":"https://stackoverflow.com/a/69329560/10113238","Date":{"Unix":1632599788},"Text":"Browsers don't have any built-in support for treating APNGs as anything other than an image: there is no way to determine when an APNG has started or stopped playing. You could probably fix the issue by just converting the APNGs to an actual video file format, and embedding the images with `<video>` instead, since [that has an API for controlling playback](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement). Alas, it doesn't seem that any browsers support treating APNGs as video so you'll need to convert it to another video format, such as WebM.\r\n\r\nIf you are *really* committed to not converting your APNGs to a video file format, you could work around the limitation in browsers by using a library such as [pngjs](https://github.com/arian/pngjs) to decode the APNG, extracting [the `fdAT` chunks](https://wiki.mozilla.org/APNG_Specification#.60fdAT.60:_The_Frame_Data_Chunk), and then manually animating through those extracted frames (each frame in an APNG is itself a (non-animated) PNG).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69326833","Title":"Generate random using button using JavaScript","Uri":"https://stackoverflow.com/a/69326833/10113238","Date":{"Unix":1632578245},"Text":"You need to store your emojis as their hex values, not as their HTML entity encoded form. Also, it seems the Unicode values you picked map to Japanese characters, not emojis. Here's a working (except for actually using Japanese characters) script that I cleaned up a bit:\r\n\r\n```lang-js\r\nvar emojis = [0x128512, 0x128516, 0x128513, 0x128514];\r\nvar display = document.getElementById('emojiDisplay');\r\n\r\nfunction displayEmoji(){\r\n  var random = Math.floor(Math.random() * emojis.length);\r\n  var emoji = emojis[random];         \r\n  display.innerHTML=`<h2>${String.fromCharCode(emoji)}</h2>`;\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69319349","Title":"How do I programmatically taint the Linux kernel?","Uri":"https://stackoverflow.com/a/69319349/10113238","Date":{"Unix":1632506216},"Text":"The `root` user can taint the kernel [by writing a taint value to `/proc/sys/kernel/tainted`](https://github.com/torvalds/linux/commit/34f5a39899f3f3e815da64f48ddb72942d86c366). Taint flags can only be set (not removed) in this way: there is no way to untaint a running kernel. When writing a value to indicate that userspace has done something weird, you should use `TAINT_USER` (which has a value of `32`). For example (as `root`):\r\n```\r\n# cat /proc/sys/kernel/tainted\r\n64\r\n# echo 32 > /proc/sys/kernel/tainted\r\n# cat /proc/sys/kernel/tainted\r\n96\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69319348","Title":"How do I programmatically taint the Linux kernel?","Uri":"https://stackoverflow.com/q/69319348/10113238","Date":{"Unix":1632506216},"Text":"Is it possible to taint a running Linux kernel programatically? I want to be able to test things with a tainted kernel, without recompiling it to make it tainted or finding a proprietary kernel module to load.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69317844","Title":"Cannot push to GitHub: Gist does not support directories","Uri":"https://stackoverflow.com/a/69317844/10113238","Date":{"Unix":1632498394},"Text":"There is a way to work around Gist's prohibition on directories: only the *latest* commit on each branch is checked for the presence of directories. If you create a commit with directories, then remove the directories in the next commit, you can push both commits together, then create a link to the commit with directories by appending `/[commit]` to the Gist URI.\r\n\r\nThe Gist UI handles this a bit weird: it seems to flatten out the directory structure, and display files across all directories. You *can* push branches, but branches other than `master` aren't linked to in the Gist UI anywhere. Commit URIs still work correctly though.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69256632","Title":"How to add SSL certificate inside binary file?","Uri":"https://stackoverflow.com/a/69256632/10113238","Date":{"Unix":1632149984},"Text":"There is probably a way to do this that doesn't involve modifying compiled binaries (if you can access the key at compile time you can do `include_str!` and if you have file system access you can read it from disk at run time), but there is a fairly hacky way to do this if you must:\r\n\r\n1. Put a dummy key in a `const` or `static`, and read from that in the binary.\r\n2. Replace the dummy key with the real key in the binary, **making sure that you don't change the size of the binary**.\r\n3. Run the modified binary, it will use the new key now.\r\n\r\nThis works because you can modify strings in binaries and it usually won't cause any issues as long as don't change the size of the binary. But keep in mind that the compiler doesn't expect the compiled binaries to be modified, so make sure that there aren't compiler optimisations that fail when the value of the key is changed.\r\n\r\nFor example, put this in `x.rs`\r\n```lang-rust\r\nconst KEY: &str = \"PRIVATEKEYEXAMPLE\";\r\nfn main() {\r\n    println!(\"{}\", KEY);\r\n}\r\n```\r\n\r\nand run:\r\n\r\n```lang-bash\r\n$ rustc x.rs\r\n$ sed s/PRIVATEKEYEXAMPLE/REALLYPRIVATEKEYY/g < x > y # replace the string in the binary\r\n$ chmod +x y\r\n$ ./y\r\nREALLYPRIVATEKEYY\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69185103","Title":"Insert PNG comment block (iTXt) using javascript","Uri":"https://stackoverflow.com/a/69185103/10113238","Date":{"Unix":1631658164},"Text":"Chunk names are case-sensitive, `tEXt` is the name of the chunk, `TEXt` is not. And since the first letter is uppercase, making the chunk critical, no PNG tools can understand the image since there is now an unknown critical chunk.\r\n\r\nThe `iTXt` one is broken because the compression flag and method are stored directly, not as the ASCII representation of the numbers. Changing it to:\r\n```lang-js\r\nmetadata.createChunk(\"iTXt\", \"Source\"+String.fromCharCode(0x00)+String.fromCharCode(0x00)+String.fromCharCode(0x00)+\"fr\"+String.fromCharCode(0x00)+\"Source\"+String.fromCharCode(0x00)+\"\"+JSON.stringify(txt));\r\n```\r\nmakes it work.\r\n\r\n`metadata.createChunk(\"tEXt\", \"Comment\"+String.fromCharCode(0x00)+\"heremycommentl\")` doesn't cause any issues with `pnginfo`, perhaps you confused the error there with the `iTXt` one?\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69184854","Title":"What do these FFmpeg APNG encoder prediction methods mean?","Uri":"https://stackoverflow.com/a/69184854/10113238","Date":{"Unix":1631656075},"Text":"The [PNG specification](https://www.w3.org/TR/PNG/#9-table91) specifies 5 different filter types that are used to make the image data more compressible before it is compressed: none, sub, up, average, and Paeth. The idea with each of the filters is to derive to current pixel from nearby pixels, and then only store how much to adjust that estimate by to get the true value. Each scanline of an image has a filter specified for it. Each filter works best in different circumstances. Filters don't affect the actual image data, only how it is stored.\r\n\r\n`mixed` isn't a filter, but instead tells ffmpeg to choose the best filter for every line. This is also called *dynamic filtering*. This makes encoding slower, since 5 different filters need to be tried for every line, but can result in better compression. The best filter is found using the [minimum sum of absolute differences method](http://www.libpng.org/pub/png/book/chapter09.html#INDEX-688).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69143080","Title":"How to use Cargo commands programmatically in Rust?","Uri":"https://stackoverflow.com/a/69143080/10113238","Date":{"Unix":1631363654},"Text":"Add the [`cargo`](https://crates.io/crates/cargo) ([docs](https://docs.rs/cargo/)) crate to your dependencies, and you can use Cargo as a library! It doesn't have any stability guarantees or much documentation though, so you might want to read through [how the Cargo CLI tool uses the library](https://github.com/rust-lang/cargo/tree/master/src/bin/cargo) to figure out how to use it. To do a build, [`cargo::ops::compile`](https://docs.rs/cargo/0.56.0/cargo/ops/fn.compile.html) is the function to call.\r\n\r\nBut do keep in mind that the Cargo library will still run `rustc` in another process using `Command::new`, so this is really just moving where the process boundary is, not eliminating it entirely.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69048758","Title":"How to compile Rust to LLVM bitcode including dependencies?","Uri":"https://stackoverflow.com/a/69048758/10113238","Date":{"Unix":1630690544},"Text":"Expanding on [Aiden4](https://stackoverflow.com/users/15131491/aiden4)s comment:\r\n\r\n- Delete the current target directory to prevent any old artifacts from being used: `rm -r target/`\r\n- Compile it with `RUSTFLAGS=\"--emit=llvm-bc\" cargo build --release`\r\n- Link the bitcode files together with `llvm-link target/release/deps/*.bc > withdeps.bc`\r\n\r\nThat will get you *almost* all dependencies. It turns out all Rust programs have an implict dependency on either `core` or `std` though (although you can avoid this with the unstable `#![no_core]`, but good luck actually getting anything to compile that way), so you probably want to get the bitcode for that too.\r\n\r\nThe easiest way to do that is to compile the standard library from source to bitcode. [`cargo` has experimental support for building the standard libraries from source](https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std), so just append `-Z build-std --target x86_64-unknown-linux-gnu` (and update the target if needed) to your `cargo` build command. When using `--target`, which is required by `-Z build-std`, the build files are put in a target-specific directory, `target/x86_64-unknown-linux-gnu/release/deps/` in this case. The targetless directory contains build-dependencies for the standard libraries: we don't want that!\r\n\r\nWe don't want to link *all* of the standard libraries. We really only need `std` and its dependencies: `proc_macro` isn't needed here since we are compiling to a binary, not a proc-macro. We also need to link with either `proc_abort` or `panic_unwind`, matching it up with the unwind codegen setting we chose. The default is unwinding, so let's delete the other one, `proc_abort`. Let's send those libraries to the chopping block: `rm target/x86_64-unknown-linux-gnu/release/deps/{panic_abort,proc_macro}-*.bc`.\r\n\r\nLet's try linking for real this time:\r\n```lang-bash\r\nrm -r target/\r\nRUSTFLAGS=\"--emit=llvm-bc\" cargo build --release -Z build-std --target x86_64-unknown-linux-gnu\r\nrm target/x86_64-unknown-linux-gnu/release/deps/{panic_abort,proc_macro}-*.bc\r\nllvm-link target/x86_64-unknown-linux-gnu/release/deps/*.bc > withalldeps.bc\r\n```\r\n\r\nYay, it worked! Well, except for the calls to undefined functions in there that still managed to slip through. `__rust_alloc`, `__rust_dealloc`, `__rust_realloc`, and `__rust_alloc_zeroed` are magic functions that are defined if you use Rust's LLVM fork. The standard library also depends on `libpthread` and [`dlsym`](https://linux.die.net/man/3/dlsym) which are language-asnostic libraries/functions that are usually implemented in C. You can use `clang` and a `libc` implementation that supports being compiled with Clang (GNU libc doesn't, I think musl might work here?) to get that if needed. Also if you are compiling to an executable it has trouble finding `main` from `_start`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69015417","Title":"How can I display an enum in lowercase?","Uri":"https://stackoverflow.com/a/69015417/10113238","Date":{"Unix":1630505497},"Text":"Here is a way to do that without needing to manually update `Display::fmt` every time you add a new colour by using the derived `Debug` implementation and lowercasing that:\r\n```lang-rust\r\n#[derive(Debug)]\r\npub enum BoxColour {\r\n    Red,\r\n    Blue,\r\n}\r\n\r\nimpl fmt::Display for BoxColour {\r\n    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\r\n        write!(formatter, \"{}\", format!(\"{:?}\", self).to_lowercase())\r\n    }\r\n}\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=12e634dd9a7a5f51aabcf238007593d0)\r\n\r\nNote that `write!` returns a `Result<(), fmt::Error>` (which is a `fmt::Result`), *not* a raw `()`.\r\n\r\nBut consider if it would just be better to manually update the list, or use a macro to specify that. Also consider how colours with multiple words (such as `LightBlue`) should be lowercased: is `lightblue` what you want there?","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68924653","Title":"Displaying New tab after clicking a tag","Uri":"https://stackoverflow.com/a/68924653/10113238","Date":{"Unix":1629901255},"Text":"You can [adjust the global Markdown rendering settings](https://gohugo.io/getting-started/configuration-markup#blackfriday) to make links in Markdown always open in a new tab by using the Blackfriday Markdown renderer and setting the `hrefTargetBlank` flag. Add this to your `config.toml` (or the equivalent in YAML/JSON)\r\n```lang-toml\r\n[markup]\r\ndefaultMarkdownHandler = 'blackFriday'\r\n[blackFriday]\r\nhrefTargetBlank = true\r\n```\r\n\r\nIf you need more complicated logic to determine when to make links open in a new tab or need to use the Goldmark Markdown renderer, you can use the [`render-link` render hook](https://gohugo.io/getting-started/configuration-markup/#markdown-render-hooks) to override the output of the Markdown renderer with a template. The simplest render hook to do this would be this (in `layouts/_default/_markup/render-link.html`). See the documentation for the full details on this.\r\n\r\n```html\r\n<a href=\"{{ .Destination | safeURL }}\" {{ with .Title}}title=\"{{ . }}\"{{ end }} target=\"_blank\">{{ .Text | safeHTML }}</a>\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68964456","Title":"How to ensure consistent display of fonts?","Uri":"https://stackoverflow.com/a/68964456/10113238","Date":{"Unix":1630154485},"Text":"None of the fonts in that font stack have emoji glpyhs in them. As such, the browser looks for emoji fonts on the system and tries to use them to render the emojis. If the system doesn't have any applicable fonts, then the browser is unable to render emojis. You can remedy this by adding an emoji font to your font stack, such as [Noto Emoji](https://github.com/googlefonts/noto-emoji/blob/main/fonts/NotoColorEmoji.ttf). Add it to your font stack like so:\r\n```lang-css\r\nfont-family: \"Roboto\", \"-apple-system\", \"Helvetica Neue\", Helvetica, Arial, \"Noto Emoji\", sans-serif;\r\n```\r\nFont lookup is done on a per-character basis, so browsers will look for the emoji in each font on the list, until they try `Noto Emoji` and find it there.\r\n\r\nBut keep in mind that emoji fonts tend to be big. The color version of Noto emoji is ~9 MiB. If you only display a few emoji, you should probably just convert them to an image and render the image instead. This is what Twitter does: it converts all emojis in Tweets to images, ensuring that only the emojis needed to render the Tweet get downloaded.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68522961","Title":"Data types in Rust","Uri":"https://stackoverflow.com/a/68522961/10113238","Date":{"Unix":1627252010},"Text":"The maximum value a i128 can store is 2<sup>127</sup> - 1, and the minimum is -(2<sup>127</sup>). The first bit is used for tracking if the number is negative, leaving the remaining 127 bits to represent the actual number. 2<sup>127</sup> values are used to represent negative numbers, 1 value is used to represent zero, and the remaining 2<sup>127</sup> - 1 values are used to represent positive numbers. When evaluating `-x.pow(amount_bits - 1)`, the negation is done *after* calculating the power. 2<sup>127</sup>  is 1 greater than the maximum value of an i128, so it panics. While the result would be in bounds if it got to doing the negation, Rust panics before the negation can even occur.\r\n\r\nThe simplest solution would be to use the `i128::{MAX, MIN}` constants instead of manually calculating them. Alternatively, you could use a library that supports arbitrary-sized numbers, such as [`num`](https://crates.io/crates/num).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68510603","Title":"Why True value returns True with membership in function in python","Uri":"https://stackoverflow.com/a/68510603/10113238","Date":{"Unix":1627134456},"Text":"`True` is implictly converted to a number, `1`. (`False` would be converted to `0`) The `in` operator checks if any element is equal to the left operand, and `True` is equal to the first element, `1`.\r\n\r\n```python\r\n>>> True == 1\r\nTrue\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68510448","Title":"What does \"package foo in Cargo.lock is yanked in registry\" mean?","Uri":"https://stackoverflow.com/a/68510448/10113238","Date":{"Unix":1627133477},"Text":"It means that the package has been marked as [\"yanked\"](https://doc.rust-lang.org/cargo/reference/publishing.html#cargo-yank). This is usually done when the authors of have package have a very compelling reason that a certain version of a package should not be used at all, and to very strongly suggest that the package should not be used. You can ignore yanks with `--force` to force yanked packages to be used, but that is usually a bad idea: packages were usually yanked for a good reason.\r\n\r\nIn your case: The yanked `cachedir` 0.1.X version is a completely different package with a different author than the newer versions. The older versions are unmaintained and cannot be updated (since `cachedir` now has a different owner who publishes a different package), so the new owner of `cachedir` yanked the older versions. `smallvec` 1.4.0 has a bug where it causes Undefined Behaviour when used with zero-sized types, and that UB is bad enough that it is exceedingly unlikely that you actually want to use that version. The fix to this is to update to a later version of `smallvec` that doesn't have that bug.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68505669","Title":"Why there is no `shutdown` method for TcpListener and UdpSocket in Rust","Uri":"https://stackoverflow.com/a/68505669/10113238","Date":{"Unix":1627080247},"Text":"You can use `std::mem::drop` to drop a value early:\r\n```rust\r\nlet listener = TcpListener::bind(\"127.0.0.1:80\")?;\r\n// ...\r\ndrop(listener);\r\n// ...\r\n```\r\nThere is no `shutdown` method because it isn't needed. The existing ownership system is already good enough for keeping track of if a socket is usable, and there is nothing you can *do* with a closed socket anyways.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68500797","Title":"Remove default linker flags in Rust","Uri":"https://stackoverflow.com/a/68500797/10113238","Date":{"Unix":1627050366},"Text":"Start by making sure that you are [passing the right `linker-flavor`](https://doc.rust-lang.org/rustc/codegen-options/index.html#linker-flavor). rustc might have misidentified what linker you are using, and specifying that might help. Also ensure you are using the right linker. But if you really want to remove that argument, it is possible using some unstable features.\r\n\r\nThere isn't a general way to remove individual linker arguments. The `eh_frame_header` target attribute indicates if the linker should insert a EH (exception handling) frame header. Unstable rustc does have support for changing individual target options, but it is a bit complicated and can only handle `#![no_std]` binaries on some platforms. You might want to consider just calling the linker manually.\r\n\r\nFirst, [dump the JSON target metadata](https://doc.rust-lang.org/rustc/targets/custom.html) (using a nightly compiler) for the target you are compiling *to*, replacing `[target]` with a target triple like `thumbv7neon-unknown-linux-musleabihf`:\r\n```bash\r\n$ rustc -Z unstable-options --print target-spec-json --target [target] > target.json\r\n```\r\n`target.json` now has target-specific compilation information. On some targets (such as WASM), EH frame headers are disabled by default. If you see a line like this in `target.json`, you are already done (and shouldn't be getting that error):\r\n```json\r\n  \"eh-frame-header\": false,\r\n```\r\nIf you don't see that line, then add it to `target.json` right after opening brace, like\r\n```json\r\n{\r\n  \"eh-frame-header\": false,\r\n  ...\r\n```\r\nYou can now specify the path to `target.json` wherever a target triple would normally be. However, you now need to recompile the standard libraries (such as `core` and `std`) with the new target information. Otherwise, the compiler will tell you that ``the `target-17676080659170949227` target may not be installed``. On unstable Cargo, you can use `-Z build-std`\r\n to do that:\r\n```bash\r\n$ cargo +nightly run -Z build-std=core --target target.json\r\n```\r\nIt will take a bit longer than normal, since it needs to recompile the `core` standard library. Not all platforms support compiling the fuller `std` library this way, but you can change the `build-std=core` to just `build-std` if you want to try to build the whole `std` standard library as well.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68500298","Title":"Can I keep \"unused css selector\"?","Uri":"https://stackoverflow.com/a/68500298/10113238","Date":{"Unix":1627048309},"Text":"You probably want to wrap the selector in `:global(...)`, like\r\n```css\r\n:global(.red) {\r\n    color: red;\r\n}\r\n```\r\nThis forces Svelte to keep the class around, and also makes it so the selector isn't scoped to that single component. This is usually what you want when Svelte is removing selectors that you want to keep.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67520304","Title":"Can we implement the Copy and Clone traits to Command struct?","Uri":"https://stackoverflow.com/a/67520304/10113238","Date":{"Unix":1620913418},"Text":"No, implementing `Copy` and `Clone` is impossible, since `Command` does not implement `Copy` or `Clone` itself. It wouldn't make sense for `Command` to implement any of those types either, since it holds owned data and closures. Here's what `Command` is a wrapper around on Unix platforms:\r\n```\r\npub struct Command {\r\n    program: CString,\r\n    args: Vec<CString>,\r\n    argv: Argv,\r\n    env: CommandEnv,\r\n    cwd: Option<CString>,\r\n    uid: Option<uid_t>,\r\n    gid: Option<gid_t>,\r\n    saw_nul: bool,\r\n    closures: Vec<Box<dyn FnMut() -> io::Result<()> + Send + Sync>>,\r\n    groups: Option<Box<[gid_t]>>,\r\n    stdin: Option<Stdio>,\r\n    stdout: Option<Stdio>,\r\n    stderr: Option<Stdio>,\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67512746","Title":"importing winston causes 'process is not defined'","Uri":"https://stackoverflow.com/a/67512746/10113238","Date":{"Unix":1620868326},"Text":"You [can't use Winston in the browser](https://github.com/winstonjs/winston/issues/287) right now, although support for it is currently on roadmap. ","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67493318","Title":"How do I get a value from a `HashMap::<&'static str, u32>` using a String as the key?","Uri":"https://stackoverflow.com/a/67493318/10113238","Date":{"Unix":1620761914},"Text":"Use `&s[..]` to convert the `String` into a `&str`:\r\n```\r\nprintln!(\"foo={}\", map.get(&s[..]).unwrap());\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=34a2b5307c2cb2395c19244ac6e1d793)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67458650","Title":"Why would std::process::Command::ouput fail?","Uri":"https://stackoverflow.com/a/67458650/10113238","Date":{"Unix":1620569371},"Text":"- There could be some issue opening the binary being executed (i.e. access denied, doesn't exist)\r\n- When waiting for the process to finish, the `waitpid` syscall could be [interrupted](https://stackoverflow.com/questions/41474299/checking-if-errno-eintr-what-does-it-mean)\r\n- Getting the output involves creating a pipe, which will fail if the file descriptor limit is hit (`cat /proc/sys/fs/file-max` to check)\r\n- It also involves opening a file, which will fail if the limit on open files is reached (`ulimit -n` to check)\r\n\r\nYou probably only need to worry about the first two: you can't do anything about hitting limits in the kernel.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67409479","Title":"How can I test my Boxed error for a specific type?","Uri":"https://stackoverflow.com/a/67409479/10113238","Date":{"Unix":1620253433},"Text":"Dereference the `Box` before doing the `assert_eq`:\r\n```\r\nlet err = tlv.downcast::<BridgeError>().unwrap();\r\nassert_eq!(*err, BridgeError::TLVLength{expected: 12, received: 14});\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4e4bf58e73ddb84242dd4fb6a00a466d)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67393829","Title":"Why doesn't converting a u8 pointer into a [bool; 8] pointer yield the number bit-by-bit?","Uri":"https://stackoverflow.com/a/67393829/10113238","Date":{"Unix":1620175285},"Text":"The behavior of that program is undefined (so the output is meaningless). From Miri:\r\n\r\n```none\r\nerror: Undefined Behavior: memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc1381 which has size 1\r\n  --> src/main.rs:11:31\r\n   |\r\n11 |         println!(\"{:?} {:b}\", *x, *y);\r\n   |                               ^^ memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc1381 which has size 1\r\n   |\r\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\r\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\r\n```\r\nBoolean arrays are stored byte-by-byte, not bit-by-bit. Use the [`bitvec`](https://crates.io/crates/bitvec) or [`bitfield`](https://crates.io/crates/bitfield) crate if you want bit-by-bit storage. There is no way for a pointer to point to an individual bit: pointers always point to bytes (pointers to bits aren't supported by basically any ISAs). `bool`s are 1 byte long, and cannot safely have any value other than `0_u8` or `1_u8`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67257737","Title":"Malicious javascript code in querystring for my website in google analytics","Uri":"https://stackoverflow.com/a/67257737/10113238","Date":{"Unix":1619380936},"Text":"Someone *is* trying to do something malicious. There's no reason to believe that they're succeeding, though. They [appear to be automatically trying attacks like that](https://www.google.com/search?q=%22protossbb%22) across many websites, in the hopes that it will happen to succeed on one of them. Prototype pollution is a fairly common vulnerability in JavaScript, so they are probably hoping that they will happen to find such a vulnerability by chance.\r\n\r\nIf you want to be sure you're okay, you can go to those URIs and make sure that nothing bad happens.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67237335","Title":"Is repr(C) a preprocessor directive?","Uri":"https://stackoverflow.com/a/67237335/10113238","Date":{"Unix":1619215523},"Text":"`#[repr(C)]` is not a preprocessor directive, since Rust doesn't use a preprocessor <sup>1</sup>. It is an [attribute](https://doc.rust-lang.org/stable/reference/attributes.html). Rust doesn't have a complete specification, but the `repr` attribute [is mentioned in the Rust reference](https://doc.rust-lang.org/stable/reference/type-layout.html#representations), so it is absolutely a part of the language. Implementation-wise, attributes are parsed the same way all other Rust code is, and are stored in the same AST. Rust has no \"attribute pass\": attributes are an actual part of the language. If someone else were to implement a Rust compiler, they would need to implement `#[repr(C)]`. \r\n\r\nFurthermore, `#[repr(C)]` *can't* be implemented without some compiler magic. In the absence of a `#[repr(...)]`, Rust compilers are free to arrange the fields of a `struct`/`enum` however they want to (and they do take advantage of this for optimization purposes!).\r\n\r\nRust does have a good reason for using it's own memory layout. If compilers aren't tied to how a `struct` is written in the source code, they [can do optimisations like](https://doc.rust-lang.org/nomicon/repr-rust.html) not storing `struct` fields that are never read from, reordering fields for better performance, `enum` tag pooling<sup>2</sup>, and using spare bits throughout [`NonZero*`](https://doc.rust-lang.org/stable/std/num/index.html)s in the struct to store data (the last one isn't happening yet, but might in the future). But the main reason is that Rust has things that just don't make sense in C. For instance, Rust has zero-sized types (like `()` and `[i8; 0]`) [which can't exist in C](https://stackoverflow.com/a/9723093/14004262), `trait` vtables, `enum`s with fields, generic types, all of which cause problems when trying to translate them to C.\r\n\r\n---\r\n\r\n<sup>1</sup> Okay, you could use the C preprocessor with Rust if you really wanted to. Please don't.\r\n\r\n<sup>2</sup> For example, `enum Food { Apple, Pizza(Topping) } enum Topping { Pineapple, Mushroom, Garlic }` can be stored in just 1 byte since there are only 4 possible `Food` values that can be created.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67154715","Title":"How to group elements of a vector by a pattern?","Uri":"https://stackoverflow.com/a/67154715/10113238","Date":{"Unix":1618793078},"Text":"Iterate over the elements of the `nums` to build up the split. For every number, compare it to the last number to decide whether to create a sublist, or append to the existing one:\r\n\r\n```rust\r\nlet nums = vec![9,7,6,3,4,0,1,7,3,9];\r\nlet mut split: Vec<Vec<i32>> = vec![vec![]];\r\nfor num in nums.iter().filter(|n| **n != 0) {\r\n    let sublist = split.last_mut().unwrap();\r\n    match sublist.last_mut() {\r\n        Some(x) if num > x => {\r\n            split.push(vec![*num]);\r\n        }\r\n        _ => sublist.push(*num),\r\n    }\r\n}\r\nlet split = split; // make split immmutable\r\nlet summed: Vec<i32> = split.iter().map(|v| v.iter().sum()).collect();\r\n```\r\n\r\n([try in playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=81f92bc4a3dd4a27c7db178a7c8b60aa))\r\n\r\nIt's probably possible to make a more elegant solution using [`Iterator::partition_in_place`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partition_in_place), but that `fn` is sadly unstable for now.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67129518","Title":"How to check if specified char exists on Android ? (jss/css/whatever/‚Ä¶)","Uri":"https://stackoverflow.com/a/67129518/10113238","Date":{"Unix":1618593219},"Text":"`FontFaceSet.check` [does not check if a specific character exists in a font](https://lists.w3.org/Archives/Public/www-style/2015Aug/0330.html), only if *any* character in the range of that character exists. You can try rendering the text to a canvas and checking if the rendering is the same as a Unicode character that is known not to exist:\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n    function isLetterRenderable(letter) {\r\n      if (!document.fonts.check('700 24px / 36px Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif', letter)) return false;\r\n      let can;\r\n      if (window.OffscreenCanvas) {\r\n        can = new OffscreenCanvas(50, 50);\r\n      } else {\r\n        can = document.createElement(\"canvas\");\r\n        can.height = 50;\r\n        can.width = 50;\r\n      }\r\n      const ctx = can.getContext(\"2d\");\r\n      ctx.font = '700 10px Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\r\n      ctx.fillText(letter, 10, 10);\r\n      const imgData1 = ctx.getImageData(0, 0, 50, 50);\r\n      ctx.clearRect(0, 0, 50, 50);\r\n      ctx.fillText(\"·øø\", 10, 10);\r\n      const imgData2 = ctx.getImageData(0, 0, 50, 50);\r\n      // drawing of character must differ from drawing of known invalid character\r\n      return !imgData1.data.every((x, i) => imgData2.data[i] === x);\r\n    }\r\n\r\n    console.log(\"a ->\", isLetterRenderable(\"a\"));\r\n    console.log(\"ÍØÉ ->\", isLetterRenderable(\"ÍØÉ\"));\r\n    console.log(\"ÚØå° ->\", isLetterRenderable(\"ê∫Ä\"));\r\n    console.log(\"‚Æù ->\", isLetterRenderable(\"‚Æù\"));\r\n    console.log(\"üç© ->\", isLetterRenderable(\"üç©\"));\r\n\r\n<!-- end snippet -->\r\n\r\nNote that some browsers (Firefox does it on my system) will automatically generate \"pseudo-letters\" that look like [![010EB0 in a square][1]][1]. These look like actual unique letters to `isLetterRenderable` above, so it first checks using `document.fonts.check` since while that function returning `true` is meaningless in this context, if it returns `false` we know for sure that the glyph can't be rendered. But if some letters in a range are renderable, and some are pseduo-letters, then it is very hard to detect which ones have associated glyphs.\r\n\r\n  [1]: https://i.sstatic.net/tptqa.png","Verbose":1},
{"Type":"observable","Id":"observable-6bef7f6b9114f65f","Title":"Generating graphs that look like stock charts","Thumb":"/observablethumbs/758ffccde992065782bbe5dfaa7e4b9c1b75c1cbd6778d2cb2e16b0f15cc741b.jpg","Date":{"Unix":1656285582.757},"Uri":"https://observablehq.com/@smitop/prices-noise"},
{"Type":"observable","Id":"observable-583d8fe00cea6abb","Title":"How PNG compresses images using filters","Thumb":"/observablethumbs/1c1cb2847f4d56f5b49182d349fb3a9f7278b52d5623cadef453a8088eac233c.jpg","Date":{"Unix":1635777786.906},"Uri":"https://observablehq.com/@smitop/png-filters"},
{"Type":"observable","Id":"observable-48e5c9c599618a6b","Title":"Using MNIST data with Observable","Thumb":"/observablethumbs/b92bf2d7852421d65cb52dbeb6884e8a2d5c88652bcbe7e22429b133dd87d3d7.jpg","Date":{"Unix":1605909523.394},"Uri":"https://observablehq.com/@smitop/mnist"},
{"Type":"note","Date":{"Unix":1615179600},"Title":"First note","Text":"\nIf you are reading this, then I've sucessfully set up my notes system. This is for notes with less content than full blog posts.\n\n", "Verbose": 1, "Id": "allsh-first-note"}
]
