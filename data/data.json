[
{"Type":"note","Id":"note-0friction","NoteType":"Game","Date":{"Unix":1567915200},"Uri":"https://smitop.com/no-friction.html","Title":"0friction","Verbose":0,"Text":"\nA game with slippery controls.\n"},
{"Type":"note","Id":"note-bash-eof","Date":{"Unix":1626321600},"Title":"CTRL-D exits bash right away","Verbose":1,"NoteType":"tip","Text":"\nFun fact! You can hit CTRL-D to exit bash (and most Unix shells) quickly. CTRL-D is the combination for EOF, and most Unix programs stop when they hit EOF, bash included.\n\n"},
{"Type":"note","Id":"note-battle-fight-icon","NoteType":"Art","Title":"Battle/fight icon","Date":{"Unix":1551916800},"Uri":"https://opengameart.org/content/battlefight-icon-with-two-swords-svg-vector","Thumb":"/fight.svg","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-cookie","NoteType":"Art","Title":"Cookie","Date":{"Unix":1512691200},"Uri":"https://archive.org/details/Cookie_vector","Thumb":"/cookie.svg","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-donut","NoteType":"Art","Title":"Donut","Date":{"Unix":1512691200},"Uri":"https://archive.org/details/donut_vector","Thumb":"/donut.svg","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-int-mod-n","NoteType":"Math demo","Title":"Integers mod ùëõ under multiplication","Date":{"Unix":1617926400},"Uri":"https://smitop.com/int-mod-n.html","Thumb":"/intmod200.png","Verbose":0,"Text":"\n"},
{"Type":"note","Id":"note-learnlake","NoteType":"Game","Title":"LearnLake","Date":{"Unix":1523577600},"Uri":"https://learnlake.com/","Verbose":0,"Text":"A small educational website.\n\n"},
{"Type":"note","Id":"note-mova","NoteType":"Game","Date":{"Unix":1578027600},"Uri":"https://smitop.com/mova.html","Title":"Mova","Verbose":0,"Text":"\nA game where you avoid tiny squares.\n\n"},
{"Type":"note","Id":"note-nini","Title":"Nini","Date":{"Unix":1547442000},"Uri":"https://nini.smitop.com/","NoteType":"Website","Verbose":0,"Text":"Tools for the Nimiq blockchain.\n\n"},
{"Type":"note","Id":"note-segme","NoteType":"Web app","Title":"Segme","Date":{"Unix":1633305600},"Uri":"https://smitop.com/segme","Thumb":"/segme.png","Verbose":0,"Text":"\nUnicode text segmentation online.\n"},
{"Type":"note","Id":"note-shift-key","Date":{"Unix":1571889600},"Uri":"https://smitop.com/shift-key.html","Title":"Is your shift key pressed?","NoteType":"Web app","Verbose":0,"Text":"\nWondering if your shift key is pressed? Not anymore.\n"},
{"Type":"note","Id":"note-speakscribe","NoteType":"Web app","Date":{"Unix":1561593600},"Uri":"https://speakscribe.com/","Title":"SpeakScribe","Verbose":0,"Text":"\nA dictation website that uses Web APIs.\n"},
{"Type":"note","Id":"note-sqgame","NoteType":"Game","Date":{"Unix":1567310400},"Uri":"https://smitop.com/square-game/","Title":"Square game","Verbose":0,"Text":"\nA game that involves squares.\n\n"},
{"Type":"note","Id":"note-transform","NoteType":"Web app","Date":{"Unix":1615611600},"Uri":"https://smitop.com/transform-playground/","Title":"Linear transformation playground","Verbose":0,"Text":"\nPlay with some linear transformations in your browser!\n\n"},
{"Type":"note","Id":"note-tree","NoteType":"Art","Title":"Stylized tree","Date":{"Unix":1628985600},"Uri":"https://opengameart.org/content/stylized-tree","Thumb":"/tree.png","Verbose":1,"Text":"\n"},
{"Type":"note","Id":"note-ttw","Title":"TagTime Web","Uri":"https://ttw.smitop.com/","NoteType":"Web app","Date":{"Unix":1597896000},"Verbose":-1,"Text":"Time tracking that randomly samples you.\n\n"},
{"Type":"note","Id":"note-upload2ipfs","Title":"Upload2IPFS","Uri":"https://upload2ipfs.smitop.com/","NoteType":"Web app","Date":{"Unix":1559606400},"Verbose":0,"Text":"Upload files to the IPFS network online.\n\n"},
{"Type":"gh-pr","Id":"gh-pr-1006776557","CommentCount":2,"Text":"This was noticed at https://github.com/flathub/org.mapeditor.Tiled/pull/11#discussion_r715583117: the way to ask for a release build is differs between Qbs and qmake. This properly makes builds optimized.","Date":{"Unix":1632527921},"Uri":"https://github.com/flathub/org.mapeditor.Tiled/pull/12","Title":"Properly make Qbs produce optimized builds","Verbose":1,"GhIssueNumber":12,"GhRepo":"flathub/org.mapeditor.Tiled"},
{"Type":"gh-pr","Id":"gh-pr-1004818355","CommentCount":2,"Text":"Using qmake to build Tiled is deprecated (closes #10), this updates it to use Qbs. This is based on [another app that uses QBS to build](https://github.com/flathub/flathub/pull/654/files).","Date":{"Unix":1632362047},"Uri":"https://github.com/flathub/org.mapeditor.Tiled/pull/11","Title":"Build using Qbs","Verbose":1,"GhIssueNumber":11,"GhRepo":"flathub/org.mapeditor.Tiled"},
{"Type":"gh-pr","Id":"gh-pr-993873664","CommentCount":4,"Text":"The main `cargo` command supports `cargo r` as an alias for `cargo run`, and `cargo t` as an alias for `cargo test`. This adds support to them in `cargo-miri` for consistency.","Date":{"Unix":1631644638},"Uri":"https://github.com/rust-lang/miri/pull/1890","Title":"One character aliases for cargo-miri run/test","Verbose":1,"GhIssueNumber":1890,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-964942982","CommentCount":0,"Text":"The current link 404s when viewed on GitHub due to using a relative\r\npath that refers to an upper directory.\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\nThe current link 404s.\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- [ ] Tested using sandboxing ([nix.useSandbox](https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox) on NixOS, or option `sandbox` in [`nix.conf`](https://nixos.org/nix/manual/#sec-conf-file) on non-NixOS linux)\r\n- Built on platform(s)\r\n   - [ ] NixOS\r\n   - [ ] macOS\r\n   - [ ] other Linux distributions\r\n- [ ] Tested via one or more NixOS test(s) if existing and applicable for the change (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n- [ ] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"`\r\n- [ ] Tested execution of all binary files (usually in `./result/bin/`)\r\n- [21.11 Release Notes (or backporting 21.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n- [X] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1628599759},"Uri":"https://github.com/NixOS/nixpkgs/pull/133370","Title":"CONTRIBUTING.md: fix link to COPYING","Verbose":1,"GhIssueNumber":133370,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-963524490","CommentCount":0,"Text":"Currently, the Bash completions for `whereis <TAB>` gives `whereis file` (\"file\" is not a placeholder here, it literally expands to that). This fixes that by passing the `-c` flag to `compgen` to request completions for command names.","Date":{"Unix":1628503148},"Uri":"https://github.com/karelzak/util-linux/pull/1407","Title":"whereis: use commands for Bash completions","Verbose":1,"GhIssueNumber":1407,"GhRepo":"karelzak/util-linux"},
{"Type":"gh-pr","Id":"gh-pr-963317261","CommentCount":0,"Text":null,"Date":{"Unix":1628383966},"Uri":"https://github.com/hackclub/dinosaurs/pull/340","Title":"Add dino with long neck","Verbose":1,"GhIssueNumber":340,"GhRepo":"hackclub/dinosaurs"},
{"Type":"gh-pr","Id":"gh-pr-962956202","CommentCount":0,"Text":"This adds some more details about how the THIR works. It also adds as an example what some THIR looks like, along with some annotations I added.\r\n\r\nContributes to https://github.com/rust-lang/project-thir-unsafeck/issues/6. (cc @LeSeulArtichaut)","Date":{"Unix":1629590157},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1183","Title":"Expand THIR section with more details","Verbose":1,"GhIssueNumber":1183,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-961196834","CommentCount":1,"Text":"This flag was removed by https://github.com/rust-lang/rust/pull/65081, and the content of the page on profiling queries was quite outdated. I've removed the page, and moved the external links section to the main queries page. The rest of the page is outdated.\r\n\r\nFixes #1150","Date":{"Unix":1629120004},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1179","Title":"Remove docs for old -Z profile-queries flag","Verbose":1,"GhIssueNumber":1179,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-959569151","CommentCount":9,"Text":"This can be used like `./x.py test src/test/ui/abi/ --force-rerun`, and is useful when verifying that newly blessed tests don't change between test runs (such as due to being dependent on the current time or memory layout or RNG), without needing to change the test file or find the right file in `build` to remove.","Date":{"Unix":1628369005},"Uri":"https://github.com/rust-lang/rust/pull/87744","Title":"Add x.py option to --force-rerun compiletest tests","Verbose":1,"GhIssueNumber":87744,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-959410908","CommentCount":2,"Text":"Now that #87403 is merged, a few more tests can be added for reads/writes to dropping union fields.\r\n\r\nr? @LeSeulArtichaut ","Date":{"Unix":1628042634},"Uri":"https://github.com/rust-lang/rust/pull/87734","Title":"Test dropping union fields more","Verbose":1,"GhIssueNumber":87734,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-953408109","CommentCount":3,"Text":"Currently the documentation for `[integer]::{MIN, MAX}` doesn't explain where the constants come from. This documents how the values of those constants are related to powers of 2.","Date":{"Unix":1627500363},"Uri":"https://github.com/rust-lang/rust/pull/87500","Title":"Document math behind MIN/MAX consts on integers","Verbose":1,"GhIssueNumber":87500,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-936459890","CommentCount":4,"Text":"Cc https://github.com/rust-lang/rust/issues/86863, which was caused by PR https://github.com/rust-lang/rust/pull/86255.","Date":{"Unix":1625432069},"Uri":"https://github.com/rust-lang/miri/pull/1845","Title":"Make work with latest rustc","Verbose":1,"GhIssueNumber":1845,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-934108955","CommentCount":3,"Text":"This is useful for when you want to reschedule future tasks to today, or bump forward overdue tasks to today.","Date":{"Unix":1626904828},"Uri":"https://github.com/getting-things-gnome/gtg/pull/686","Title":"Make setting due date today an option in context menu","Verbose":1,"GhIssueNumber":686,"GhRepo":"getting-things-gnome/gtg"},
{"Type":"gh-pr","Id":"gh-pr-932642809","CommentCount":1,"Text":"This was changed in https://github.com/rust-lang/rust/pull/86446 such that incompleteness is included in the declaration.","Date":{"Unix":1624984874},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1151","Title":"Document how to mark features as incomplete","Verbose":1,"GhIssueNumber":1151,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-930939713","CommentCount":5,"Text":"This causes Windows Defender's firewall to pop up during tests to ask if I want to allow the test program to access the public Internet, since it was listening on `0.0.0.0` (the test passes regardless of how you respond to the modal, since the firewall only affects traffic outside of the computer, none of which actually happens in the test). The test server doesn't actually need to be publicly reachable, so this makes it so it is only reachable locally, which makes Windows Defender happy.","Date":{"Unix":1624925934},"Uri":"https://github.com/rust-lang/rust/pull/86669","Title":"Don't run a publically reachable server in tests","Verbose":1,"GhIssueNumber":86669,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-928619157","CommentCount":16,"Text":"While looking at #86583, I wondered how many other (insecure) HTTP links were in `rustc`. This changes most other `http` links to `https`. While most of the links are in comments or documentation, there are a few other HTTP links that are used by CI that are changed to HTTPS.\r\n\r\nNotes:\r\n- I didn't change any to or in licences\r\n- Some links don't support HTTPS :(\r\n- Some `http` links were dead, in those cases I upgraded them to their new places (all of which used HTTPS)","Date":{"Unix":1624704734},"Uri":"https://github.com/rust-lang/rust/pull/86586","Title":"Use HTTPS links where possible","Verbose":1,"GhIssueNumber":86586,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-928299146","CommentCount":1,"Text":"This updates dependencies to their latest versions, causing #19 to be fixed, and also adds a regression test for that issue. I've also verified that this fixes the table rendering issues manually.","Date":{"Unix":1625574923},"Uri":"https://github.com/badboy/mdbook-toc/pull/20","Title":"Bump dependencies to fix HTML in tables","Verbose":1,"GhIssueNumber":20,"GhRepo":"badboy/mdbook-toc"},
{"Type":"gh-pr","Id":"gh-pr-927714602","CommentCount":1,"Text":"Currently it renders like:\r\n![image](https://user-images.githubusercontent.com/10530973/123013328-05beac00-d392-11eb-9235-afa6439c88e8.png)\r\nThis changes it to:\r\n![image](https://user-images.githubusercontent.com/10530973/123013363-140cc800-d392-11eb-9b19-71a3dfdf645e.png)\r\n\r\nThe incorrect rendering is caused by a bug in mdBook: https://github.com/rust-lang/mdBook/issues/1583. This adds a workaround for that bug.","Date":{"Unix":1624510657},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1146","Title":"Generate glossary table correctly","Verbose":1,"GhIssueNumber":1146,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-927663961","CommentCount":8,"Text":"This adds a suggestion for \"undefined reference to ...\" linking errors to install or specify the location to an external library. Since there is no defined error format for linkers, we just check if there was a failure and if that failure contains the string `undefined reference to`. This also makes it impossible to test this, since the output depends on the system linker. The output now looks like:\r\n```\r\nerror: linking with `cc` failed: exit status: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"linking_failure.linking_failure.7rcbfp3g-cgu.0.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.1.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.2.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.3.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.4.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.5.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.6.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.7.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.8.rcgu.o\" \"linking_failure.53u64zklswtfazes.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-01ce3ba5c629d02f.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-f1f2102409186354.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libminiz_oxide-1e8b6b56a999f838.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libadler-d0e93eb4e14f1d19.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libobject-1d7e39d75d082b43.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libaddr2line-ade42e945045b261.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgimli-1a65064fccf4ebc1.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_detect-4d699c310fdfe72d.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-1cafa68a696ec800.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-e9f1c8c4dab2f046.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-ecc1a743be25c7f7.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-e074031c4b66b6b6.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-9aa6ed9f1d3bfd53.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-7862bf96c2250ca0.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-f02ce0dc7895b5fd.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-3af9c60917570521.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ca16fc7bb3645684.rlib\" \"-Wl,--end-group\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-d8e1a5b7299604cc.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-znoexecstack\" \"-L\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"linking_failure\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\"\r\n  = note: /usr/bin/ld: linking_failure.linking_failure.7rcbfp3g-cgu.3.rcgu.o: in function `linking_failure::main':\r\n          linking_failure.7rcbfp3g-cgu.3:(.text._ZN15linking_failure4main17h52b6e3052e444479E+0x3): undefined reference to `doesnt_exist_thiwthwfyl'\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n          \r\n  = help: some `extern` functions couldn't be found; you may need to install or specify the path to some dependencies\r\n  = note: use the -L flag to specify the library lookup path\r\n  = note: use the cargo:rustc-link-search directive to specify the library lookup path with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#rustc-link-search)\r\n\r\nerror: aborting due to previous error\r\n```","Date":{"Unix":1625141025},"Uri":"https://github.com/rust-lang/rust/pull/86558","Title":"Add suggestions for \"undefined reference\" link errors","Verbose":1,"GhIssueNumber":86558,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-925660924","CommentCount":3,"Text":"This makes error messages for functions with incorrect argument counts adapt if they refer to a struct or enum variant:\r\n```\r\nerror[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\r\n  --> $DIR/struct-enum-wrong-args.rs:7:13\r\n   |\r\nLL |     let _ = Ok();\r\n   |             ^^-- supplied 0 arguments\r\n   |             |\r\n   |             expected 1 argument\r\n\r\nerror[E0061]: this struct takes 1 argument but 0 arguments were supplied\r\n  --> $DIR/struct-enum-wrong-args.rs:8:13\r\n   |\r\nLL |     let _ = Wrapper();\r\n   |             ^^^^^^^-- supplied 0 arguments\r\n   |             |\r\n   |             expected 1 argument\r\n```\r\n\r\nFixes #86481.","Date":{"Unix":1624335317},"Uri":"https://github.com/rust-lang/rust/pull/86493","Title":"Say \"this enum variant takes\"/\"this struct takes\" instead of \"this function takes\"","Verbose":1,"GhIssueNumber":86493,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-925206310","CommentCount":8,"Text":"This isn't a feature gate, it's an attribute that is feature gated behind the `rustc_attrs` attribute. Closes #85680.","Date":{"Unix":1624943740},"Uri":"https://github.com/rust-lang/rust/pull/86446","Title":"Don't make `rustc_insignificant_dtor` feature gate","Verbose":1,"GhIssueNumber":86446,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-923861797","CommentCount":1,"Text":"See https://github.com/rust-lang/rust/issues/86099#issuecomment-862857244 for some more context. These operations always panic, even when overflow checks are disabled.","Date":{"Unix":1623983939},"Uri":"https://github.com/rust-lang/reference/pull/1049","Title":"Mention that MAX / -1 and MAX % -1 always panic","Verbose":1,"GhIssueNumber":1049,"GhRepo":"rust-lang/reference"},
{"Type":"gh-pr","Id":"gh-pr-923086301","CommentCount":4,"Text":"Suggested in https://github.com/rust-lang/rust/pull/85263#issuecomment-861906730, this splits off the support for pattern walking in THIR from #85263. This has no observable effect on THIR unsafety checking, since it is not currently possible to trigger unsafety from the THIR checker using the additional patterns or constants that are now walked. THIR patterns are walked in source code order.\r\n\r\nr? @LeSeulArtichaut","Date":{"Unix":1624092126},"Uri":"https://github.com/rust-lang/rust/pull/86378","Title":"Add pattern walking support to THIR walker","Verbose":1,"GhIssueNumber":86378,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-921890312","CommentCount":4,"Text":"I noticed this while working on #86255: currently the same message is used for hard errors and soft errors in CTFE. This changes the error messages to make hard errors use a message that indicates the reality of the situation correctly, since usage of the constant is never allowed when there was a hard error evaluating it. This doesn't affect the behaviour of these error messages, only the content.\r\n\r\nThis changes the error logic to check if the error should be hard or soft where it is generated, instead of where it is emitted, to allow this distinction in error messages.","Date":{"Unix":1623953208},"Uri":"https://github.com/rust-lang/rust/pull/86340","Title":"Use better error message for hard errors in CTFE","Verbose":1,"GhIssueNumber":86340,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-919686204","CommentCount":30,"Text":"This closes #79601 by handling the case where memory allocation fails during MIR interpretation, and translates that failure into an `InterpError`. The error message is \"tried to allocate more memory than available to compiler\" to make it clear that the memory shortage is happening at compile-time by the compiler itself, and that it is not a runtime issue.\r\n\r\nNow that memory allocation can fail, it would be neat if Miri could simulate low-memory devices to make it easy to see how much memory a Rust program needs.\r\n\r\nNote that this breaks Miri because it assumes that allocation can never fail.","Date":{"Unix":1625399814},"Uri":"https://github.com/rust-lang/rust/pull/86255","Title":"Support allocation failures when interpreting MIR","Verbose":1,"GhIssueNumber":86255,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-919628262","CommentCount":17,"Text":"Currently `-Z unpretty=thir-tree` is broken after some THIR refactorings. This re-implements it, making it easier to debug THIR-related issues.\r\n\r\nWe have to do analyzes before getting the THIR, since trying to create THIR from invalid HIR can ICE. But doing those analyzes requires the THIR to be built and stolen. We work around this by creating a separate query to construct the THIR tree string representation.\r\n\r\nCloses https://github.com/rust-lang/project-thir-unsafeck/issues/8, fixes #85552.","Date":{"Unix":1627473764},"Uri":"https://github.com/rust-lang/rust/pull/86251","Title":"Support -Z unpretty=thir-tree again","Verbose":1,"GhIssueNumber":86251,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-913744764","CommentCount":12,"Text":"This adds peephole optimizations to make `x == false`, `false == x`, `x != true`, and `true != x` get optimized to `!x` in the `instcombine` MIR pass. That pass currently handles `x == true` -> `x` already.","Date":{"Unix":1623229216},"Uri":"https://github.com/rust-lang/rust/pull/86107","Title":"Peephole optimize `x == false` and `x != true`","Verbose":1,"GhIssueNumber":86107,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-903057444","CommentCount":5,"Text":"Type aliases are linted as such, so (unstable) trait aliases should be treated the same way.","Date":{"Unix":1622120759},"Uri":"https://github.com/rust-lang/rust/pull/85732","Title":"Lint against non-CamelCase trait alias names","Verbose":1,"GhIssueNumber":85732,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-902935033","CommentCount":3,"Text":"`Iterator::{min, max}` can't be used with iterators of floats due to NaN issues. This suggests a workaround in the documentation of those functions.","Date":{"Unix":1622150096},"Uri":"https://github.com/rust-lang/rust/pull/85730","Title":"Mention workaround for floats in Iterator::{min, max}","Verbose":1,"GhIssueNumber":85730,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-902744809","CommentCount":5,"Text":"This removes a workaround for #24159, which has been fixed.","Date":{"Unix":1622088502},"Uri":"https://github.com/rust-lang/rust/pull/85725","Title":"Remove unneeded workaround","Verbose":1,"GhIssueNumber":85725,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-893726012","CommentCount":11,"Text":"These macros have already been removed, but there was still some code handling these macros. That code is now removed.","Date":{"Unix":1624036404},"Uri":"https://github.com/rust-lang/rust/pull/85421","Title":"Remove some last remants of {push,pop}_unsafe!","Verbose":1,"GhIssueNumber":85421,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-891263182","CommentCount":0,"Text":"This flag is useful for debugging the THIR.","Date":{"Unix":1620931903},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1128","Title":"Document -Zunpretty=thir-tree","Verbose":1,"GhIssueNumber":1128,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-891104711","CommentCount":30,"Text":"see also #85259, #83129, https://github.com/rust-lang/project-thir-unsafeck/issues/7\r\n\r\nr? @LeSeulArtichaut","Date":{"Unix":1625873064},"Uri":"https://github.com/rust-lang/rust/pull/85263","Title":"Check for union field accesses in THIR unsafeck","Verbose":1,"GhIssueNumber":85263,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-891086821","CommentCount":10,"Text":"#83129 was merged recently and added a THIR unsafe checker. This adds a check for inline assembly. (and this is 2x simpler than the MIR version, which has to check for `asm` and `llvm_asm` in two separate spots!)\r\n\r\n see also rust-lang/project-thir-unsafeck#7","Date":{"Unix":1621136094},"Uri":"https://github.com/rust-lang/rust/pull/85259","Title":"Check for inline assembly in THIR unsafeck","Verbose":1,"GhIssueNumber":85259,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-873992124","CommentCount":5,"Text":"Calling these intrinsics with non-finite values is undefined behaviour, since they result in `f*` intrinsics in LLVM with the `fast` flag, and `fast` math on non-finite values results in `poison` values. (technically LLVM only considers it UB upon _using_ the value, but that shouldn't make much of a difference)","Date":{"Unix":1620064376},"Uri":"https://github.com/rust-lang/miri/pull/1785","Title":"Throw UB if f*_fast intrinsic called with non-finite value","Verbose":1,"GhIssueNumber":1785,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-867147391","CommentCount":1,"Text":"Since all warnings are `deny`ed when `cfg(test)`, new warnings in rustc make tests fail. A new warning was added to rustc, so they fail with warnings like this:\r\n```\r\nerror: panic message is not a string literal\r\n   --> src/terminfo/parm.rs:682:34\r\n    |\r\n682 |             assert!(res.is_ok(), res.err().unwrap());\r\n    |                                  ^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: this is no longer accepted in Rust 2021\r\nhelp: add a \"{}\" format string to Display the message\r\n    |\r\n682 |             assert!(res.is_ok(), \"{}\", res.err().unwrap());\r\n    |                                  ^^^^^\r\n```\r\n\r\nThis fixes that by correcting the warnings, and tests now pass.","Date":{"Unix":1619421154},"Uri":"https://github.com/Stebalien/term/pull/109","Title":"Make tests pass on Rust 1.53","Verbose":1,"GhIssueNumber":109,"GhRepo":"Stebalien/term"},
{"Type":"gh-pr","Id":"gh-pr-867146789","CommentCount":0,"Text":"This makes the license metadata be in the standard SPDX format, so tools can correctly interpret the license metadata of this crate.","Date":{"Unix":1619421114},"Uri":"https://github.com/Stebalien/term/pull/108","Title":"Make license metadata SPDX-formatted","Verbose":1,"GhIssueNumber":108,"GhRepo":"Stebalien/term"},
{"Type":"gh-pr","Id":"gh-pr-866847339","CommentCount":3,"Text":"This fixes #76246, where commented out lines were being detected as features by `tidy`, by ignoring those lines when looking for features. It's still not perfect, since it can be fooled by things like:\r\n```rust\r\n/*\r\n#[unstable(feature = \"foo\", issue = \"1234\")]\r\n*/\r\n```\r\nBut luckily that never happens in `rustc`, so `foo` now ceases to appear in the unstable book.","Date":{"Unix":1619682150},"Uri":"https://github.com/rust-lang/rust/pull/84531","Title":"Ignore commented out lines when finding features","Verbose":1,"GhIssueNumber":84531,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-866405214","CommentCount":0,"Text":"This adds a mention of `-Z unpretty=mir-cfg`, a useful flag for viewing MIR as a control flow diagram.","Date":{"Unix":1619209511},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1112","Title":"Mention -Z unpretty=mir-cfg for debugging MIR","Verbose":1,"GhIssueNumber":1112,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-866306885","CommentCount":5,"Text":"When pretty printing the HIR of `if ... {} else if let ... {}` clauses, this displays it the `else if let` part as `match` it gets desugared to, the same way normal `if let` statements are currently displayed, instead of ICEing.\r\n\r\n```rust\r\npub fn main() {\r\n    if true {\r\n        // 1\r\n    } else if let a = 1 {\r\n        // 2\r\n    } else {\r\n        // 3\r\n    }\r\n}\r\n```\r\n\r\nnow gets desugared (via `rustc -Zunpretty=hir,typed src/x.rs`) to:\r\n\r\n```rust\r\n#[prelude_import]\r\nuse ::std::prelude::rust_2015::*;\r\n#[macro_use]\r\nextern crate std;\r\npub fn main() ({\r\n                   (if (true as bool)\r\n                       ({\r\n                            // 1\r\n                        } as\r\n                           ()) else {match (1 as i32) {\r\n                                         a => {\r\n                                             // 2\r\n                                         }\r\n                                         _ => {\r\n                                             // 3\r\n                                         }\r\n                                     }} as ())\r\n                    } as ())\r\n```\r\n\r\nFor comparison, this code gets HIR prettyprinted the same way before and after this change:\r\n\r\n```rust\r\npub fn main() {\r\n    if let a = 1 {\r\n        // 2\r\n    } else {\r\n        // 3\r\n    }\r\n}\r\n```\r\nturns into\r\n```rust\r\n#[prelude_import]\r\nuse ::std::prelude::rust_2015::*;\r\n#[macro_use]\r\nextern crate std;\r\npub fn main() ({\r\n                   (match (1 as i32) {\r\n                        a => {\r\n                            // 2\r\n                        }\r\n                        _ => {\r\n                            // 3\r\n                        }\r\n                    } as ())\r\n               } as ())\r\n```\r\n\r\nThis closes #82329. It closes #84434 as well, due to having the same root cause.","Date":{"Unix":1619402072},"Uri":"https://github.com/rust-lang/rust/pull/84486","Title":"Handle pretty printing of `else if let` clauses without ICEing","Verbose":1,"GhIssueNumber":84486,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-865452054","CommentCount":6,"Text":"This makes pressing <kbd>|</kbd> while some text is selected surround that text with pipes. This is useful when writing closures. \r\n\r\nIn this demo, I press <kbd>|</kbd> to easily surround some text (`predicate`) with pipe characters to create a closure. Before, this would have replaced `predicate` with just `|`.\r\n\r\n![](https://user-images.githubusercontent.com/10530973/115778847-3c257e00-a385-11eb-8c80-e0db970747db.gif)\r\n\r\n(I am getting failures when I do `cargo test` even on `master` locally (due to #8585 I think), but GH Actions is fine with this)","Date":{"Unix":1619530324},"Uri":"https://github.com/rust-analyzer/rust-analyzer/pull/8629","Title":"Allow pressing | to surround closure arguments in VSCode","Verbose":1,"GhIssueNumber":8629,"GhRepo":"rust-analyzer/rust-analyzer"},
{"Type":"gh-pr","Id":"gh-pr-863289867","CommentCount":7,"Text":"This makes Rustdoc titles for items be like \"Widget in cratename::blah::foo - Rust\". Titles for modules and other non-items are unchanged, and still read like \"cratename::blah::foo - Rust\". This makes managing several open Rustdoc tabs easier.\r\n\r\n![A screenshot of several open Rustdoc tabs](https://user-images.githubusercontent.com/10530973/115457675-d608f180-a1f2-11eb-87a8-838a32b4e3f7.png)\r\n\r\nThis also adds some tests for the new title behavior.\r\n\r\nCloses #84371.","Date":{"Unix":1619077629},"Uri":"https://github.com/rust-lang/rust/pull/84380","Title":"Write Rustdoc titles like \"x in crate::mod - Rust\"","Verbose":1,"GhIssueNumber":84380,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-853944049","CommentCount":12,"Text":"Currently hex/octal/binary literals with computed values are displayed like `0_xff_fff_fffu32`, which is invalid since underscores can't be in the middle of integer prefixes. This properly formats prefixed integers.\r\n\r\nThis causes  [`std::u32::MAX`](https://doc.rust-lang.org/std/u32/constant.MAX.html) to be displayed as\r\n```rust\r\npub const MAX: u32 = u32::MAX; // 0_xff_fff_fffu32\r\n```\r\n\r\nThis PR changes it to be displayed as:\r\n```rust\r\npub const MAX: u32 = u32::MAX; // 0xffff_ffffu32\r\n```\r\n","Date":{"Unix":1620133664},"Uri":"https://github.com/rust-lang/rust/pull/84017","Title":"Valid underscores in hex/octal/binary literal docs","Verbose":1,"GhIssueNumber":84017,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-849223365","CommentCount":1,"Text":"Currently, incorrect license metadata is causing the licence to be displayed wrong on the NPM sidebar, since NPM uses the metadata in the `package.json` to determine what to put in the sidebar:\r\n![image](https://user-images.githubusercontent.com/10530973/113420151-cc7c2e80-9396-11eb-89b6-ba065f317a27.png)","Date":{"Unix":1617373985},"Uri":"https://github.com/elpheria/rpc-websockets/pull/101","Title":"Fix license metadata in package.json","Verbose":1,"GhIssueNumber":101,"GhRepo":"elpheria/rpc-websockets"},
{"Type":"gh-pr","Id":"gh-pr-845327108","CommentCount":2,"Text":"## Pull request checklist\r\n\r\n- [x] All tests pass. Demo project builds and runs.\r\n- [X] I have resolved any merge conflicts.\r\n\r\n## What's in this pull request?\r\nThis fixes the error message that occurs when `client.toml` isn't found. Before, it incorrectly referred to the location where the config file was searched for as where an example was. This fixes it so it correctly labels the expected config location, and includes a reference to the actual example config.","Date":{"Unix":1617676388},"Uri":"https://github.com/nimiq/core-rs-albatross/pull/246","Title":"Fix error message on client.toml absence","Verbose":1,"GhIssueNumber":246,"GhRepo":"nimiq/core-rs-albatross"},
{"Type":"gh-pr","Id":"gh-pr-839015039","CommentCount":1,"Text":"The welcome pane isn't very helpful when in embedded mode, since editing isn't supported, and the person probably just wants to look at the diagram. If someone first loads Quiver in an embed, and then uses the editor later, they will see the welcome pane at that point.","Date":{"Unix":1616528805},"Uri":"https://github.com/varkor/quiver/pull/85","Title":"Don't show welcome message when embedded","Verbose":1,"GhIssueNumber":85,"GhRepo":"varkor/quiver"},
{"Type":"gh-pr","Id":"gh-pr-828364741","CommentCount":4,"Text":"This detects all Java literal types and all single word C data types, and suggests the corresponding Rust literal type.","Date":{"Unix":1615831560},"Uri":"https://github.com/rust-lang/rust/pull/82989","Title":"Custom error on literal names from other languages","Verbose":1,"GhIssueNumber":82989,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-822597760","CommentCount":1,"Text":"This updates the model URIs in the notebook to the new ones from fd6c1443c2810c207fc6ea0cea10db6abf86e25d, to make it easier to use them.","Date":{"Unix":1615172334},"Uri":"https://github.com/openai/CLIP/pull/52","Title":"Update models URIs in notebook","Verbose":1,"GhIssueNumber":52,"GhRepo":"openai/CLIP"},
{"Type":"gh-pr","Id":"gh-pr-822106165","CommentCount":1,"Text":"This is a pretty big update. The ZIP file got 65 MiB larger, and every directory has been updated or renamed.","Date":{"Unix":1627415393},"Uri":"https://github.com/reswitched/switch-oss/pull/4","Title":"11.0.0","Verbose":1,"GhIssueNumber":4,"GhRepo":"reswitched/switch-oss"},
{"Type":"gh-pr","Id":"gh-pr-821621874","CommentCount":12,"Text":"The `breakpoint` intrinsic raises a `SIGTRAP` signal. If a debugger is attached to a normal program, then `SIGTRAP` can be used to trigger breakpoints in debuggers like `gdb`. If there is no debugger, then the program exits with a message like `Trace/breakpoint trap (core dumped)`. This adds support for the intrinsic in Miri. While actually passing through the `SIGTRAP` doesn't make sense in a Miri context (if it just raised the signal normally then it would allow for debugging Miri itself, not the program being evaluated). As such, it just raises an error.","Date":{"Unix":1614948483},"Uri":"https://github.com/rust-lang/miri/pull/1733","Title":"Support breakpoint intrinsic","Verbose":1,"GhIssueNumber":1733,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-802980207","CommentCount":4,"Text":"This adds a note whenever null bytes are seen at the start of a token unexpectedly, since those tend to come from UTF-16 encoded files without a [BOM](https://en.wikipedia.org/wiki/Byte_order_mark) (if a UTF-16 BOM appears it won't be valid UTF-8, but if there is no BOM it be both valid UTF-16 and valid but garbled UTF-8). This approach was suggested in https://github.com/rust-lang/rust/issues/73979#issuecomment-653976451.\r\n\r\nCloses #73979.","Date":{"Unix":1614484564},"Uri":"https://github.com/rust-lang/rust/pull/81856","Title":"Suggest character encoding is incorrect when encountering random null bytes","Verbose":1,"GhIssueNumber":81856,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-799704328","CommentCount":4,"Text":"Before:\r\n![](https://user-images.githubusercontent.com/10530973/106663877-544de400-6572-11eb-98a4-77b6b3d9cd42.png)\r\n![image](https://user-images.githubusercontent.com/10530973/106664790-8d3a8880-6573-11eb-811f-29c4ade31848.png)\r\n\r\nAfter:\r\n![](https://user-images.githubusercontent.com/10530973/106663945-6b8cd180-6572-11eb-911a-12c69d935ee5.png) \r\n![](https://user-images.githubusercontent.com/10530973/106664403-05547e80-6573-11eb-84bf-fdd0dfc7dac8.png)\r\n\r\n\r\n\r\n","Date":{"Unix":1612352529},"Uri":"https://github.com/rust-lang/rust/pull/81681","Title":"Better styling of \"Switch result tab\" shortcut","Verbose":1,"GhIssueNumber":81681,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-787595590","CommentCount":1,"Text":"Per https://github.com/sveltejs/svelte-loader/issues/76#issuecomment-761686961, this closes #76.","Date":{"Unix":1610853935},"Uri":"https://github.com/sveltejs/svelte-loader/pull/161","Title":"Document compilationoptions","Verbose":1,"GhIssueNumber":161,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-787531411","CommentCount":4,"Text":"Webpack doesn't make it obvious how to fix this error, so we should document it in the changelog to help those upgrading to Webpack 5.","Date":{"Unix":1610910703},"Uri":"https://github.com/sveltejs/svelte-loader/pull/160","Title":"Add note about Webpack 5 workaround to changelog","Verbose":1,"GhIssueNumber":160,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-787255182","CommentCount":5,"Text":"This was partially done by #47365, but a few tests were missed in that PR.","Date":{"Unix":1610895028},"Uri":"https://github.com/rust-lang/rust/pull/81058","Title":"Re-enable all num tests on WASM","Verbose":1,"GhIssueNumber":81058,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-785319306","CommentCount":0,"Text":"This re-adds the test and makes the tests pass.","Date":{"Unix":1610563748},"Uri":"https://github.com/non25/svelte-loader/pull/2","Title":"Fix emitCss test","Verbose":1,"GhIssueNumber":2,"GhRepo":"non25/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-785285297","CommentCount":0,"Text":"Here's an example log line in the new format:\r\n```\r\n[RATE LIMITED] format string \"open-conn-track: timeout opening %v; no associated peer node\" (example: \"open-conn-track: timeout opening ([ip] => [ip]); no associated peer node\")\r\n```\r\nThis should make debugging logging issues a bit easier, and give more context as to why something was rate limited. Including an example was first mentioned at https://github.com/tailscale/tailscale/issues/1110#issuecomment-759073284.\r\n\r\nedit: updated example","Date":{"Unix":1610575044},"Uri":"https://github.com/tailscale/tailscale/pull/1122","Title":"Provide example when format string is rate limited","Verbose":1,"GhIssueNumber":1122,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-783717621","CommentCount":0,"Text":"Currently the licence name \"MIT\" is in the `package.json` but it there isn't an actual licence in the repo. #136 would have added a license but now #146 is the future, and that PR clears up the license issue by not including `webpack-virtual-modules` in-repo, so it doesn't have to affect the `LICENSE` file.","Date":{"Unix":1610468256},"Uri":"https://github.com/sveltejs/svelte-loader/pull/148","Title":"Explicitly licence under MIT","Verbose":1,"GhIssueNumber":148,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-783708863","CommentCount":0,"Text":"This should help people updating know exactly what they need to do when updating.","Date":{"Unix":1610405693},"Uri":"https://github.com/non25/svelte-loader/pull/1","Title":"Document 3.0.0 release","Verbose":1,"GhIssueNumber":1,"GhRepo":"non25/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-783565726","CommentCount":0,"Text":"Per https://github.com/sveltejs/svelte-loader/pull/140#pullrequestreview-514153012, most Svelte repos are using Github Actions now, so let's use it here too. travis-ci.org is shutting down soon and reducing support for OSS repos too. This also has the advantage of testing on Github Actions.","Date":{"Unix":1610386797},"Uri":"https://github.com/sveltejs/svelte-loader/pull/147","Title":"Move CI to Github Actions","Verbose":1,"GhIssueNumber":147,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-777160903","CommentCount":4,"Text":"This is what every other DNS resolver I could find does, so `tsdns` should do it as well. This also helps avoid weird error messages about records don't exist being unimplemented, and thus fixes #848.\r\n\r\nnotes:\r\n- `go fmt` makes the indentation on lines 218/219 look wrong, but AFAIK there's no way to make `go fmt` handle it right.\r\n- `go.sum` wasn't correctly regenerated after 14af6773324c95488f9f0a68704e637c7d642e70, but I didn't include the updated version in this PR to avoid merge conflicts.","Date":{"Unix":1610493175},"Uri":"https://github.com/tailscale/tailscale/pull/1079","Title":"Return NOERROR instead of NOTIMP for most records","Verbose":1,"GhIssueNumber":1079,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-769256088","CommentCount":0,"Text":"This caused some confusion in issue #460, since usually raw format strings aren't printed directly. Hopefully by directly logging that they are intended to be raw format strings, this will be more clear. Rate limited format strings now look like\r\n\r\n```\r\n[RATE LIMITED] format string \"control: sendStatus: %s: %v\"\r\n```\r\n\r\nCloses #460.","Date":{"Unix":1608414555},"Uri":"https://github.com/tailscale/tailscale/pull/1032","Title":"Clarify that raw format strings are intentional","Verbose":1,"GhIssueNumber":1032,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-765726569","CommentCount":0,"Text":"This is actually already required, this just updates `go.mod` with that fact. If you try and fail to build Tailscale with an outdated Go version, an error like this is printed, which should hopefully make building Tailscale easier:\r\n```\r\nnote: module requires Go 1.15\r\n```","Date":{"Unix":1607906186},"Uri":"https://github.com/tailscale/tailscale/pull/1015","Title":"Require at least Go 1.15 in go.mod","Verbose":1,"GhIssueNumber":1015,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-764565108","CommentCount":0,"Text":"These removed lines ignore built files that don't exist anymore, and just serve to clutter up the `.gitignore` file. (I was initially confused when I saw those lines, since I (correctly) thought that the only Tailscale binaries were `tailscale` and `tailscaled`):\r\n- `taillogin` was removed in d052586\r\n- `relaynode` was removed in a56e853","Date":{"Unix":1607818319},"Uri":"https://github.com/tailscale/tailscale/pull/1011","Title":"Remove unused .gitignore lines","Verbose":1,"GhIssueNumber":1011,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-726816262","CommentCount":0,"Text":"This makes it so we test the same versions as [Svelte itself](https://github.com/sveltejs/svelte/blob/10f68289ba55a21d47e45af24175eaae5b04149a/.github/workflows/ci.yml#L9).","Date":{"Unix":1603312530},"Uri":"https://github.com/sveltejs/svelte-loader/pull/140","Title":"Test on Node v14","Verbose":1,"GhIssueNumber":140,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-715724811","CommentCount":1,"Text":"The current link 404s, this fixes the post so the URL points to the actual forum thread.","Date":{"Unix":1601995468},"Uri":"https://github.com/rust-lang/blog.rust-lang.org/pull/704","Title":"Fix URL for internals thread on 1.47.0 post","Verbose":1,"GhIssueNumber":704,"GhRepo":"rust-lang/blog.rust-lang.org"},
{"Type":"gh-pr","Id":"gh-pr-712095614","CommentCount":0,"Text":"This prevents an extra vertical scrollbar from being displayed at the bottom when opening/closing the left sidebar. There is still a vertical scrollbar displayed when the text is wider than the left sidebar.\r\n\r\nBefore:\r\n<img src=\"https://user-images.githubusercontent.com/10530973/94712486-8b3b9100-0317-11eb-821f-792f388b59fa.gif\" width=\"400\"/> <img src=\"https://user-images.githubusercontent.com/10530973/94712492-8d055480-0317-11eb-9302-b99d3ec29d5a.gif\" width=\"400\"/>\r\n\r\nAfter:\r\n<img src=\"https://user-images.githubusercontent.com/10530973/94712530-9abada00-0317-11eb-92c3-8d0a5d8caa93.gif\" width=\"400\"/> <img src=\"https://user-images.githubusercontent.com/10530973/94712537-9d1d3400-0317-11eb-9e68-7ba36de8d6ce.gif\" width=\"400\"/>","Date":{"Unix":1601489742},"Uri":"https://github.com/athensresearch/athens/pull/391","Title":"fix(left-sidebar) extra scrollbar when opening left sidebar","Verbose":1,"GhIssueNumber":391,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-711400112","CommentCount":0,"Text":"This stops the creation time from showing as (unknown date) in the list of pages when a page was created via link.","Date":{"Unix":1601417944},"Uri":"https://github.com/athensresearch/athens/pull/386","Title":"Set creation time when a page is created via link","Verbose":1,"GhIssueNumber":386,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-694180442","CommentCount":0,"Text":"Since `jsbrain` refuses to process files with unrecognised parameters, it gave errors when handling these files. I am now able to successfully generate graphs for these files through `jsbrain_server`.","Date":{"Unix":1599357907},"Uri":"https://github.com/beeminder/road/pull/155","Title":"Remove old \"exprd\" parameter from test .bb files","Verbose":1,"GhIssueNumber":155,"GhRepo":"beeminder/road"},
{"Type":"gh-pr","Id":"gh-pr-618515985","CommentCount":1,"Text":"This incorporates several minor UI changes:\r\n- `style.cljs` is now formatted idomatically.\r\n- Fixed two lint warnings about the order of requires.\r\n- There is now a loading message while the JavaScript loads.\r\n- Alternating rows in the homepage table are light gray to make it easier to see across a row.\r\n- For some reason, some dates are stored `0` instead of an actual date. These are now displayed as \"(unknown date)\" in a dark gray.\r\n- Added a gap between links in the left sidebar.\r\n","Date":{"Unix":1589808100},"Uri":"https://github.com/athensresearch/athens/pull/57","Title":"Several minor UI improvements","Verbose":1,"GhIssueNumber":57,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-617832699","CommentCount":1,"Text":"See #10. This uses [Garden](https://github.com/noprompt/garden) for some basic styling. Now, the body uses the browser's default sans-serif font, instead of not specifying one (some browsers use Time New Roman in this case, some use Arial, some use Tinos (a Times New Roman clone)). Also, it makes sure there is enough room for the dates on the home page.\r\nI'm not very experienced with Clojure, but it does appear to work correctly to me.\r\n\r\n![image](https://user-images.githubusercontent.com/10530973/81877876-4b386500-9554-11ea-9814-37c228677579.png)\r\n","Date":{"Unix":1589459046},"Uri":"https://github.com/athensresearch/athens/pull/54","Title":"Add basic styling","Verbose":1,"GhIssueNumber":54,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-604337128","CommentCount":2,"Text":"This adds `Roman::value_checked`. Unlike `Roman::value`, this returns an `Err` instead of panicking. I also added some tests to ensure it behaves correctly.","Date":{"Unix":1587821322},"Uri":"https://github.com/ogham/rust-numerals/pull/5","Title":"Add Roman::value_checked","Verbose":1,"GhIssueNumber":5,"GhRepo":"ogham/rust-numerals"},
{"Type":"gh-pr","Id":"gh-pr-589671692","CommentCount":1,"Text":"Adds documentation examples for ``JsonValue::members`` and ``JsonValue::entries``.","Date":{"Unix":1585518173},"Uri":"https://github.com/maciejhirsz/json-rust/pull/182","Title":"Add documentation examples for members and entries","Verbose":1,"GhIssueNumber":182,"GhRepo":"maciejhirsz/json-rust"},
{"Type":"gh-pr","Id":"gh-pr-544047268","CommentCount":1,"Text":"","Date":{"Unix":1577820788},"Uri":"https://github.com/Hacker0x01/docs.hackerone.com/pull/155","Title":"Remove stray double quote","Verbose":1,"GhIssueNumber":155,"GhRepo":"Hacker0x01/docs.hackerone.com"},
{"Type":"gh-pr","Id":"gh-pr-470708973","CommentCount":0,"Text":"","Date":{"Unix":1563653287},"Uri":"https://github.com/MatthewDLudwig/NimiqVoteServer/pull/1","Title":"Add info and usage instructions to README","Verbose":1,"GhIssueNumber":1,"GhRepo":"MatthewDLudwig/NimiqVoteServer"},
{"Type":"gh-pr","Id":"gh-pr-463258847","CommentCount":0,"Text":"","Date":{"Unix":1562172094},"Uri":"https://github.com/steemit/steem/pull/3393","Title":"Several documentation improvements","Verbose":1,"GhIssueNumber":3393,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-463248675","CommentCount":0,"Text":"Closes #3384.","Date":{"Unix":1562172266},"Uri":"https://github.com/steemit/steem/pull/3392","Title":"Impact @steem.dao by sps_fund operation","Verbose":1,"GhIssueNumber":3392,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-462856309","CommentCount":1,"Text":"It got broke when it was moved to the ``devs`` directory.","Date":{"Unix":1563909832},"Uri":"https://github.com/steemit/steem/pull/3388","Title":"Fix URI to testing.md","Verbose":1,"GhIssueNumber":3388,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-451093260","CommentCount":0,"Text":"","Date":{"Unix":1559433647},"Uri":"https://github.com/nimiq/nimiq-utils/pull/23","Title":"Add icemining pool","Verbose":1,"GhIssueNumber":23,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-450561347","CommentCount":0,"Text":"Currently the net module doesn't compile when the ``--taintMode:on`` flag is passed to the compiler. Not well tested, I've only tried it by patching my local stdlib files.","Date":{"Unix":1559378681},"Uri":"https://github.com/nim-lang/Nim/pull/11360","Title":"Make net module compile with --taintMode:on","Verbose":1,"GhIssueNumber":11360,"GhRepo":"nim-lang/Nim"},
{"Type":"gh-pr","Id":"gh-pr-448391198","CommentCount":1,"Text":"This was causing the code not to compile on recent Nim.","Date":{"Unix":1595939546},"Uri":"https://github.com/stisa/webgl/pull/2","Title":"Fix logging code on latest Nim","Verbose":1,"GhIssueNumber":2,"GhRepo":"stisa/webgl"},
{"Type":"gh-pr","Id":"gh-pr-430708687","CommentCount":0,"Text":"SSH URLs only work for those with push access to this repo, HTTPS urls work for everyone.","Date":{"Unix":1554977652},"Uri":"https://github.com/nimiq/hub/pull/201","Title":"Make clone URL work for those without push access","Verbose":1,"GhIssueNumber":201,"GhRepo":"nimiq/hub"},
{"Type":"gh-pr","Id":"gh-pr-411189474","CommentCount":1,"Text":"Closes #60.","Date":{"Unix":1550411423},"Uri":"https://github.com/nim-lang/opengl/pull/61","Title":"Fix x11 import","Verbose":1,"GhIssueNumber":61,"GhRepo":"nim-lang/opengl"},
{"Type":"gh-pr","Id":"gh-pr-381954360","CommentCount":0,"Text":"Improves the manifest read by Chrome.","Date":{"Unix":1542556294},"Uri":"https://github.com/MattyIce/steem-keychain/pull/54","Title":"Improve manifest","Verbose":1,"GhIssueNumber":54,"GhRepo":"MattyIce/steem-keychain"},
{"Type":"gh-pr","Id":"gh-pr-374641349","CommentCount":0,"Text":"Improves the language used in ``README.md``","Date":{"Unix":1540645422},"Uri":"https://github.com/WebDollar/Node-WebDollar/pull/212","Title":"Improve language used in README","Verbose":1,"GhIssueNumber":212,"GhRepo":"WebDollar/Node-WebDollar"},
{"Type":"gh-pr","Id":"gh-pr-374640162","CommentCount":0,"Text":"Improves formatting consistency for geolocation address object","Date":{"Unix":1540645438},"Uri":"https://github.com/WebDollar/Node-WebDollar/pull/211","Title":"Improve formatting consistency for geolocation","Verbose":1,"GhIssueNumber":211,"GhRepo":"WebDollar/Node-WebDollar"},
{"Type":"gh-pr","Id":"gh-pr-369752637","CommentCount":1,"Text":"See https://github.com/steemit/condenser/pull/3058. This account has been \"deleted\" (blacklisted by Condenser), because the user wanted their account closed.","Date":{"Unix":1543251920},"Uri":"https://github.com/steemit/redeemer-irredeemables/pull/35","Title":"Add \"deleted\" account","Verbose":1,"GhIssueNumber":35,"GhRepo":"steemit/redeemer-irredeemables"},
{"Type":"gh-pr","Id":"gh-pr-367456490","CommentCount":0,"Text":"This adds the UP wallet. UP tokens are created by @steem-1up sending ``custom_json`` operations with an id of ``1up``. Moderators can make posts containing ``!1upsend 123.456``, and @steem-1up will automatically detect and broadcast the token creation, as soon as an admin upvotes the moderator's comment (with any weight) or approves it from an admin UI on the website. Note that the admin UI may miss a post if the state cache is cleared, or if the server isn't running when the post is made. However, voting the moderator's post should always work. \r\n\r\nOn the admin page, it requires the posting key of @steem-1up, to broadcast the ``custom_json`` op.\r\n\r\nAdditionally, I added a script to pay out to delegators, based on [postpromoter's script](https://github.com/MattyIce/postpromoter/blob/master/delegators.js), as `delegators.js`. Run it for details of how to use it. Note that delegation payouts are rounded to have 5 decimal places. This shouldn't make much of a difference to payouts. It will send 200000 UP total tokens to delegators, based on how much they have delegated. (if you've delegated 50SP out of 100SP total, you will get 100k UP tokens).\r\n\r\n## Screenshots\r\n\r\n### Admin page\r\n![Admin page](https://user-images.githubusercontent.com/10530973/46571571-41e12280-c945-11e8-9b40-0418d66a0370.png)\r\n\r\n### User wallet page\r\n![Wallet page](https://user-images.githubusercontent.com/10530973/46571581-5a513d00-c945-11e8-9aa8-1a8d994d933a.png)\r\n\r\n### Top UP holders (lists all of them)\r\n![Top holders](https://user-images.githubusercontent.com/10530973/46571583-65a46880-c945-11e8-95d4-13c0c142b955.png)","Date":{"Unix":1540879520},"Uri":"https://github.com/therealFlauwy/1UP/pull/51","Title":"Add UP token support","Verbose":1,"GhIssueNumber":51,"GhRepo":"therealFlauwy/1UP"},
{"Type":"gh-pr","Id":"gh-pr-360587229","CommentCount":1,"Text":"Fixes #98\r\n\r\n### Changes\r\n\r\nSummary of changes you made.\r\n\r\n* Option to enable beta is removed\r\n* Users aren't redirected if they have beta enabled\r\n\r\n### Test plan\r\n\r\nExplain how to test changes you made.\r\n\r\n* [ ] Go to settings page\r\n* [ ] Try (and fail) to enable beta mode","Date":{"Unix":1537090167},"Uri":"https://github.com/surpassinggoogle/UlogsV2/pull/122","Title":"Don't let users enable beta option","Verbose":1,"GhIssueNumber":122,"GhRepo":"surpassinggoogle/UlogsV2"},
{"Type":"gh-pr","Id":"gh-pr-360109649","CommentCount":0,"Text":"","Date":{"Unix":1536894062},"Uri":"https://github.com/bonustrack/steemscript/pull/21","Title":"Add Ulogs to list of apps","Verbose":1,"GhIssueNumber":21,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-358293146","CommentCount":0,"Text":"Fixes a typo in the filename of the Git gui**l**delines file","Date":{"Unix":1536599104},"Uri":"https://github.com/steemit/steem/pull/2880","Title":"Fix typo","Verbose":1,"GhIssueNumber":2880,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-354433694","CommentCount":0,"Text":"Changes from v1.0.2:\r\n- Adds Partiko, SteemPress, Tasteem, and APPICS info\r\n- Adds SteemPeak info and URL scheme\r\n- Removes trailing slash from Steemhunt, Steemia, Memeit.LOL, and Hede.io homepage URLs \r\n\r\nCould you deploy this to NPM please?","Date":{"Unix":1538561930},"Uri":"https://github.com/bonustrack/steemscript/pull/18","Title":"Bump version to 1.1.0","Verbose":1,"GhIssueNumber":18,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-345860977","CommentCount":0,"Text":"mineNIM website: https://minenim.org/","Date":{"Unix":1533372079},"Uri":"https://github.com/nimiq/nimiq-utils/pull/14","Title":"Add mineNIM Pool and Nimiq Tip Bot to address book","Verbose":1,"GhIssueNumber":14,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-342527475","CommentCount":1,"Text":"Adds changes from #15, and bumps up the version number from 1.0.1 to 1.0.2. Could you deploy this to NPM, please?","Date":{"Unix":1531994115},"Uri":"https://github.com/bonustrack/steemscript/pull/16","Title":"Release 1.0.2","Verbose":1,"GhIssueNumber":16,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-342414217","CommentCount":0,"Text":"Makes Zappl a template. \r\n\r\nFor steemit/condenser#2947.","Date":{"Unix":1531933760},"Uri":"https://github.com/bonustrack/steemscript/pull/15","Title":"Make Zappl templated","Verbose":1,"GhIssueNumber":15,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-329255297","CommentCount":0,"Text":"Adds Nimiq Foundation and Charity to address book.","Date":{"Unix":1529314663},"Uri":"https://github.com/nimiq/nimiq-utils/pull/11","Title":"Add Nimiq Foundation and Charity to address book","Verbose":1,"GhIssueNumber":11,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-326672023","CommentCount":0,"Text":"Adds my faucet to the address book.","Date":{"Unix":1527586517},"Uri":"https://github.com/nimiq/nimiq-utils/pull/10","Title":"Add Nimiq Faucet to address book","Verbose":1,"GhIssueNumber":10,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-326327251","CommentCount":0,"Text":"","Date":{"Unix":1528022561},"Uri":"https://github.com/nimiq/community/pull/92","Title":"Escape path on windows for example code, with installer","Verbose":1,"GhIssueNumber":92,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320994754","CommentCount":0,"Text":"Should be ``relayTransaction``, ``mempool.pushTransaction`` is for light clients.","Date":{"Unix":1525748199},"Uri":"https://github.com/nimiq/community/pull/89","Title":"Fix code in latest post","Verbose":1,"GhIssueNumber":89,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320982461","CommentCount":0,"Text":"Basically just [this post](https://smittyvb.github.io/nimiq-dev-tips//2018/05/07/sending-nim.html) by me.","Date":{"Unix":1525735818},"Uri":"https://github.com/nimiq/community/pull/88","Title":"Add post: Sending NIM with the Nimiq API","Verbose":1,"GhIssueNumber":88,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-1006776557","CommentCount":2,"Text":"This was noticed at https://github.com/flathub/org.mapeditor.Tiled/pull/11#discussion_r715583117: the way to ask for a release build is differs between Qbs and qmake. This properly makes builds optimized.","Date":{"Unix":1632527921},"Uri":"https://github.com/flathub/org.mapeditor.Tiled/pull/12","Title":"Properly make Qbs produce optimized builds","Verbose":1,"GhIssueNumber":12,"GhRepo":"flathub/org.mapeditor.Tiled"},
{"Type":"gh-pr","Id":"gh-pr-1004818355","CommentCount":2,"Text":"Using qmake to build Tiled is deprecated (closes #10), this updates it to use Qbs. This is based on [another app that uses QBS to build](https://github.com/flathub/flathub/pull/654/files).","Date":{"Unix":1632362047},"Uri":"https://github.com/flathub/org.mapeditor.Tiled/pull/11","Title":"Build using Qbs","Verbose":1,"GhIssueNumber":11,"GhRepo":"flathub/org.mapeditor.Tiled"},
{"Type":"gh-pr","Id":"gh-pr-993873664","CommentCount":4,"Text":"The main `cargo` command supports `cargo r` as an alias for `cargo run`, and `cargo t` as an alias for `cargo test`. This adds support to them in `cargo-miri` for consistency.","Date":{"Unix":1631644638},"Uri":"https://github.com/rust-lang/miri/pull/1890","Title":"One character aliases for cargo-miri run/test","Verbose":1,"GhIssueNumber":1890,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-964942982","CommentCount":0,"Text":"The current link 404s when viewed on GitHub due to using a relative\r\npath that refers to an upper directory.\r\n\r\n<!--\r\nTo help with the large amounts of pull requests, we would appreciate your\r\nreviews of other pull requests, especially simple package updates. Just leave a\r\ncomment describing what you have tested in the relevant package/service.\r\nReviewing helps to reduce the average time-to-merge for everyone.\r\nThanks a lot if you do!\r\nList of open PRs: https://github.com/NixOS/nixpkgs/pulls\r\nReviewing guidelines: https://nixos.org/manual/nixpkgs/unstable/#chap-reviewing-contributions\r\n-->\r\n\r\n###### Motivation for this change\r\nThe current link 404s.\r\n\r\n###### Things done\r\n\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n- [ ] Tested using sandboxing ([nix.useSandbox](https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox) on NixOS, or option `sandbox` in [`nix.conf`](https://nixos.org/nix/manual/#sec-conf-file) on non-NixOS linux)\r\n- Built on platform(s)\r\n   - [ ] NixOS\r\n   - [ ] macOS\r\n   - [ ] other Linux distributions\r\n- [ ] Tested via one or more NixOS test(s) if existing and applicable for the change (look inside [nixos/tests](https://github.com/NixOS/nixpkgs/blob/master/nixos/tests))\r\n- [ ] Tested compilation of all packages that depend on this change using `nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"`\r\n- [ ] Tested execution of all binary files (usually in `./result/bin/`)\r\n- [21.11 Release Notes (or backporting 21.05 Release notes)](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes)\r\n  - [ ] (Package updates) Added a release notes entry if the change is major or breaking\r\n  - [ ] (Module updates) Added a release notes entry if the change is significant\r\n  - [ ] (Module addition) Added a release notes entry if adding a new NixOS module\r\n- [X] Fits [CONTRIBUTING.md](https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md).\r\n","Date":{"Unix":1628599759},"Uri":"https://github.com/NixOS/nixpkgs/pull/133370","Title":"CONTRIBUTING.md: fix link to COPYING","Verbose":1,"GhIssueNumber":133370,"GhRepo":"NixOS/nixpkgs"},
{"Type":"gh-pr","Id":"gh-pr-963524490","CommentCount":0,"Text":"Currently, the Bash completions for `whereis <TAB>` gives `whereis file` (\"file\" is not a placeholder here, it literally expands to that). This fixes that by passing the `-c` flag to `compgen` to request completions for command names.","Date":{"Unix":1628503148},"Uri":"https://github.com/karelzak/util-linux/pull/1407","Title":"whereis: use commands for Bash completions","Verbose":1,"GhIssueNumber":1407,"GhRepo":"karelzak/util-linux"},
{"Type":"gh-pr","Id":"gh-pr-963317261","CommentCount":0,"Text":null,"Date":{"Unix":1628383966},"Uri":"https://github.com/hackclub/dinosaurs/pull/340","Title":"Add dino with long neck","Verbose":1,"GhIssueNumber":340,"GhRepo":"hackclub/dinosaurs"},
{"Type":"gh-pr","Id":"gh-pr-962956202","CommentCount":0,"Text":"This adds some more details about how the THIR works. It also adds as an example what some THIR looks like, along with some annotations I added.\r\n\r\nContributes to https://github.com/rust-lang/project-thir-unsafeck/issues/6. (cc @LeSeulArtichaut)","Date":{"Unix":1629590157},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1183","Title":"Expand THIR section with more details","Verbose":1,"GhIssueNumber":1183,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-961196834","CommentCount":1,"Text":"This flag was removed by https://github.com/rust-lang/rust/pull/65081, and the content of the page on profiling queries was quite outdated. I've removed the page, and moved the external links section to the main queries page. The rest of the page is outdated.\r\n\r\nFixes #1150","Date":{"Unix":1629120004},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1179","Title":"Remove docs for old -Z profile-queries flag","Verbose":1,"GhIssueNumber":1179,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-959569151","CommentCount":9,"Text":"This can be used like `./x.py test src/test/ui/abi/ --force-rerun`, and is useful when verifying that newly blessed tests don't change between test runs (such as due to being dependent on the current time or memory layout or RNG), without needing to change the test file or find the right file in `build` to remove.","Date":{"Unix":1628369005},"Uri":"https://github.com/rust-lang/rust/pull/87744","Title":"Add x.py option to --force-rerun compiletest tests","Verbose":1,"GhIssueNumber":87744,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-959410908","CommentCount":2,"Text":"Now that #87403 is merged, a few more tests can be added for reads/writes to dropping union fields.\r\n\r\nr? @LeSeulArtichaut ","Date":{"Unix":1628042634},"Uri":"https://github.com/rust-lang/rust/pull/87734","Title":"Test dropping union fields more","Verbose":1,"GhIssueNumber":87734,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-953408109","CommentCount":3,"Text":"Currently the documentation for `[integer]::{MIN, MAX}` doesn't explain where the constants come from. This documents how the values of those constants are related to powers of 2.","Date":{"Unix":1627500363},"Uri":"https://github.com/rust-lang/rust/pull/87500","Title":"Document math behind MIN/MAX consts on integers","Verbose":1,"GhIssueNumber":87500,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-936459890","CommentCount":4,"Text":"Cc https://github.com/rust-lang/rust/issues/86863, which was caused by PR https://github.com/rust-lang/rust/pull/86255.","Date":{"Unix":1625432069},"Uri":"https://github.com/rust-lang/miri/pull/1845","Title":"Make work with latest rustc","Verbose":1,"GhIssueNumber":1845,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-934108955","CommentCount":3,"Text":"This is useful for when you want to reschedule future tasks to today, or bump forward overdue tasks to today.","Date":{"Unix":1626904828},"Uri":"https://github.com/getting-things-gnome/gtg/pull/686","Title":"Make setting due date today an option in context menu","Verbose":1,"GhIssueNumber":686,"GhRepo":"getting-things-gnome/gtg"},
{"Type":"gh-pr","Id":"gh-pr-932642809","CommentCount":1,"Text":"This was changed in https://github.com/rust-lang/rust/pull/86446 such that incompleteness is included in the declaration.","Date":{"Unix":1624984874},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1151","Title":"Document how to mark features as incomplete","Verbose":1,"GhIssueNumber":1151,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-930939713","CommentCount":5,"Text":"This causes Windows Defender's firewall to pop up during tests to ask if I want to allow the test program to access the public Internet, since it was listening on `0.0.0.0` (the test passes regardless of how you respond to the modal, since the firewall only affects traffic outside of the computer, none of which actually happens in the test). The test server doesn't actually need to be publicly reachable, so this makes it so it is only reachable locally, which makes Windows Defender happy.","Date":{"Unix":1624925934},"Uri":"https://github.com/rust-lang/rust/pull/86669","Title":"Don't run a publically reachable server in tests","Verbose":1,"GhIssueNumber":86669,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-928619157","CommentCount":16,"Text":"While looking at #86583, I wondered how many other (insecure) HTTP links were in `rustc`. This changes most other `http` links to `https`. While most of the links are in comments or documentation, there are a few other HTTP links that are used by CI that are changed to HTTPS.\r\n\r\nNotes:\r\n- I didn't change any to or in licences\r\n- Some links don't support HTTPS :(\r\n- Some `http` links were dead, in those cases I upgraded them to their new places (all of which used HTTPS)","Date":{"Unix":1624704734},"Uri":"https://github.com/rust-lang/rust/pull/86586","Title":"Use HTTPS links where possible","Verbose":1,"GhIssueNumber":86586,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-928299146","CommentCount":1,"Text":"This updates dependencies to their latest versions, causing #19 to be fixed, and also adds a regression test for that issue. I've also verified that this fixes the table rendering issues manually.","Date":{"Unix":1625574923},"Uri":"https://github.com/badboy/mdbook-toc/pull/20","Title":"Bump dependencies to fix HTML in tables","Verbose":1,"GhIssueNumber":20,"GhRepo":"badboy/mdbook-toc"},
{"Type":"gh-pr","Id":"gh-pr-927714602","CommentCount":1,"Text":"Currently it renders like:\r\n![image](https://user-images.githubusercontent.com/10530973/123013328-05beac00-d392-11eb-9235-afa6439c88e8.png)\r\nThis changes it to:\r\n![image](https://user-images.githubusercontent.com/10530973/123013363-140cc800-d392-11eb-9b19-71a3dfdf645e.png)\r\n\r\nThe incorrect rendering is caused by a bug in mdBook: https://github.com/rust-lang/mdBook/issues/1583. This adds a workaround for that bug.","Date":{"Unix":1624510657},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1146","Title":"Generate glossary table correctly","Verbose":1,"GhIssueNumber":1146,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-927663961","CommentCount":8,"Text":"This adds a suggestion for \"undefined reference to ...\" linking errors to install or specify the location to an external library. Since there is no defined error format for linkers, we just check if there was a failure and if that failure contains the string `undefined reference to`. This also makes it impossible to test this, since the output depends on the system linker. The output now looks like:\r\n```\r\nerror: linking with `cc` failed: exit status: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"linking_failure.linking_failure.7rcbfp3g-cgu.0.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.1.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.2.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.3.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.4.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.5.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.6.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.7.rcgu.o\" \"linking_failure.linking_failure.7rcbfp3g-cgu.8.rcgu.o\" \"linking_failure.53u64zklswtfazes.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-01ce3ba5c629d02f.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-f1f2102409186354.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libminiz_oxide-1e8b6b56a999f838.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libadler-d0e93eb4e14f1d19.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libobject-1d7e39d75d082b43.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libaddr2line-ade42e945045b261.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgimli-1a65064fccf4ebc1.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_detect-4d699c310fdfe72d.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-1cafa68a696ec800.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-e9f1c8c4dab2f046.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-ecc1a743be25c7f7.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-e074031c4b66b6b6.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-9aa6ed9f1d3bfd53.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-7862bf96c2250ca0.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-f02ce0dc7895b5fd.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-3af9c60917570521.rlib\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ca16fc7bb3645684.rlib\" \"-Wl,--end-group\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-d8e1a5b7299604cc.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-znoexecstack\" \"-L\" \"/home/smit/rustc-dev/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"linking_failure\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\"\r\n  = note: /usr/bin/ld: linking_failure.linking_failure.7rcbfp3g-cgu.3.rcgu.o: in function `linking_failure::main':\r\n          linking_failure.7rcbfp3g-cgu.3:(.text._ZN15linking_failure4main17h52b6e3052e444479E+0x3): undefined reference to `doesnt_exist_thiwthwfyl'\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n          \r\n  = help: some `extern` functions couldn't be found; you may need to install or specify the path to some dependencies\r\n  = note: use the -L flag to specify the library lookup path\r\n  = note: use the cargo:rustc-link-search directive to specify the library lookup path with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#rustc-link-search)\r\n\r\nerror: aborting due to previous error\r\n```","Date":{"Unix":1625141025},"Uri":"https://github.com/rust-lang/rust/pull/86558","Title":"Add suggestions for \"undefined reference\" link errors","Verbose":1,"GhIssueNumber":86558,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-925660924","CommentCount":3,"Text":"This makes error messages for functions with incorrect argument counts adapt if they refer to a struct or enum variant:\r\n```\r\nerror[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\r\n  --> $DIR/struct-enum-wrong-args.rs:7:13\r\n   |\r\nLL |     let _ = Ok();\r\n   |             ^^-- supplied 0 arguments\r\n   |             |\r\n   |             expected 1 argument\r\n\r\nerror[E0061]: this struct takes 1 argument but 0 arguments were supplied\r\n  --> $DIR/struct-enum-wrong-args.rs:8:13\r\n   |\r\nLL |     let _ = Wrapper();\r\n   |             ^^^^^^^-- supplied 0 arguments\r\n   |             |\r\n   |             expected 1 argument\r\n```\r\n\r\nFixes #86481.","Date":{"Unix":1624335317},"Uri":"https://github.com/rust-lang/rust/pull/86493","Title":"Say \"this enum variant takes\"/\"this struct takes\" instead of \"this function takes\"","Verbose":1,"GhIssueNumber":86493,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-925206310","CommentCount":8,"Text":"This isn't a feature gate, it's an attribute that is feature gated behind the `rustc_attrs` attribute. Closes #85680.","Date":{"Unix":1624943740},"Uri":"https://github.com/rust-lang/rust/pull/86446","Title":"Don't make `rustc_insignificant_dtor` feature gate","Verbose":1,"GhIssueNumber":86446,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-923861797","CommentCount":1,"Text":"See https://github.com/rust-lang/rust/issues/86099#issuecomment-862857244 for some more context. These operations always panic, even when overflow checks are disabled.","Date":{"Unix":1623983939},"Uri":"https://github.com/rust-lang/reference/pull/1049","Title":"Mention that MAX / -1 and MAX % -1 always panic","Verbose":1,"GhIssueNumber":1049,"GhRepo":"rust-lang/reference"},
{"Type":"gh-pr","Id":"gh-pr-923086301","CommentCount":4,"Text":"Suggested in https://github.com/rust-lang/rust/pull/85263#issuecomment-861906730, this splits off the support for pattern walking in THIR from #85263. This has no observable effect on THIR unsafety checking, since it is not currently possible to trigger unsafety from the THIR checker using the additional patterns or constants that are now walked. THIR patterns are walked in source code order.\r\n\r\nr? @LeSeulArtichaut","Date":{"Unix":1624092126},"Uri":"https://github.com/rust-lang/rust/pull/86378","Title":"Add pattern walking support to THIR walker","Verbose":1,"GhIssueNumber":86378,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-921890312","CommentCount":4,"Text":"I noticed this while working on #86255: currently the same message is used for hard errors and soft errors in CTFE. This changes the error messages to make hard errors use a message that indicates the reality of the situation correctly, since usage of the constant is never allowed when there was a hard error evaluating it. This doesn't affect the behaviour of these error messages, only the content.\r\n\r\nThis changes the error logic to check if the error should be hard or soft where it is generated, instead of where it is emitted, to allow this distinction in error messages.","Date":{"Unix":1623953208},"Uri":"https://github.com/rust-lang/rust/pull/86340","Title":"Use better error message for hard errors in CTFE","Verbose":1,"GhIssueNumber":86340,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-919686204","CommentCount":30,"Text":"This closes #79601 by handling the case where memory allocation fails during MIR interpretation, and translates that failure into an `InterpError`. The error message is \"tried to allocate more memory than available to compiler\" to make it clear that the memory shortage is happening at compile-time by the compiler itself, and that it is not a runtime issue.\r\n\r\nNow that memory allocation can fail, it would be neat if Miri could simulate low-memory devices to make it easy to see how much memory a Rust program needs.\r\n\r\nNote that this breaks Miri because it assumes that allocation can never fail.","Date":{"Unix":1625399814},"Uri":"https://github.com/rust-lang/rust/pull/86255","Title":"Support allocation failures when interpreting MIR","Verbose":1,"GhIssueNumber":86255,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-919628262","CommentCount":17,"Text":"Currently `-Z unpretty=thir-tree` is broken after some THIR refactorings. This re-implements it, making it easier to debug THIR-related issues.\r\n\r\nWe have to do analyzes before getting the THIR, since trying to create THIR from invalid HIR can ICE. But doing those analyzes requires the THIR to be built and stolen. We work around this by creating a separate query to construct the THIR tree string representation.\r\n\r\nCloses https://github.com/rust-lang/project-thir-unsafeck/issues/8, fixes #85552.","Date":{"Unix":1627473764},"Uri":"https://github.com/rust-lang/rust/pull/86251","Title":"Support -Z unpretty=thir-tree again","Verbose":1,"GhIssueNumber":86251,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-913744764","CommentCount":12,"Text":"This adds peephole optimizations to make `x == false`, `false == x`, `x != true`, and `true != x` get optimized to `!x` in the `instcombine` MIR pass. That pass currently handles `x == true` -> `x` already.","Date":{"Unix":1623229216},"Uri":"https://github.com/rust-lang/rust/pull/86107","Title":"Peephole optimize `x == false` and `x != true`","Verbose":1,"GhIssueNumber":86107,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-903057444","CommentCount":5,"Text":"Type aliases are linted as such, so (unstable) trait aliases should be treated the same way.","Date":{"Unix":1622120759},"Uri":"https://github.com/rust-lang/rust/pull/85732","Title":"Lint against non-CamelCase trait alias names","Verbose":1,"GhIssueNumber":85732,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-902935033","CommentCount":3,"Text":"`Iterator::{min, max}` can't be used with iterators of floats due to NaN issues. This suggests a workaround in the documentation of those functions.","Date":{"Unix":1622150096},"Uri":"https://github.com/rust-lang/rust/pull/85730","Title":"Mention workaround for floats in Iterator::{min, max}","Verbose":1,"GhIssueNumber":85730,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-902744809","CommentCount":5,"Text":"This removes a workaround for #24159, which has been fixed.","Date":{"Unix":1622088502},"Uri":"https://github.com/rust-lang/rust/pull/85725","Title":"Remove unneeded workaround","Verbose":1,"GhIssueNumber":85725,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-893726012","CommentCount":11,"Text":"These macros have already been removed, but there was still some code handling these macros. That code is now removed.","Date":{"Unix":1624036404},"Uri":"https://github.com/rust-lang/rust/pull/85421","Title":"Remove some last remants of {push,pop}_unsafe!","Verbose":1,"GhIssueNumber":85421,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-891263182","CommentCount":0,"Text":"This flag is useful for debugging the THIR.","Date":{"Unix":1620931903},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1128","Title":"Document -Zunpretty=thir-tree","Verbose":1,"GhIssueNumber":1128,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-891104711","CommentCount":30,"Text":"see also #85259, #83129, https://github.com/rust-lang/project-thir-unsafeck/issues/7\r\n\r\nr? @LeSeulArtichaut","Date":{"Unix":1625873064},"Uri":"https://github.com/rust-lang/rust/pull/85263","Title":"Check for union field accesses in THIR unsafeck","Verbose":1,"GhIssueNumber":85263,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-891086821","CommentCount":10,"Text":"#83129 was merged recently and added a THIR unsafe checker. This adds a check for inline assembly. (and this is 2x simpler than the MIR version, which has to check for `asm` and `llvm_asm` in two separate spots!)\r\n\r\n see also rust-lang/project-thir-unsafeck#7","Date":{"Unix":1621136094},"Uri":"https://github.com/rust-lang/rust/pull/85259","Title":"Check for inline assembly in THIR unsafeck","Verbose":1,"GhIssueNumber":85259,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-873992124","CommentCount":5,"Text":"Calling these intrinsics with non-finite values is undefined behaviour, since they result in `f*` intrinsics in LLVM with the `fast` flag, and `fast` math on non-finite values results in `poison` values. (technically LLVM only considers it UB upon _using_ the value, but that shouldn't make much of a difference)","Date":{"Unix":1620064376},"Uri":"https://github.com/rust-lang/miri/pull/1785","Title":"Throw UB if f*_fast intrinsic called with non-finite value","Verbose":1,"GhIssueNumber":1785,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-867147391","CommentCount":1,"Text":"Since all warnings are `deny`ed when `cfg(test)`, new warnings in rustc make tests fail. A new warning was added to rustc, so they fail with warnings like this:\r\n```\r\nerror: panic message is not a string literal\r\n   --> src/terminfo/parm.rs:682:34\r\n    |\r\n682 |             assert!(res.is_ok(), res.err().unwrap());\r\n    |                                  ^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: this is no longer accepted in Rust 2021\r\nhelp: add a \"{}\" format string to Display the message\r\n    |\r\n682 |             assert!(res.is_ok(), \"{}\", res.err().unwrap());\r\n    |                                  ^^^^^\r\n```\r\n\r\nThis fixes that by correcting the warnings, and tests now pass.","Date":{"Unix":1619421154},"Uri":"https://github.com/Stebalien/term/pull/109","Title":"Make tests pass on Rust 1.53","Verbose":1,"GhIssueNumber":109,"GhRepo":"Stebalien/term"},
{"Type":"gh-pr","Id":"gh-pr-867146789","CommentCount":0,"Text":"This makes the license metadata be in the standard SPDX format, so tools can correctly interpret the license metadata of this crate.","Date":{"Unix":1619421114},"Uri":"https://github.com/Stebalien/term/pull/108","Title":"Make license metadata SPDX-formatted","Verbose":1,"GhIssueNumber":108,"GhRepo":"Stebalien/term"},
{"Type":"gh-pr","Id":"gh-pr-866847339","CommentCount":3,"Text":"This fixes #76246, where commented out lines were being detected as features by `tidy`, by ignoring those lines when looking for features. It's still not perfect, since it can be fooled by things like:\r\n```rust\r\n/*\r\n#[unstable(feature = \"foo\", issue = \"1234\")]\r\n*/\r\n```\r\nBut luckily that never happens in `rustc`, so `foo` now ceases to appear in the unstable book.","Date":{"Unix":1619682150},"Uri":"https://github.com/rust-lang/rust/pull/84531","Title":"Ignore commented out lines when finding features","Verbose":1,"GhIssueNumber":84531,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-866405214","CommentCount":0,"Text":"This adds a mention of `-Z unpretty=mir-cfg`, a useful flag for viewing MIR as a control flow diagram.","Date":{"Unix":1619209511},"Uri":"https://github.com/rust-lang/rustc-dev-guide/pull/1112","Title":"Mention -Z unpretty=mir-cfg for debugging MIR","Verbose":1,"GhIssueNumber":1112,"GhRepo":"rust-lang/rustc-dev-guide"},
{"Type":"gh-pr","Id":"gh-pr-866306885","CommentCount":5,"Text":"When pretty printing the HIR of `if ... {} else if let ... {}` clauses, this displays it the `else if let` part as `match` it gets desugared to, the same way normal `if let` statements are currently displayed, instead of ICEing.\r\n\r\n```rust\r\npub fn main() {\r\n    if true {\r\n        // 1\r\n    } else if let a = 1 {\r\n        // 2\r\n    } else {\r\n        // 3\r\n    }\r\n}\r\n```\r\n\r\nnow gets desugared (via `rustc -Zunpretty=hir,typed src/x.rs`) to:\r\n\r\n```rust\r\n#[prelude_import]\r\nuse ::std::prelude::rust_2015::*;\r\n#[macro_use]\r\nextern crate std;\r\npub fn main() ({\r\n                   (if (true as bool)\r\n                       ({\r\n                            // 1\r\n                        } as\r\n                           ()) else {match (1 as i32) {\r\n                                         a => {\r\n                                             // 2\r\n                                         }\r\n                                         _ => {\r\n                                             // 3\r\n                                         }\r\n                                     }} as ())\r\n                    } as ())\r\n```\r\n\r\nFor comparison, this code gets HIR prettyprinted the same way before and after this change:\r\n\r\n```rust\r\npub fn main() {\r\n    if let a = 1 {\r\n        // 2\r\n    } else {\r\n        // 3\r\n    }\r\n}\r\n```\r\nturns into\r\n```rust\r\n#[prelude_import]\r\nuse ::std::prelude::rust_2015::*;\r\n#[macro_use]\r\nextern crate std;\r\npub fn main() ({\r\n                   (match (1 as i32) {\r\n                        a => {\r\n                            // 2\r\n                        }\r\n                        _ => {\r\n                            // 3\r\n                        }\r\n                    } as ())\r\n               } as ())\r\n```\r\n\r\nThis closes #82329. It closes #84434 as well, due to having the same root cause.","Date":{"Unix":1619402072},"Uri":"https://github.com/rust-lang/rust/pull/84486","Title":"Handle pretty printing of `else if let` clauses without ICEing","Verbose":1,"GhIssueNumber":84486,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-865452054","CommentCount":6,"Text":"This makes pressing <kbd>|</kbd> while some text is selected surround that text with pipes. This is useful when writing closures. \r\n\r\nIn this demo, I press <kbd>|</kbd> to easily surround some text (`predicate`) with pipe characters to create a closure. Before, this would have replaced `predicate` with just `|`.\r\n\r\n![](https://user-images.githubusercontent.com/10530973/115778847-3c257e00-a385-11eb-8c80-e0db970747db.gif)\r\n\r\n(I am getting failures when I do `cargo test` even on `master` locally (due to #8585 I think), but GH Actions is fine with this)","Date":{"Unix":1619530324},"Uri":"https://github.com/rust-analyzer/rust-analyzer/pull/8629","Title":"Allow pressing | to surround closure arguments in VSCode","Verbose":1,"GhIssueNumber":8629,"GhRepo":"rust-analyzer/rust-analyzer"},
{"Type":"gh-pr","Id":"gh-pr-863289867","CommentCount":7,"Text":"This makes Rustdoc titles for items be like \"Widget in cratename::blah::foo - Rust\". Titles for modules and other non-items are unchanged, and still read like \"cratename::blah::foo - Rust\". This makes managing several open Rustdoc tabs easier.\r\n\r\n![A screenshot of several open Rustdoc tabs](https://user-images.githubusercontent.com/10530973/115457675-d608f180-a1f2-11eb-87a8-838a32b4e3f7.png)\r\n\r\nThis also adds some tests for the new title behavior.\r\n\r\nCloses #84371.","Date":{"Unix":1619077629},"Uri":"https://github.com/rust-lang/rust/pull/84380","Title":"Write Rustdoc titles like \"x in crate::mod - Rust\"","Verbose":1,"GhIssueNumber":84380,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-853944049","CommentCount":12,"Text":"Currently hex/octal/binary literals with computed values are displayed like `0_xff_fff_fffu32`, which is invalid since underscores can't be in the middle of integer prefixes. This properly formats prefixed integers.\r\n\r\nThis causes  [`std::u32::MAX`](https://doc.rust-lang.org/std/u32/constant.MAX.html) to be displayed as\r\n```rust\r\npub const MAX: u32 = u32::MAX; // 0_xff_fff_fffu32\r\n```\r\n\r\nThis PR changes it to be displayed as:\r\n```rust\r\npub const MAX: u32 = u32::MAX; // 0xffff_ffffu32\r\n```\r\n","Date":{"Unix":1620133664},"Uri":"https://github.com/rust-lang/rust/pull/84017","Title":"Valid underscores in hex/octal/binary literal docs","Verbose":1,"GhIssueNumber":84017,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-849223365","CommentCount":1,"Text":"Currently, incorrect license metadata is causing the licence to be displayed wrong on the NPM sidebar, since NPM uses the metadata in the `package.json` to determine what to put in the sidebar:\r\n![image](https://user-images.githubusercontent.com/10530973/113420151-cc7c2e80-9396-11eb-89b6-ba065f317a27.png)","Date":{"Unix":1617373985},"Uri":"https://github.com/elpheria/rpc-websockets/pull/101","Title":"Fix license metadata in package.json","Verbose":1,"GhIssueNumber":101,"GhRepo":"elpheria/rpc-websockets"},
{"Type":"gh-pr","Id":"gh-pr-845327108","CommentCount":2,"Text":"## Pull request checklist\r\n\r\n- [x] All tests pass. Demo project builds and runs.\r\n- [X] I have resolved any merge conflicts.\r\n\r\n## What's in this pull request?\r\nThis fixes the error message that occurs when `client.toml` isn't found. Before, it incorrectly referred to the location where the config file was searched for as where an example was. This fixes it so it correctly labels the expected config location, and includes a reference to the actual example config.","Date":{"Unix":1617676388},"Uri":"https://github.com/nimiq/core-rs-albatross/pull/246","Title":"Fix error message on client.toml absence","Verbose":1,"GhIssueNumber":246,"GhRepo":"nimiq/core-rs-albatross"},
{"Type":"gh-pr","Id":"gh-pr-839015039","CommentCount":1,"Text":"The welcome pane isn't very helpful when in embedded mode, since editing isn't supported, and the person probably just wants to look at the diagram. If someone first loads Quiver in an embed, and then uses the editor later, they will see the welcome pane at that point.","Date":{"Unix":1616528805},"Uri":"https://github.com/varkor/quiver/pull/85","Title":"Don't show welcome message when embedded","Verbose":1,"GhIssueNumber":85,"GhRepo":"varkor/quiver"},
{"Type":"gh-pr","Id":"gh-pr-828364741","CommentCount":4,"Text":"This detects all Java literal types and all single word C data types, and suggests the corresponding Rust literal type.","Date":{"Unix":1615831560},"Uri":"https://github.com/rust-lang/rust/pull/82989","Title":"Custom error on literal names from other languages","Verbose":1,"GhIssueNumber":82989,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-822597760","CommentCount":1,"Text":"This updates the model URIs in the notebook to the new ones from fd6c1443c2810c207fc6ea0cea10db6abf86e25d, to make it easier to use them.","Date":{"Unix":1615172334},"Uri":"https://github.com/openai/CLIP/pull/52","Title":"Update models URIs in notebook","Verbose":1,"GhIssueNumber":52,"GhRepo":"openai/CLIP"},
{"Type":"gh-pr","Id":"gh-pr-822106165","CommentCount":1,"Text":"This is a pretty big update. The ZIP file got 65 MiB larger, and every directory has been updated or renamed.","Date":{"Unix":1627415393},"Uri":"https://github.com/reswitched/switch-oss/pull/4","Title":"11.0.0","Verbose":1,"GhIssueNumber":4,"GhRepo":"reswitched/switch-oss"},
{"Type":"gh-pr","Id":"gh-pr-821621874","CommentCount":12,"Text":"The `breakpoint` intrinsic raises a `SIGTRAP` signal. If a debugger is attached to a normal program, then `SIGTRAP` can be used to trigger breakpoints in debuggers like `gdb`. If there is no debugger, then the program exits with a message like `Trace/breakpoint trap (core dumped)`. This adds support for the intrinsic in Miri. While actually passing through the `SIGTRAP` doesn't make sense in a Miri context (if it just raised the signal normally then it would allow for debugging Miri itself, not the program being evaluated). As such, it just raises an error.","Date":{"Unix":1614948483},"Uri":"https://github.com/rust-lang/miri/pull/1733","Title":"Support breakpoint intrinsic","Verbose":1,"GhIssueNumber":1733,"GhRepo":"rust-lang/miri"},
{"Type":"gh-pr","Id":"gh-pr-802980207","CommentCount":4,"Text":"This adds a note whenever null bytes are seen at the start of a token unexpectedly, since those tend to come from UTF-16 encoded files without a [BOM](https://en.wikipedia.org/wiki/Byte_order_mark) (if a UTF-16 BOM appears it won't be valid UTF-8, but if there is no BOM it be both valid UTF-16 and valid but garbled UTF-8). This approach was suggested in https://github.com/rust-lang/rust/issues/73979#issuecomment-653976451.\r\n\r\nCloses #73979.","Date":{"Unix":1614484564},"Uri":"https://github.com/rust-lang/rust/pull/81856","Title":"Suggest character encoding is incorrect when encountering random null bytes","Verbose":1,"GhIssueNumber":81856,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-799704328","CommentCount":4,"Text":"Before:\r\n![](https://user-images.githubusercontent.com/10530973/106663877-544de400-6572-11eb-98a4-77b6b3d9cd42.png)\r\n![image](https://user-images.githubusercontent.com/10530973/106664790-8d3a8880-6573-11eb-811f-29c4ade31848.png)\r\n\r\nAfter:\r\n![](https://user-images.githubusercontent.com/10530973/106663945-6b8cd180-6572-11eb-911a-12c69d935ee5.png) \r\n![](https://user-images.githubusercontent.com/10530973/106664403-05547e80-6573-11eb-84bf-fdd0dfc7dac8.png)\r\n\r\n\r\n\r\n","Date":{"Unix":1612352529},"Uri":"https://github.com/rust-lang/rust/pull/81681","Title":"Better styling of \"Switch result tab\" shortcut","Verbose":1,"GhIssueNumber":81681,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-787595590","CommentCount":1,"Text":"Per https://github.com/sveltejs/svelte-loader/issues/76#issuecomment-761686961, this closes #76.","Date":{"Unix":1610853935},"Uri":"https://github.com/sveltejs/svelte-loader/pull/161","Title":"Document compilationoptions","Verbose":1,"GhIssueNumber":161,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-787531411","CommentCount":4,"Text":"Webpack doesn't make it obvious how to fix this error, so we should document it in the changelog to help those upgrading to Webpack 5.","Date":{"Unix":1610910703},"Uri":"https://github.com/sveltejs/svelte-loader/pull/160","Title":"Add note about Webpack 5 workaround to changelog","Verbose":1,"GhIssueNumber":160,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-787255182","CommentCount":5,"Text":"This was partially done by #47365, but a few tests were missed in that PR.","Date":{"Unix":1610895028},"Uri":"https://github.com/rust-lang/rust/pull/81058","Title":"Re-enable all num tests on WASM","Verbose":1,"GhIssueNumber":81058,"GhRepo":"rust-lang/rust"},
{"Type":"gh-pr","Id":"gh-pr-785319306","CommentCount":0,"Text":"This re-adds the test and makes the tests pass.","Date":{"Unix":1610563748},"Uri":"https://github.com/non25/svelte-loader/pull/2","Title":"Fix emitCss test","Verbose":1,"GhIssueNumber":2,"GhRepo":"non25/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-785285297","CommentCount":0,"Text":"Here's an example log line in the new format:\r\n```\r\n[RATE LIMITED] format string \"open-conn-track: timeout opening %v; no associated peer node\" (example: \"open-conn-track: timeout opening ([ip] => [ip]); no associated peer node\")\r\n```\r\nThis should make debugging logging issues a bit easier, and give more context as to why something was rate limited. Including an example was first mentioned at https://github.com/tailscale/tailscale/issues/1110#issuecomment-759073284.\r\n\r\nedit: updated example","Date":{"Unix":1610575044},"Uri":"https://github.com/tailscale/tailscale/pull/1122","Title":"Provide example when format string is rate limited","Verbose":1,"GhIssueNumber":1122,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-783717621","CommentCount":0,"Text":"Currently the licence name \"MIT\" is in the `package.json` but it there isn't an actual licence in the repo. #136 would have added a license but now #146 is the future, and that PR clears up the license issue by not including `webpack-virtual-modules` in-repo, so it doesn't have to affect the `LICENSE` file.","Date":{"Unix":1610468256},"Uri":"https://github.com/sveltejs/svelte-loader/pull/148","Title":"Explicitly licence under MIT","Verbose":1,"GhIssueNumber":148,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-783708863","CommentCount":0,"Text":"This should help people updating know exactly what they need to do when updating.","Date":{"Unix":1610405693},"Uri":"https://github.com/non25/svelte-loader/pull/1","Title":"Document 3.0.0 release","Verbose":1,"GhIssueNumber":1,"GhRepo":"non25/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-783565726","CommentCount":0,"Text":"Per https://github.com/sveltejs/svelte-loader/pull/140#pullrequestreview-514153012, most Svelte repos are using Github Actions now, so let's use it here too. travis-ci.org is shutting down soon and reducing support for OSS repos too. This also has the advantage of testing on Github Actions.","Date":{"Unix":1610386797},"Uri":"https://github.com/sveltejs/svelte-loader/pull/147","Title":"Move CI to Github Actions","Verbose":1,"GhIssueNumber":147,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-777160903","CommentCount":4,"Text":"This is what every other DNS resolver I could find does, so `tsdns` should do it as well. This also helps avoid weird error messages about records don't exist being unimplemented, and thus fixes #848.\r\n\r\nnotes:\r\n- `go fmt` makes the indentation on lines 218/219 look wrong, but AFAIK there's no way to make `go fmt` handle it right.\r\n- `go.sum` wasn't correctly regenerated after 14af6773324c95488f9f0a68704e637c7d642e70, but I didn't include the updated version in this PR to avoid merge conflicts.","Date":{"Unix":1610493175},"Uri":"https://github.com/tailscale/tailscale/pull/1079","Title":"Return NOERROR instead of NOTIMP for most records","Verbose":1,"GhIssueNumber":1079,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-769256088","CommentCount":0,"Text":"This caused some confusion in issue #460, since usually raw format strings aren't printed directly. Hopefully by directly logging that they are intended to be raw format strings, this will be more clear. Rate limited format strings now look like\r\n\r\n```\r\n[RATE LIMITED] format string \"control: sendStatus: %s: %v\"\r\n```\r\n\r\nCloses #460.","Date":{"Unix":1608414555},"Uri":"https://github.com/tailscale/tailscale/pull/1032","Title":"Clarify that raw format strings are intentional","Verbose":1,"GhIssueNumber":1032,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-765726569","CommentCount":0,"Text":"This is actually already required, this just updates `go.mod` with that fact. If you try and fail to build Tailscale with an outdated Go version, an error like this is printed, which should hopefully make building Tailscale easier:\r\n```\r\nnote: module requires Go 1.15\r\n```","Date":{"Unix":1607906186},"Uri":"https://github.com/tailscale/tailscale/pull/1015","Title":"Require at least Go 1.15 in go.mod","Verbose":1,"GhIssueNumber":1015,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-764565108","CommentCount":0,"Text":"These removed lines ignore built files that don't exist anymore, and just serve to clutter up the `.gitignore` file. (I was initially confused when I saw those lines, since I (correctly) thought that the only Tailscale binaries were `tailscale` and `tailscaled`):\r\n- `taillogin` was removed in d052586\r\n- `relaynode` was removed in a56e853","Date":{"Unix":1607818319},"Uri":"https://github.com/tailscale/tailscale/pull/1011","Title":"Remove unused .gitignore lines","Verbose":1,"GhIssueNumber":1011,"GhRepo":"tailscale/tailscale"},
{"Type":"gh-pr","Id":"gh-pr-726816262","CommentCount":0,"Text":"This makes it so we test the same versions as [Svelte itself](https://github.com/sveltejs/svelte/blob/10f68289ba55a21d47e45af24175eaae5b04149a/.github/workflows/ci.yml#L9).","Date":{"Unix":1603312530},"Uri":"https://github.com/sveltejs/svelte-loader/pull/140","Title":"Test on Node v14","Verbose":1,"GhIssueNumber":140,"GhRepo":"sveltejs/svelte-loader"},
{"Type":"gh-pr","Id":"gh-pr-715724811","CommentCount":1,"Text":"The current link 404s, this fixes the post so the URL points to the actual forum thread.","Date":{"Unix":1601995468},"Uri":"https://github.com/rust-lang/blog.rust-lang.org/pull/704","Title":"Fix URL for internals thread on 1.47.0 post","Verbose":1,"GhIssueNumber":704,"GhRepo":"rust-lang/blog.rust-lang.org"},
{"Type":"gh-pr","Id":"gh-pr-712095614","CommentCount":0,"Text":"This prevents an extra vertical scrollbar from being displayed at the bottom when opening/closing the left sidebar. There is still a vertical scrollbar displayed when the text is wider than the left sidebar.\r\n\r\nBefore:\r\n<img src=\"https://user-images.githubusercontent.com/10530973/94712486-8b3b9100-0317-11eb-821f-792f388b59fa.gif\" width=\"400\"/> <img src=\"https://user-images.githubusercontent.com/10530973/94712492-8d055480-0317-11eb-9302-b99d3ec29d5a.gif\" width=\"400\"/>\r\n\r\nAfter:\r\n<img src=\"https://user-images.githubusercontent.com/10530973/94712530-9abada00-0317-11eb-92c3-8d0a5d8caa93.gif\" width=\"400\"/> <img src=\"https://user-images.githubusercontent.com/10530973/94712537-9d1d3400-0317-11eb-9e68-7ba36de8d6ce.gif\" width=\"400\"/>","Date":{"Unix":1601489742},"Uri":"https://github.com/athensresearch/athens/pull/391","Title":"fix(left-sidebar) extra scrollbar when opening left sidebar","Verbose":1,"GhIssueNumber":391,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-711400112","CommentCount":0,"Text":"This stops the creation time from showing as (unknown date) in the list of pages when a page was created via link.","Date":{"Unix":1601417944},"Uri":"https://github.com/athensresearch/athens/pull/386","Title":"Set creation time when a page is created via link","Verbose":1,"GhIssueNumber":386,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-694180442","CommentCount":0,"Text":"Since `jsbrain` refuses to process files with unrecognised parameters, it gave errors when handling these files. I am now able to successfully generate graphs for these files through `jsbrain_server`.","Date":{"Unix":1599357907},"Uri":"https://github.com/beeminder/road/pull/155","Title":"Remove old \"exprd\" parameter from test .bb files","Verbose":1,"GhIssueNumber":155,"GhRepo":"beeminder/road"},
{"Type":"gh-pr","Id":"gh-pr-618515985","CommentCount":1,"Text":"This incorporates several minor UI changes:\r\n- `style.cljs` is now formatted idomatically.\r\n- Fixed two lint warnings about the order of requires.\r\n- There is now a loading message while the JavaScript loads.\r\n- Alternating rows in the homepage table are light gray to make it easier to see across a row.\r\n- For some reason, some dates are stored `0` instead of an actual date. These are now displayed as \"(unknown date)\" in a dark gray.\r\n- Added a gap between links in the left sidebar.\r\n","Date":{"Unix":1589808100},"Uri":"https://github.com/athensresearch/athens/pull/57","Title":"Several minor UI improvements","Verbose":1,"GhIssueNumber":57,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-617832699","CommentCount":1,"Text":"See #10. This uses [Garden](https://github.com/noprompt/garden) for some basic styling. Now, the body uses the browser's default sans-serif font, instead of not specifying one (some browsers use Time New Roman in this case, some use Arial, some use Tinos (a Times New Roman clone)). Also, it makes sure there is enough room for the dates on the home page.\r\nI'm not very experienced with Clojure, but it does appear to work correctly to me.\r\n\r\n![image](https://user-images.githubusercontent.com/10530973/81877876-4b386500-9554-11ea-9814-37c228677579.png)\r\n","Date":{"Unix":1589459046},"Uri":"https://github.com/athensresearch/athens/pull/54","Title":"Add basic styling","Verbose":1,"GhIssueNumber":54,"GhRepo":"athensresearch/athens"},
{"Type":"gh-pr","Id":"gh-pr-604337128","CommentCount":2,"Text":"This adds `Roman::value_checked`. Unlike `Roman::value`, this returns an `Err` instead of panicking. I also added some tests to ensure it behaves correctly.","Date":{"Unix":1587821322},"Uri":"https://github.com/ogham/rust-numerals/pull/5","Title":"Add Roman::value_checked","Verbose":1,"GhIssueNumber":5,"GhRepo":"ogham/rust-numerals"},
{"Type":"gh-pr","Id":"gh-pr-589671692","CommentCount":1,"Text":"Adds documentation examples for ``JsonValue::members`` and ``JsonValue::entries``.","Date":{"Unix":1585518173},"Uri":"https://github.com/maciejhirsz/json-rust/pull/182","Title":"Add documentation examples for members and entries","Verbose":1,"GhIssueNumber":182,"GhRepo":"maciejhirsz/json-rust"},
{"Type":"gh-pr","Id":"gh-pr-544047268","CommentCount":1,"Text":"","Date":{"Unix":1577820788},"Uri":"https://github.com/Hacker0x01/docs.hackerone.com/pull/155","Title":"Remove stray double quote","Verbose":1,"GhIssueNumber":155,"GhRepo":"Hacker0x01/docs.hackerone.com"},
{"Type":"gh-pr","Id":"gh-pr-470708973","CommentCount":0,"Text":"","Date":{"Unix":1563653287},"Uri":"https://github.com/MatthewDLudwig/NimiqVoteServer/pull/1","Title":"Add info and usage instructions to README","Verbose":1,"GhIssueNumber":1,"GhRepo":"MatthewDLudwig/NimiqVoteServer"},
{"Type":"gh-pr","Id":"gh-pr-463258847","CommentCount":0,"Text":"","Date":{"Unix":1562172094},"Uri":"https://github.com/steemit/steem/pull/3393","Title":"Several documentation improvements","Verbose":1,"GhIssueNumber":3393,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-463248675","CommentCount":0,"Text":"Closes #3384.","Date":{"Unix":1562172266},"Uri":"https://github.com/steemit/steem/pull/3392","Title":"Impact @steem.dao by sps_fund operation","Verbose":1,"GhIssueNumber":3392,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-462856309","CommentCount":1,"Text":"It got broke when it was moved to the ``devs`` directory.","Date":{"Unix":1563909832},"Uri":"https://github.com/steemit/steem/pull/3388","Title":"Fix URI to testing.md","Verbose":1,"GhIssueNumber":3388,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-451093260","CommentCount":0,"Text":"","Date":{"Unix":1559433647},"Uri":"https://github.com/nimiq/nimiq-utils/pull/23","Title":"Add icemining pool","Verbose":1,"GhIssueNumber":23,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-450561347","CommentCount":0,"Text":"Currently the net module doesn't compile when the ``--taintMode:on`` flag is passed to the compiler. Not well tested, I've only tried it by patching my local stdlib files.","Date":{"Unix":1559378681},"Uri":"https://github.com/nim-lang/Nim/pull/11360","Title":"Make net module compile with --taintMode:on","Verbose":1,"GhIssueNumber":11360,"GhRepo":"nim-lang/Nim"},
{"Type":"gh-pr","Id":"gh-pr-448391198","CommentCount":1,"Text":"This was causing the code not to compile on recent Nim.","Date":{"Unix":1595939546},"Uri":"https://github.com/stisa/webgl/pull/2","Title":"Fix logging code on latest Nim","Verbose":1,"GhIssueNumber":2,"GhRepo":"stisa/webgl"},
{"Type":"gh-pr","Id":"gh-pr-430708687","CommentCount":0,"Text":"SSH URLs only work for those with push access to this repo, HTTPS urls work for everyone.","Date":{"Unix":1554977652},"Uri":"https://github.com/nimiq/hub/pull/201","Title":"Make clone URL work for those without push access","Verbose":1,"GhIssueNumber":201,"GhRepo":"nimiq/hub"},
{"Type":"gh-pr","Id":"gh-pr-411189474","CommentCount":1,"Text":"Closes #60.","Date":{"Unix":1550411423},"Uri":"https://github.com/nim-lang/opengl/pull/61","Title":"Fix x11 import","Verbose":1,"GhIssueNumber":61,"GhRepo":"nim-lang/opengl"},
{"Type":"gh-pr","Id":"gh-pr-381954360","CommentCount":0,"Text":"Improves the manifest read by Chrome.","Date":{"Unix":1542556294},"Uri":"https://github.com/MattyIce/steem-keychain/pull/54","Title":"Improve manifest","Verbose":1,"GhIssueNumber":54,"GhRepo":"MattyIce/steem-keychain"},
{"Type":"gh-pr","Id":"gh-pr-374641349","CommentCount":0,"Text":"Improves the language used in ``README.md``","Date":{"Unix":1540645422},"Uri":"https://github.com/WebDollar/Node-WebDollar/pull/212","Title":"Improve language used in README","Verbose":1,"GhIssueNumber":212,"GhRepo":"WebDollar/Node-WebDollar"},
{"Type":"gh-pr","Id":"gh-pr-374640162","CommentCount":0,"Text":"Improves formatting consistency for geolocation address object","Date":{"Unix":1540645438},"Uri":"https://github.com/WebDollar/Node-WebDollar/pull/211","Title":"Improve formatting consistency for geolocation","Verbose":1,"GhIssueNumber":211,"GhRepo":"WebDollar/Node-WebDollar"},
{"Type":"gh-pr","Id":"gh-pr-369752637","CommentCount":1,"Text":"See https://github.com/steemit/condenser/pull/3058. This account has been \"deleted\" (blacklisted by Condenser), because the user wanted their account closed.","Date":{"Unix":1543251920},"Uri":"https://github.com/steemit/redeemer-irredeemables/pull/35","Title":"Add \"deleted\" account","Verbose":1,"GhIssueNumber":35,"GhRepo":"steemit/redeemer-irredeemables"},
{"Type":"gh-pr","Id":"gh-pr-367456490","CommentCount":0,"Text":"This adds the UP wallet. UP tokens are created by @steem-1up sending ``custom_json`` operations with an id of ``1up``. Moderators can make posts containing ``!1upsend 123.456``, and @steem-1up will automatically detect and broadcast the token creation, as soon as an admin upvotes the moderator's comment (with any weight) or approves it from an admin UI on the website. Note that the admin UI may miss a post if the state cache is cleared, or if the server isn't running when the post is made. However, voting the moderator's post should always work. \r\n\r\nOn the admin page, it requires the posting key of @steem-1up, to broadcast the ``custom_json`` op.\r\n\r\nAdditionally, I added a script to pay out to delegators, based on [postpromoter's script](https://github.com/MattyIce/postpromoter/blob/master/delegators.js), as `delegators.js`. Run it for details of how to use it. Note that delegation payouts are rounded to have 5 decimal places. This shouldn't make much of a difference to payouts. It will send 200000 UP total tokens to delegators, based on how much they have delegated. (if you've delegated 50SP out of 100SP total, you will get 100k UP tokens).\r\n\r\n## Screenshots\r\n\r\n### Admin page\r\n![Admin page](https://user-images.githubusercontent.com/10530973/46571571-41e12280-c945-11e8-9b40-0418d66a0370.png)\r\n\r\n### User wallet page\r\n![Wallet page](https://user-images.githubusercontent.com/10530973/46571581-5a513d00-c945-11e8-9aa8-1a8d994d933a.png)\r\n\r\n### Top UP holders (lists all of them)\r\n![Top holders](https://user-images.githubusercontent.com/10530973/46571583-65a46880-c945-11e8-95d4-13c0c142b955.png)","Date":{"Unix":1540879520},"Uri":"https://github.com/therealFlauwy/1UP/pull/51","Title":"Add UP token support","Verbose":1,"GhIssueNumber":51,"GhRepo":"therealFlauwy/1UP"},
{"Type":"gh-pr","Id":"gh-pr-360587229","CommentCount":1,"Text":"Fixes #98\r\n\r\n### Changes\r\n\r\nSummary of changes you made.\r\n\r\n* Option to enable beta is removed\r\n* Users aren't redirected if they have beta enabled\r\n\r\n### Test plan\r\n\r\nExplain how to test changes you made.\r\n\r\n* [ ] Go to settings page\r\n* [ ] Try (and fail) to enable beta mode","Date":{"Unix":1537090167},"Uri":"https://github.com/surpassinggoogle/UlogsV2/pull/122","Title":"Don't let users enable beta option","Verbose":1,"GhIssueNumber":122,"GhRepo":"surpassinggoogle/UlogsV2"},
{"Type":"gh-pr","Id":"gh-pr-360109649","CommentCount":0,"Text":"","Date":{"Unix":1536894062},"Uri":"https://github.com/bonustrack/steemscript/pull/21","Title":"Add Ulogs to list of apps","Verbose":1,"GhIssueNumber":21,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-358293146","CommentCount":0,"Text":"Fixes a typo in the filename of the Git gui**l**delines file","Date":{"Unix":1536599104},"Uri":"https://github.com/steemit/steem/pull/2880","Title":"Fix typo","Verbose":1,"GhIssueNumber":2880,"GhRepo":"steemit/steem"},
{"Type":"gh-pr","Id":"gh-pr-354433694","CommentCount":0,"Text":"Changes from v1.0.2:\r\n- Adds Partiko, SteemPress, Tasteem, and APPICS info\r\n- Adds SteemPeak info and URL scheme\r\n- Removes trailing slash from Steemhunt, Steemia, Memeit.LOL, and Hede.io homepage URLs \r\n\r\nCould you deploy this to NPM please?","Date":{"Unix":1538561930},"Uri":"https://github.com/bonustrack/steemscript/pull/18","Title":"Bump version to 1.1.0","Verbose":1,"GhIssueNumber":18,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-345860977","CommentCount":0,"Text":"mineNIM website: https://minenim.org/","Date":{"Unix":1533372079},"Uri":"https://github.com/nimiq/nimiq-utils/pull/14","Title":"Add mineNIM Pool and Nimiq Tip Bot to address book","Verbose":1,"GhIssueNumber":14,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-342527475","CommentCount":1,"Text":"Adds changes from #15, and bumps up the version number from 1.0.1 to 1.0.2. Could you deploy this to NPM, please?","Date":{"Unix":1531994115},"Uri":"https://github.com/bonustrack/steemscript/pull/16","Title":"Release 1.0.2","Verbose":1,"GhIssueNumber":16,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-342414217","CommentCount":0,"Text":"Makes Zappl a template. \r\n\r\nFor steemit/condenser#2947.","Date":{"Unix":1531933760},"Uri":"https://github.com/bonustrack/steemscript/pull/15","Title":"Make Zappl templated","Verbose":1,"GhIssueNumber":15,"GhRepo":"bonustrack/steemscript"},
{"Type":"gh-pr","Id":"gh-pr-329255297","CommentCount":0,"Text":"Adds Nimiq Foundation and Charity to address book.","Date":{"Unix":1529314663},"Uri":"https://github.com/nimiq/nimiq-utils/pull/11","Title":"Add Nimiq Foundation and Charity to address book","Verbose":1,"GhIssueNumber":11,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-326672023","CommentCount":0,"Text":"Adds my faucet to the address book.","Date":{"Unix":1527586517},"Uri":"https://github.com/nimiq/nimiq-utils/pull/10","Title":"Add Nimiq Faucet to address book","Verbose":1,"GhIssueNumber":10,"GhRepo":"nimiq/nimiq-utils"},
{"Type":"gh-pr","Id":"gh-pr-326327251","CommentCount":0,"Text":"","Date":{"Unix":1528022561},"Uri":"https://github.com/nimiq/community/pull/92","Title":"Escape path on windows for example code, with installer","Verbose":1,"GhIssueNumber":92,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320994754","CommentCount":0,"Text":"Should be ``relayTransaction``, ``mempool.pushTransaction`` is for light clients.","Date":{"Unix":1525748199},"Uri":"https://github.com/nimiq/community/pull/89","Title":"Fix code in latest post","Verbose":1,"GhIssueNumber":89,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320982461","CommentCount":0,"Text":"Basically just [this post](https://smittyvb.github.io/nimiq-dev-tips//2018/05/07/sending-nim.html) by me.","Date":{"Unix":1525735818},"Uri":"https://github.com/nimiq/community/pull/88","Title":"Add post: Sending NIM with the Nimiq API","Verbose":1,"GhIssueNumber":88,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-320123563","CommentCount":0,"Text":"Fixes a few more files, using the link from 36589bd. No more #secret-nimiq-chat.","Date":{"Unix":1525412644},"Uri":"https://github.com/nimiq/community/pull/87","Title":"Update discord link in more files","Verbose":1,"GhIssueNumber":87,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-315652659","CommentCount":0,"Text":"I made [a faucet](https://nimiq-faucet.surge.sh/).","Date":{"Unix":1524582914},"Uri":"https://github.com/nimiq/community/pull/85","Title":"Add Nimiq Faucet","Verbose":1,"GhIssueNumber":85,"GhRepo":"nimiq/community"},
{"Type":"gh-pr","Id":"gh-pr-314853694","CommentCount":0,"Text":"Fixes dead links in README, as nimiq.com/wallet is now safe.nimiq.com, and the miner has moved to miner.nimiq.com","Date":{"Unix":1526927737},"Uri":"https://github.com/nimiq-network/developer-reference/pull/21","Title":"Fix 404 links in README","Verbose":1,"GhIssueNumber":21,"GhRepo":"nimiq-network/developer-reference"},
{"Type":"gh-pr","Id":"gh-pr-278645331","CommentCount":3,"Text":"netify.chainbb.com, doesn't exist. It appears that it used to be some sort of testing domain, and is no longer active. It's still mentioned in a meta tag, though. This fixes it. Having the wrong meta tags will make Facebook and Twitter, the main users of Open Graph data, misunderstand, or be confused by, the meta tags on ChainBB. \r\n","Date":{"Unix":1512205072},"Uri":"https://github.com/aaroncox/chainbb-frontend/pull/8","Title":"Use correct domain in meta tag","Verbose":1,"GhIssueNumber":8,"GhRepo":"aaroncox/chainbb-frontend"},
{"Type":"gh-pr","Id":"gh-pr-276789127","CommentCount":2,"Text":"Changes:\r\n- If username being attempted to have money transfer to, has a username of less than 3 characters, say that the username is too short.\r\n- Same thing for >16 characters.\r\n\r\n\r\n","Date":{"Unix":1512830906},"Uri":"https://github.com/busyorg/busy/pull/1115","Title":"More accurate error messages for Steem/SBD transfers","Verbose":1,"GhIssueNumber":1115,"GhRepo":"busyorg/busy"},
{"Type":"gh-pr","Id":"gh-pr-275889258","CommentCount":3,"Text":"This adds steemd.com to the sidebar, on the account page.\r\n![Account sidebar image.](https://vgy.me/jMYmRM.png)","Date":{"Unix":1511305632},"Uri":"https://github.com/aaroncox/chainbb-frontend/pull/7","Title":"Add steemd.com to \"View this account on...\" account sidebar ","Verbose":1,"GhIssueNumber":7,"GhRepo":"aaroncox/chainbb-frontend"},
{"Type":"gh-pr","Id":"gh-pr-271187161","CommentCount":4,"Text":"Only allow one vote per person","Date":{"Unix":1509797132},"Uri":"https://github.com/Chaosthebot/chaos2/pull/5","Title":"Fix bug: Only allow one vote per person","Verbose":1,"GhIssueNumber":5,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271186950","CommentCount":4,"Text":"Added the correct URLs","Date":{"Unix":1509796802},"Uri":"https://github.com/Chaosthebot/chaos2/pull/4","Title":"Fix package.json","Verbose":1,"GhIssueNumber":4,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271150137","CommentCount":4,"Text":"","Date":{"Unix":1509754436},"Uri":"https://github.com/Chaosthebot/chaos2/pull/3","Title":"Add newline","Verbose":1,"GhIssueNumber":3,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271128226","CommentCount":6,"Text":"","Date":{"Unix":1509746823},"Uri":"https://github.com/Chaosthebot/chaos2/pull/2","Title":"Fix README","Verbose":1,"GhIssueNumber":2,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-271127279","CommentCount":4,"Text":"Adds a title","Date":{"Unix":1509745748},"Uri":"https://github.com/Chaosthebot/chaos2/pull/1","Title":"Add title","Verbose":1,"GhIssueNumber":1,"GhRepo":"Chaosthebot/chaos2"},
{"Type":"gh-pr","Id":"gh-pr-236992174","CommentCount":5,"Text":"","Date":{"Unix":1497915614},"Uri":"https://github.com/Chaosthebot/Chaos/pull/560","Title":"Update README to indicate that we're dead.","Verbose":1,"GhIssueNumber":560,"GhRepo":"Chaosthebot/Chaos"},
{"Type":"gh-pr","Id":"gh-pr-232355569","CommentCount":9,"Text":"Makes the text \"chaosbot's logs\" in the README a link to the logs, where people can find the meritocracy information. ","Date":{"Unix":1496183464},"Uri":"https://github.com/Chaosthebot/Chaos/pull/403","Title":"Linkify \"ChaoBot's logs\"","Verbose":1,"GhIssueNumber":403,"GhRepo":"Chaosthebot/Chaos"},
{"Type":"gh-pr","Id":"gh-pr-231895573","CommentCount":4,"Text":"Before, this code used Object.values, which is only supported in Chrome and Firefox. This new code works replaces the line by mapping the keys array to the variable with all the data, to get the values for each key, causing the same effect. This is supported in almost all modern browsers, and IE9+. ","Date":{"Unix":1496054534},"Uri":"https://github.com/Chaosthebot/Chaos/pull/343","Title":"More browser support for voters.html","Verbose":1,"GhIssueNumber":343,"GhRepo":"Chaosthebot/Chaos"},
{"Type":"video","Thumb":"/yt-thumbs/5fh2oeugfbk.jpg","Uri":"https://youtube.com/watch?v=5fh2oeugfbk","Title":"Log-me-in challenge for Google CTF 2020","Date":{"Unix":1600041600},"Id":"yt-vid-5fh2oeugfbk"},
{"Type":"video","Thumb":"/yt-thumbs/GT6qpwlFhq0.jpg","Uri":"https://youtube.com/watch?v=GT6qpwlFhq0","Title":"How big is the set of subsets?","Date":{"Unix":1611014400},"Id":"yt-vid-GT6qpwlFhq0"},
{"Type":"video","Thumb":"/yt-thumbs/9sXEBzI1R5Q.jpg","Uri":"https://youtube.com/watch?v=9sXEBzI1R5Q","Title":"What's the Pareto frontier?","Date":{"Unix":1609718400},"Id":"yt-vid-9sXEBzI1R5Q"},
{"Type":"video","Thumb":"/yt-thumbs/FwpF0fqh7uU.jpg","Uri":"https://youtube.com/watch?v=FwpF0fqh7uU","Title":"TagTime Web - basic usage","Date":{"Unix":1597795200},"Id":"yt-vid-FwpF0fqh7uU"},
{"Type":"video","Thumb":"/yt-thumbs/yr-rNnk-4Gw.jpg","Uri":"https://youtube.com/watch?v=yr-rNnk-4Gw","Title":"Ship lock","Date":{"Unix":1600128000},"Id":"yt-vid-yr-rNnk-4Gw"},
{"Type":"video","Thumb":"/yt-thumbs/hWXPaYslq7k.jpg","Uri":"https://youtube.com/watch?v=hWXPaYslq7k","Title":"Taking a screenshot of a scrolling webpage in Chrome","Date":{"Unix":1597276800},"Id":"yt-vid-hWXPaYslq7k"},
{"Type":"video","Thumb":"/yt-thumbs/46AKWNOJ3-Y.jpg","Uri":"https://youtube.com/watch?v=46AKWNOJ3-Y","Title":"How HOTP and TOTP work","Date":{"Unix":1604102400},"Id":"yt-vid-46AKWNOJ3-Y"},
{"Type":"video","Thumb":"/yt-thumbs/aLYKd7h7vgY.jpg","Uri":"https://youtube.com/watch?v=aLYKd7h7vgY","Title":"How Snowflake IDs work","Date":{"Unix":1601510400},"Id":"yt-vid-aLYKd7h7vgY"},
{"Type":"video","Thumb":"/yt-thumbs/z7OpLXpj0xg.jpg","Uri":"https://youtube.com/watch?v=z7OpLXpj0xg","Title":"Transition with object across the screen in Blender","Date":{"Unix":1599177600},"Id":"yt-vid-z7OpLXpj0xg"},
{"Type":"video","Thumb":"/yt-thumbs/cJpE018QEkQ.jpg","Uri":"https://youtube.com/watch?v=cJpE018QEkQ","Title":"What is stochastic time tracking?","Date":{"Unix":1598313600},"Id":"yt-vid-cJpE018QEkQ"},
{"Type":"video","Thumb":"/yt-thumbs/HE-t5aj8BvA.jpg","Uri":"https://youtube.com/watch?v=HE-t5aj8BvA","Title":"UUIDv3/5 generation","Date":{"Unix":1593734400},"Id":"yt-vid-HE-t5aj8BvA"},
{"Type":"video","Thumb":"/yt-thumbs/THrlm3_c_YA.jpg","Uri":"https://youtube.com/watch?v=THrlm3_c_YA","Title":"Understanding Polish notation","Date":{"Unix":1584489600},"Id":"yt-vid-THrlm3_c_YA"},
{"Type":"video","Thumb":"/yt-thumbs/LnNSImhEOpE.jpg","Uri":"https://youtube.com/watch?v=LnNSImhEOpE","Title":"Visualizing expression parsing","Date":{"Unix":1617580800},"Id":"yt-vid-LnNSImhEOpE"},
{"Type":"video","Thumb":"/yt-thumbs/NV4IQLs-WIs.jpg","Uri":"https://youtube.com/watch?v=NV4IQLs-WIs","Title":"UUIDv4 in 40 seconds","Date":{"Unix":1597017600},"Id":"yt-vid-NV4IQLs-WIs"},
{"Type":"video","Thumb":"/yt-thumbs/-xAFdVqwTn4.jpg","Uri":"https://youtube.com/watch?v=-xAFdVqwTn4","Title":"What changed in Google Drive on Sept. 30","Date":{"Unix":1595894400},"Id":"yt-vid--xAFdVqwTn4"},
{"Type":"video","Thumb":"/yt-thumbs/ZxwM6nqHlpM.jpg","Uri":"https://youtube.com/watch?v=ZxwM6nqHlpM","Title":"1 + 1 = 2","Date":{"Unix":1574121600},"Id":"yt-vid-ZxwM6nqHlpM"},
{"Type":"video","Thumb":"/yt-thumbs/ezx1c7W1ngQ.jpg","Uri":"https://youtube.com/watch?v=ezx1c7W1ngQ","Title":"Falling cloth","Date":{"Unix":1593388800},"Id":"yt-vid-ezx1c7W1ngQ"},
{"Type":"video","Thumb":"/yt-thumbs/HlVReQiB_Wk.jpg","Uri":"https://youtube.com/watch?v=HlVReQiB_Wk","Title":"Ball of hair","Date":{"Unix":1598140800},"Id":"yt-vid-HlVReQiB_Wk"},
{"Type":"video","Thumb":"/yt-thumbs/dOQMqa86NF0.jpg","Uri":"https://youtube.com/watch?v=dOQMqa86NF0","Title":"Using proxies in Blender 2.82+ VSE","Date":{"Unix":1585008000},"Id":"yt-vid-dOQMqa86NF0"},
{"Type":"video","Thumb":"/yt-thumbs/_KzQqfhQsck.jpg","Uri":"https://youtube.com/watch?v=_KzQqfhQsck","Title":"Why perfect squares have an odd number of factors","Date":{"Unix":1585785600},"Id":"yt-vid-_KzQqfhQsck"},
{"Type":"video","Thumb":"/yt-thumbs/jqorVoYEd68.jpg","Uri":"https://youtube.com/watch?v=jqorVoYEd68","Title":"The Rendezvous Problem","Date":{"Unix":1576627200},"Id":"yt-vid-jqorVoYEd68"},
{"Type":"video","Thumb":"/yt-thumbs/A-nDTsGLYg4.jpg","Uri":"https://youtube.com/watch?v=A-nDTsGLYg4","Title":"Creating a YouTube series playlist","Date":{"Unix":1600041600},"Id":"yt-vid-A-nDTsGLYg4"},
{"Type":"video","Thumb":"/yt-thumbs/gQxcldjmwaM.jpg","Uri":"https://youtube.com/watch?v=gQxcldjmwaM","Title":"Sound of reversing an array in-place","Date":{"Unix":1600300800},"Id":"yt-vid-gQxcldjmwaM"},
{"Type":"video","Thumb":"/yt-thumbs/30jlrRMbhcw.jpg","Uri":"https://youtube.com/watch?v=30jlrRMbhcw","Title":"Sound of search algorithms","Date":{"Unix":1600300800},"Id":"yt-vid-30jlrRMbhcw"},
{"Type":"video","Thumb":"/yt-thumbs/RskJI6P1Y1U.jpg","Uri":"https://youtube.com/watch?v=RskJI6P1Y1U","Title":"Enter the honeycomb","Date":{"Unix":1598745600},"Id":"yt-vid-RskJI6P1Y1U"},
{"Type":"video","Thumb":"/yt-thumbs/XDB0xra1gos.jpg","Uri":"https://youtube.com/watch?v=XDB0xra1gos","Title":"Rippling water","Date":{"Unix":1603065600},"Id":"yt-vid-XDB0xra1gos"},
{"Type":"video","Thumb":"/yt-thumbs/lbFb6VyWBS8.jpg","Uri":"https://youtube.com/watch?v=lbFb6VyWBS8","Title":"3 shuffling algorithms with sound","Date":{"Unix":1600214400},"Id":"yt-vid-lbFb6VyWBS8"},
{"Type":"video","Thumb":"/yt-thumbs/Y77Z8OKjIhQ.jpg","Uri":"https://youtube.com/watch?v=Y77Z8OKjIhQ","Title":"Turning gears","Date":{"Unix":1603238400},"Id":"yt-vid-Y77Z8OKjIhQ"},
{"Type":"video","Thumb":"/yt-thumbs/kfoxKfD2BwM.jpg","Uri":"https://youtube.com/watch?v=kfoxKfD2BwM","Title":"Hair","Date":{"Unix":1603756800},"Id":"yt-vid-kfoxKfD2BwM"},
{"Type":"video","Thumb":"/yt-thumbs/pmbbvVQ90Sw.jpg","Uri":"https://youtube.com/watch?v=pmbbvVQ90Sw","Title":"Clothing falling through sphere","Date":{"Unix":1603756800},"Id":"yt-vid-pmbbvVQ90Sw"},
{"Type":"video","Thumb":"/yt-thumbs/7tGBcc5f0uw.jpg","Uri":"https://youtube.com/watch?v=7tGBcc5f0uw","Title":"POV: rolling down a staircase","Date":{"Unix":1602115200},"Id":"yt-vid-7tGBcc5f0uw"},
{"Type":"video","Thumb":"/yt-thumbs/F8kOGjZj_gI.jpg","Uri":"https://youtube.com/watch?v=F8kOGjZj_gI","Title":"Ease-in-out function alpha values","Date":{"Unix":1605139200},"Id":"yt-vid-F8kOGjZj_gI"},
{"Type":"video","Thumb":"/yt-thumbs/pVjg4L9EHlI.jpg","Uri":"https://youtube.com/watch?v=pVjg4L9EHlI","Title":"Shaky cam","Date":{"Unix":1603929600},"Id":"yt-vid-pVjg4L9EHlI"},
{"Type":"video","Thumb":"/yt-thumbs/YDNZTY7nC3Y.jpg","Uri":"https://youtube.com/watch?v=YDNZTY7nC3Y","Title":"Balls falling down stairs","Date":{"Unix":1602028800},"Id":"yt-vid-YDNZTY7nC3Y"},
{"Type":"video","Thumb":"/yt-thumbs/1Wc__s2DQOk.jpg","Uri":"https://youtube.com/watch?v=1Wc__s2DQOk","Title":"Shaky cam 2","Date":{"Unix":1604016000},"Id":"yt-vid-1Wc__s2DQOk"},
{"Type":"video","Thumb":"/yt-thumbs/nhUxBBTKKe8.jpg","Uri":"https://youtube.com/watch?v=nhUxBBTKKe8","Title":"Liquid thing","Date":{"Unix":1605398400},"Id":"yt-vid-nhUxBBTKKe8"},
{"Type":"video","Thumb":"/yt-thumbs/GZBhOsEl45k.jpg","Uri":"https://youtube.com/watch?v=GZBhOsEl45k","Title":"Rubies spinning","Date":{"Unix":1605571200},"Id":"yt-vid-GZBhOsEl45k"},
{"Type":"video","Thumb":"/yt-thumbs/n_gVHdbsTQg.jpg","Uri":"https://youtube.com/watch?v=n_gVHdbsTQg","Title":"2D bouncing ball","Date":{"Unix":1606089600},"Id":"yt-vid-n_gVHdbsTQg"},
{"Type":"video","Thumb":"/yt-thumbs/KZSqyIm4vxs.jpg","Uri":"https://youtube.com/watch?v=KZSqyIm4vxs","Title":"Astroid","Date":{"Unix":1609113600},"Id":"yt-vid-KZSqyIm4vxs"},
{"Type":"video","Thumb":"/yt-thumbs/OKSsWLsWS_o.jpg","Uri":"https://youtube.com/watch?v=OKSsWLsWS_o","Title":"cool landscape thingie","Date":{"Unix":1606089600},"Id":"yt-vid-OKSsWLsWS_o"},
{"Type":"video","Thumb":"/yt-thumbs/RENtuw4RV0Y.jpg","Uri":"https://youtube.com/watch?v=RENtuw4RV0Y","Title":"Colliding metacubes","Date":{"Unix":1609977600},"Id":"yt-vid-RENtuw4RV0Y"},
{"Type":"video","Thumb":"/yt-thumbs/j2rpDFtM3nM.jpg","Uri":"https://youtube.com/watch?v=j2rpDFtM3nM","Title":"Sun rise and set","Date":{"Unix":1608940800},"Id":"yt-vid-j2rpDFtM3nM"},
{"Type":"video","Thumb":"/yt-thumbs/Ec6kQBiPARA.jpg","Uri":"https://youtube.com/watch?v=Ec6kQBiPARA","Title":"Falling cones","Date":{"Unix":1610064000},"Id":"yt-vid-Ec6kQBiPARA"},
{"Type":"video","Thumb":"/yt-thumbs/z4RIghoansU.jpg","Uri":"https://youtube.com/watch?v=z4RIghoansU","Title":"Softbody fail","Date":{"Unix":1610236800},"Id":"yt-vid-z4RIghoansU"},
{"Type":"video","Thumb":"/yt-thumbs/ewylHewWQT0.jpg","Uri":"https://youtube.com/watch?v=ewylHewWQT0","Title":"Deflated ball","Date":{"Unix":1610323200},"Id":"yt-vid-ewylHewWQT0"},
{"Type":"video","Thumb":"/yt-thumbs/YaRrIqStzt0.jpg","Uri":"https://youtube.com/watch?v=YaRrIqStzt0","Title":"Brightening light","Date":{"Unix":1610150400},"Id":"yt-vid-YaRrIqStzt0"},
{"Type":"video","Thumb":"/yt-thumbs/FJNcYaO0bPI.jpg","Uri":"https://youtube.com/watch?v=FJNcYaO0bPI","Title":"Log-me-in: behind the scenes","Date":{"Unix":1610496000},"Id":"yt-vid-FJNcYaO0bPI"},
{"Type":"video","Thumb":"/yt-thumbs/BDFbDfISLB0.jpg","Uri":"https://youtube.com/watch?v=BDFbDfISLB0","Title":"Waves in horizon","Date":{"Unix":1610582400},"Id":"yt-vid-BDFbDfISLB0"},
{"Type":"video","Thumb":"/yt-thumbs/Dp0yrRK8qcE.jpg","Uri":"https://youtube.com/watch?v=Dp0yrRK8qcE","Title":"Ball falling down stairs on a windy day","Date":{"Unix":1610323200},"Id":"yt-vid-Dp0yrRK8qcE"},
{"Type":"video","Thumb":"/yt-thumbs/EywQ8MMU7cE.jpg","Uri":"https://youtube.com/watch?v=EywQ8MMU7cE","Title":"Sigma notation","Date":{"Unix":1610841600},"Id":"yt-vid-EywQ8MMU7cE"},
{"Type":"video","Thumb":"/yt-thumbs/34ukgzluq_k.jpg","Uri":"https://youtube.com/watch?v=34ukgzluq_k","Title":"Hexalight","Date":{"Unix":1611187200},"Id":"yt-vid-34ukgzluq_k"},
{"Type":"video","Thumb":"/yt-thumbs/6fEKuFbxZnU.jpg","Uri":"https://youtube.com/watch?v=6fEKuFbxZnU","Title":"Ease-in-out params in Desmos","Date":{"Unix":1610841600},"Id":"yt-vid-6fEKuFbxZnU"},
{"Type":"video","Thumb":"/yt-thumbs/X42MZqXHXDM.jpg","Uri":"https://youtube.com/watch?v=X42MZqXHXDM","Title":"Compressing images with Paeth prediction","Date":{"Unix":1632528000},"Id":"yt-vid-X42MZqXHXDM"},
{"Type":"video","Thumb":"/yt-thumbs/YilTK9NtvnI.jpg","Uri":"https://youtube.com/watch?v=YilTK9NtvnI","Title":"Fall ball","Date":{"Unix":1611532800},"Id":"yt-vid-YilTK9NtvnI"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1633541274},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28775787","Id":"hn-post-28775787","Text":"From 2014 (when NFC support was introduced) until 2017 (when iOS 11 was released) there was no way for 3rd party apps to use NFC on iOS at all; only apps by Apple could use NFC.<p>There is still no technical ability for 3rd party payment apps to be able to be used from the lock screen like Apple Pay, and according to other comments Apple Pay has some special hardware access (to be able to work faster?)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1633278040},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28738286","Id":"hn-post-28738286","Text":"The intention of the parties was that the smart contract was enforced exactly as the smart contract was written: if that turns out to be unexpectedly disadvantageous for a party, then that&#x27;s their problem."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1633122389},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28723381","Id":"hn-post-28723381","Title":"Practical Time Machines","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1632788776},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28677869","Id":"hn-post-28677869","Text":"I used to be a subscriber (until my subscription lapsed, but I would have renewed if there was a reminder email!), I went for the cheapest plan. (also if you pay with bitcoin you get a fun message after subscribing)"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1632343487},"Comments":3,"Uri":"https://news.ycombinator.com/item?id=28621535","Id":"hn-post-28621535","Title":"Provision TLS certificates for your internal services","Score":37},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1632270590},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28611776","Id":"hn-post-28611776","Text":"COPPA has a very broad definition of personal information (see <a href=\"https:&#x2F;&#x2F;www.ecfr.gov&#x2F;current&#x2F;title-16&#x2F;part-312\" rel=\"nofollow\">https:&#x2F;&#x2F;www.ecfr.gov&#x2F;current&#x2F;title-16&#x2F;part-312</a>). &quot;Online contact information&quot; counts as personal information, and that includes email addresses, IRC nicks, IM usernames, etc. Some other things that count as personal information under COPPA are IP addresses, the user&#x27;s voice, and full names. Virtually all online services with user accounts collect personal information as defined by COPPA."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1631549594},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28513269","Id":"hn-post-28513269","Title":"Connecting the iDOTs","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1631472471},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28503677","Id":"hn-post-28503677","Title":"We get stuck opening the socket","Score":3},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1631128507},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28461742","Id":"hn-post-28461742","Title":"Outdated Answers: accepted answer is now unpinned on Stack Overflow","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1630929280},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28432793","Id":"hn-post-28432793","Text":"If they did a <i>good</i> job hiding it then you wouldn&#x27;t know about it. For every case like this where they made a obvious mistake, there are cases where they didn&#x27;t, and nobody noticed. But you only tend to hear about the ones with obvious mistakes."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1630671818},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28403205","Id":"hn-post-28403205","Text":"I&#x27;m not sure what is going on with UBS, but I would think that they would similarly allow vaccinated people to also work from home if they wish."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1630601162},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28394306","Id":"hn-post-28394306","Title":"Application compatibility: Cost of forgetting to specify a calling convention","Score":3},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1630281697},"Comments":7,"Uri":"https://news.ycombinator.com/item?id=28351631","Id":"hn-post-28351631","Title":"Just over 100 days of Libera Chat","Score":32},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1630278882},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28351369","Id":"hn-post-28351369","Text":"They put a offer to distribute the source code on their legal page: <a href=\"https:&#x2F;&#x2F;orders.thehelm.com&#x2F;pages&#x2F;legal#open-source\" rel=\"nofollow\">https:&#x2F;&#x2F;orders.thehelm.com&#x2F;pages&#x2F;legal#open-source</a>: &quot;You may request a copy of the source by e-mailing:  support@thehelm.com with &quot;Source for Helm Personal Server&quot; in the subject line. This offer is valid to anyone in receipt of this information&quot;. I emailed asking to plz gimme teh codez, let&#x27;s see what I get!"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1630278237},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28351291","Id":"hn-post-28351291","Text":"I don&#x27;t know how this is actually implemented, but it would be possible to do this as described if the static IP provided by Helm just proxied all incoming packets directly to the personal server, without acting as a relay server at the SMTP protocol level but instead just being a dumb proxy. There&#x27;s no reason that Helm would need to act as a mail hop at the SMTP layer or do TLS termination anyways.<p>The reason that the using the server&#x27;s actual IP wouldn&#x27;t work is that most residential IP ranges are responsible for mostly spam (so most outgoing email would likely be filtered), and some ISPs don&#x27;t assign static IPv4 addresses to residential users (IPv6 would fix the later issue, but mass IPv6 adoption isn&#x27;t going to happen for a while)."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1630093019},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28332118","Id":"hn-post-28332118","Title":"Async Overloading","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1629941092},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28309445","Id":"hn-post-28309445","Title":"Are Neural Rankers Still Outperformed by Gradient Boosted Decision Trees? [pdf]","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1629749719},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28281333","Id":"hn-post-28281333","Text":"I&#x27;ve experimented a bit with this on the raw Codex model (<a href=\"https:&#x2F;&#x2F;smitop.com&#x2F;post&#x2F;codex&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;smitop.com&#x2F;post&#x2F;codex&#x2F;</a>), and I&#x27;ve found that some prompt engineering can be helpful: explicitly telling the model to generate secure code in the prompt sometimes helps. (such as by adding to the prompt something like &quot;Here&#x27;s a PHP script I wrote that follows security best practices&quot;). Codex <i>knows</i> how to write more secure code, but without the right prompting it tends to write insecure code (because it was trained on a lot of bad code).<p>&gt; the settings and documentation as provided do not allow users to see what these are set to by default<p>There isn&#x27;t a single default value. Those parameters are chosen dynamically (on the client side): when doing more sampling with a higher top_p a higher temperature is used. I haven&#x27;t tracked down where the top_p value is decided upon, but I <i>think</i> it depends on the context: I believe explicitly requesting an completion causes a higher top_p and a more capable model (earhart), which gives better but slower results than the completions you get as autocomplete (which are from the cushman model with a lower top_p). Copilot doesn&#x27;t use any server-side magic, all the Copilot servers do is replace the GitHub authentication token with an OpenAI API key and forward the request to the OpenAI API."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1629391946},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28236213","Id":"hn-post-28236213","Text":"Codex is different from GPT-3 in that it is a different model trained specifically on source code, and works better for that. I have access to Codex, when I click on those playground links I see that the engine selected on the right is &quot;davinci-codex&quot; and it says &quot;The Codex models are currently in private beta. Usage is free during this period&quot; at the bottom."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1629382657},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28234123","Id":"hn-post-28234123","Text":"I actually ended up putting what you would expect in a conclusion in the introduction. The conclusion is actually pretty worthless in hindsight."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1629235452},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28215036","Id":"hn-post-28215036","Title":"AI21 Labs trains a language model to rival OpenAI‚Äôs GPT-3","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1629225305},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28213259","Id":"hn-post-28213259","Text":"If you trace each letter of a font to create a new font, you are creating a new font &quot;program&quot;, even if your new &quot;program&quot; is very similar to what you would get from just copying the file. The traced font would have a different colour than the copied font. (<a href=\"https:&#x2F;&#x2F;ansuz.sooke.bc.ca&#x2F;entry&#x2F;23\" rel=\"nofollow\">https:&#x2F;&#x2F;ansuz.sooke.bc.ca&#x2F;entry&#x2F;23</a>)"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1629223708},"Comments":52,"Uri":"https://news.ycombinator.com/item?id=28212984","Id":"hn-post-28212984","Title":"How good is Codex?","Score":61},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1629067228},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28193236","Id":"hn-post-28193236","Text":"With some prompt engineering, you can get Codex to produce better results. In these examples I wrote up to `makeUpper`, Codex wrote the rest (with temperature = 0):<p><pre><code>    &#x2F;&#x2F; JavaScript one-liner to make the text of element with ID athing uppercase\n    const makerUpper = function(id) {\n      document.getElementById(id).innerHTML = document.getElementById(id).innerHTML.toUpperCase();\n    };\n</code></pre>\nvs<p><pre><code>    &#x2F;&#x2F; JavaScript one-liner to make the text of element with ID athing uppercase while following all security best practices\n    const makerUppercase = function(id) {\n      const element = document.getElementById(id);\n      element.textContent = element.textContent.toUpperCase();\n    };</code></pre>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1628874095},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28171539","Id":"hn-post-28171539","Title":"Programming the Windows Firewall","Score":3},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1628723145},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28149174","Id":"hn-post-28149174","Title":"Random Red Team","Score":3},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1628645534},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28136886","Id":"hn-post-28136886","Text":"I have 353 repos and 2146 contributions in the past year and haven&#x27;t been accepted (yet!). It does seem to be random."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1628514729},"Comments":1,"Uri":"https://news.ycombinator.com/item?id=28116326","Id":"hn-post-28116326","Title":"The Weaponization of Copyright by Police Officers, the Need to Automate Fair Use","Score":3},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1627733787},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=28017426","Id":"hn-post-28017426","Text":"You actually <i>can</i> use SQLite on some browsers with WebSQL today. Unfortunately, WebSQL has been deprecated and is already removed from some browsers (<a href=\"https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;220254&#x2F;why-is-web-sql-database-deprecated\" rel=\"nofollow\">https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;2202...</a>)."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1627583503},"Comments":173,"Uri":"https://news.ycombinator.com/item?id=27999813","Id":"hn-post-27999813","Title":"‚ÄúI just got a copyright claim for *TYPING ON MY KEYBOARD*‚Äù","Score":454},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1626445841},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27856584","Id":"hn-post-27856584","Text":"There are phones that <i>actually</i> can give you software freedom. The Pinephone and Librem 5 can both run mainline Linux with very few blobs."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1626440840},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27855816","Id":"hn-post-27855816","Text":"Presumably most employment contracts&#x2F;usage policies explicitly give consent to the employer to access any private data that is stored on their systems? That would seem like a reasonable thing for an employer to mandate."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1626305632},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27839773","Id":"hn-post-27839773","Title":"Justice Department Sought Reporter Records from Security Firm Proofpoint","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1626096147},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27809954","Id":"hn-post-27809954","Text":"You can use some Twitter search filters to see all of them: <a href=\"https:&#x2F;&#x2F;twitter.com&#x2F;search?q=from%3A0xabad1dea%20%40github%20ICE&amp;src=typed_query&amp;f=live\" rel=\"nofollow\">https:&#x2F;&#x2F;twitter.com&#x2F;search?q=from%3A0xabad1dea%20%40github%2...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1625773244},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27776720","Id":"hn-post-27776720","Text":"It&#x27;s possible to change that hardcoded limit. By default it is 256, but you can bring it all the way up to 2^64 with #![recursion_limit = &quot;18446744073709551615&quot;]."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1625584427},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27749668","Id":"hn-post-27749668","Title":"Quantifying Copyright Reversion","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1625503293},"Comments":72,"Uri":"https://news.ycombinator.com/item?id=27739694","Id":"hn-post-27739694","Title":"AI Explorables: big ideas in machine learning, simply explained","Score":165},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1624544921},"Comments":1,"Uri":"https://news.ycombinator.com/item?id=27618032","Id":"hn-post-27618032","Title":"Hacker reveals smart meters are spilling secrets about the Texas snowstorm","Score":19},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1623067582},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27421567","Id":"hn-post-27421567","Text":"That is the exact idea behind Abstract Wikipedia (<a href=\"https:&#x2F;&#x2F;meta.wikimedia.org&#x2F;wiki&#x2F;Abstract_Wikipedia\" rel=\"nofollow\">https:&#x2F;&#x2F;meta.wikimedia.org&#x2F;wiki&#x2F;Abstract_Wikipedia</a>), the idea of which is to automatically generate prose from structured data in Wikidata (<a href=\"https:&#x2F;&#x2F;www.wikidata.org\" rel=\"nofollow\">https:&#x2F;&#x2F;www.wikidata.org</a>). You can already do a lot of cool stuff with Wikidata today"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1621986119},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27284262","Id":"hn-post-27284262","Title":"Sending Files with Taildrop","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1621971485},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27281501","Id":"hn-post-27281501","Title":"One Week of Libera Chat","Score":3},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1621703599},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27248432","Id":"hn-post-27248432","Title":"What is the use of ‚Äúmagic arguments‚Äù in Linux reboot system call?","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1621531200},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27224054","Id":"hn-post-27224054","Title":"Changes to YouTube‚Äôs Terms of Service","Score":3},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1621427981},"Comments":529,"Uri":"https://news.ycombinator.com/item?id=27207734","Id":"hn-post-27207734","Title":"Welcome to Libera Chat","Score":1425},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1621354905},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27196935","Id":"hn-post-27196935","Title":"Avoiding the Frigid Hellscape of Online Marketing","Score":4},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1621250336},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27182211","Id":"hn-post-27182211","Text":"The Rust graph is inaccurate since Rust uses FIXME instead of TODO. Almost all of the usage of &quot;TODO&quot; in rustc relates to the todo!() macro, usually to stub out parts of tests."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1620827743},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=27130342","Id":"hn-post-27130342","Text":"This might be a way to make Google Doc&#x27;s feature that allows copy&#x2F;paste to be disabled (<a href=\"https:&#x2F;&#x2F;workspaceupdates.googleblog.com&#x2F;2015&#x2F;07&#x2F;disable-downloading-printing-and.html\" rel=\"nofollow\">https:&#x2F;&#x2F;workspaceupdates.googleblog.com&#x2F;2015&#x2F;07&#x2F;disable-down...</a>) to be more secure."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1618882019},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26869777","Id":"hn-post-26869777","Text":"Using SO data for purposes like that is allowed under the CC licence used. You don&#x27;t even need to do any scraping, since you can download an offical data dump of all SO answers at <a href=\"https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;stackexchange\" rel=\"nofollow\">https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;stackexchange</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1618752596},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26852264","Id":"hn-post-26852264","Text":"There is work on integrating Cranelift into rustc (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;bjorn3&#x2F;rustc_codegen_cranelift\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;bjorn3&#x2F;rustc_codegen_cranelift</a>) so that rustc can compile to bytecode for the Cranelift JIT."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1618498862},"Comments":85,"Uri":"https://news.ycombinator.com/item?id=26821298","Id":"hn-post-26821298","Title":"The Sisyphean Task of DNS Client Config on Linux","Score":167},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617669038},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26706551","Id":"hn-post-26706551","Text":"&gt; CNBC has learned<p>This isn&#x27;t new information. Google has already been saying this on a (very obscure) blog months ago: <a href=\"https:&#x2F;&#x2F;support.google.com&#x2F;corporate-suppliers&#x2F;announcements&#x2F;9954400\" rel=\"nofollow\">https:&#x2F;&#x2F;support.google.com&#x2F;corporate-suppliers&#x2F;announcements...</a><p>They are changing over on May 3."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617319008},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26667492","Id":"hn-post-26667492","Text":"Just got another email from them, apparently &quot;the issue appears to have been resolved with Microsoft Azure&quot;. Looks like the problem is resolved"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617317739},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26667304","Id":"hn-post-26667304","Text":"Looks like this took down the national emergency alert system in Canada. I&#x27;m registered as an alert LMD (last mile distributor), and Pelmorex (corporation running the system) just emailed me to say &quot;Please note that currently there is an unexpected significant outage on Microsoft Azure that is affecting the availability of the NAADS system and other clients globally. The NAAD System feeds are currently not accessible. We are following up on this and we will update you as soon as the issue is resolved.&quot;.<p>I sure hope there aren&#x27;t any emergencies in Canada until this is resolved..."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617035670},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26624355","Id":"hn-post-26624355","Text":"CloudFlare has a &quot;Auto&quot; TTL option, which is the default, and required to be used when reverse proxying through CloudFlare. There is nothing magical about &quot;Auto&quot; TTL, though: it appears to literally always be 299 seconds. A lot of low TTLs you see are probably caused by CloudFlare."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1616269103},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26525555","Id":"hn-post-26525555","Text":"IIRC you have to use their more expensive Tesla cards for these use cases. These cards are basically the same as consumer GPUs with more permissive driver licensing"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615939561},"Comments":1,"Uri":"https://news.ycombinator.com/item?id=26484918","Id":"hn-post-26484918","Title":"The next generation of WHOIS is born","Score":1},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615741722},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26456865","Id":"hn-post-26456865","Title":"How to Safely Implement ‚ÄúUsing Uninitialized Memory for Fun and Profit‚Äù?","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615490869},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26427954","Id":"hn-post-26427954","Title":"GitHub Blocked in China","Score":4},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615412001},"Comments":95,"Uri":"https://news.ycombinator.com/item?id=26416553","Id":"hn-post-26416553","Title":"netaddr.IP: a new IP address type for Go","Score":368},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1615233925},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26390778","Id":"hn-post-26390778","Text":"Recently I was curious as to how the wireless emergency alert systems work. But the actual specifications [1] from ATIS (another standardisation body) that carriers are required to implement are paywalled with ridiculous prices. $145 for a 35 page PDF is way too much, and makes the whole system way less transparent.<p>[1] e.g. <a href=\"https:&#x2F;&#x2F;www.techstreet.com&#x2F;standards&#x2F;atis-0700036-v002?product_id=2044512\" rel=\"nofollow\">https:&#x2F;&#x2F;www.techstreet.com&#x2F;standards&#x2F;atis-0700036-v002?produ...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1614704568},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26317457","Id":"hn-post-26317457","Text":"The Firebase Data Processing and Security Terms [1] (section 5.2.1)  limit Google&#x27;s usage of any data they obtain through Firebase and would seem to prevent that sort of tracking.<p>[1] <a href=\"https:&#x2F;&#x2F;firebase.google.com&#x2F;terms&#x2F;data-processing-terms#5.processing-of-data\" rel=\"nofollow\">https:&#x2F;&#x2F;firebase.google.com&#x2F;terms&#x2F;data-processing-terms#5.pr...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1614605270},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26302540","Id":"hn-post-26302540","Text":"I think you misread the sentence. It&#x27;s not the largest value JS can represent, it&#x27;s the largest value it can &quot;reliably represent&quot;. After 2^53 - 1 you get incorrect results when dealing with integers, making the results not &quot;reliable&quot;."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1614116682},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26243309","Id":"hn-post-26243309","Title":"Repl.it user content detected as Dangerous by Google Safe Browsing","Score":1},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1613867459},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26209573","Id":"hn-post-26209573","Title":"Child protection nonprofit alleges 'manipulative' upselling in math game Prodigy","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1612879111},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26077467","Id":"hn-post-26077467","Text":"They tried that at one point, and it didn&#x27;t work out very well for them: <a href=\"https:&#x2F;&#x2F;blog.nearlyfreespeech.net&#x2F;2013&#x2F;12&#x2F;27&#x2F;member_support_points_out&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;blog.nearlyfreespeech.net&#x2F;2013&#x2F;12&#x2F;27&#x2F;member_support_...</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1612574126},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26043203","Id":"hn-post-26043203","Title":"What Is WofCompressedData?","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1612483281},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26031266","Id":"hn-post-26031266","Title":"Avoiding FAQs, with One Exception","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1610826322},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=25804840","Id":"hn-post-25804840","Text":"Some web hosts use Safe Browsing to automatically perm-ban any sites on the list. I&#x27;ve been banned from Heroku for a couple years at this point because one of my sites got added to Safe Browsing as malware and Heroku&#x27;s systems just automatically perm-banned me (and to make things worse, in the ban email they tell you to send ban appeals to just bounces)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1609705088},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=25624848","Id":"hn-post-25624848","Text":"Here&#x27;s a list of implementations: <a href=\"http:&#x2F;&#x2F;doc.beeminder.com&#x2F;tagtime\" rel=\"nofollow\">http:&#x2F;&#x2F;doc.beeminder.com&#x2F;tagtime</a> (I also wrote a web implementation: <a href=\"https:&#x2F;&#x2F;ttw.smitop.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;ttw.smitop.com&#x2F;</a>)"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1599942502},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=24455343","Id":"hn-post-24455343","Title":"Show HN: Stochastic time tracking online","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1596479271},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=24041465","Id":"hn-post-24041465","Text":"No. There is no version of the env! or include_str! macro! in C++ (they are implemented in the compiler for Rust). These macros can be used to the get the values of environment variables or the contents of arbitrary files at compile time. You could of course implement them within a build system, but there isn&#x27;t a way to replicate these macros with just pure C++ being passed to a compiler, even with pre-processor macros."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1594296759},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23779312","Id":"hn-post-23779312","Text":"&gt; it&#x27;s theoretically possible for it to create an entire simulated CPU<p>A Javascript x86 implementation already exists: <a href=\"https:&#x2F;&#x2F;copy.sh&#x2F;v86&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;copy.sh&#x2F;v86&#x2F;</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1594243401},"Comments":540,"Uri":"https://news.ycombinator.com/item?id=23774394","Id":"hn-post-23774394","Title":"Reddit's website uses DRM for fingerprinting","Score":1099},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1593882407},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23733532","Id":"hn-post-23733532","Title":"The Making of an Underclass: AOL (1997)","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1593127275},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23646901","Id":"hn-post-23646901","Text":"This is probably the keyboard adjusting the tap area of the keys based on the predicted likelyhood of that key being pressed: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?time_continue=20&amp;v=wPmVKyhyl9U\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?time_continue=20&amp;v=wPmVKyhyl9U</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1592605086},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23579404","Id":"hn-post-23579404","Text":"Here are the App Store Review Guidelines, section 3 is about in-app purchases: <a href=\"https:&#x2F;&#x2F;developer.apple.com&#x2F;app-store&#x2F;review&#x2F;guidelines&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;developer.apple.com&#x2F;app-store&#x2F;review&#x2F;guidelines&#x2F;</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1592602499},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23579084","Id":"hn-post-23579084","Title":"Show HN: Generating Knowledge Panels","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1592083989},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23512941","Id":"hn-post-23512941","Text":"You can pass &quot;-C overflow-checks=on&quot; to rustc to generate an optimized build with over&#x2F;underflow checks enabled, even in a release build. Also, note that over&#x2F;underflow behavior is defined to always be two&#x27;s compliment wrapping when overflow checks are disabled."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1591635588},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23458326","Id":"hn-post-23458326","Text":"DuckDuckGo pays money to Bing to use their API [1], presumably enough to outweigh any loss of revenue. DDG also uses Bing&#x27;s ad network, so Bing makes money regardless of what engine a search is made on.<p>Also, there&#x27;s speculation that Microsoft is starting to give up on getting wide adoption for Bing among consumers [2], and given Bing&#x27;s low market share, Microsoft has probably determined that Bing is <i>never</i> going to get widely adopted enough to the point where having a deal with DDG would be a bad idea.<p>[1] <a href=\"https:&#x2F;&#x2F;help.duckduckgo.com&#x2F;results&#x2F;sources&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;help.duckduckgo.com&#x2F;results&#x2F;sources&#x2F;</a>\n[2] <a href=\"https:&#x2F;&#x2F;futurism.com&#x2F;the-byte&#x2F;microsoft-giving-up-people-using-bing\" rel=\"nofollow\">https:&#x2F;&#x2F;futurism.com&#x2F;the-byte&#x2F;microsoft-giving-up-people-usi...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1591185251},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23402370","Id":"hn-post-23402370","Text":"Their terms of service disallow reverse-engineering or even disassembling the binaries: <a href=\"https:&#x2F;&#x2F;zoom.us&#x2F;terms\" rel=\"nofollow\">https:&#x2F;&#x2F;zoom.us&#x2F;terms</a><p>&gt; You agree that You will not use, and will not permit any End User to use, the Services to: (i) modify, disassemble, decompile, prepare derivative works of, reverse engineer or otherwise attempt to gain access to the source code of the Services"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1590440160},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23304884","Id":"hn-post-23304884","Text":"If these companies notice, they can file a UDRP (<a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Uniform_Domain-Name_Dispute-Resolution_Policy\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Uniform_Domain-Name_Dispute-Re...</a>) request, on the basis that the domains infringe their trademarks, and were registered and used in &quot;bad faith&quot;."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1590245615},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23283423","Id":"hn-post-23283423","Text":"You can sideload on Chromebooks if you enable developer mode. But enabling developer mode wipes all data on the system and displays a warning message on boot."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1589220141},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23145042","Id":"hn-post-23145042","Title":"The Power of Dijkstra Maps","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1588536590},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23061491","Id":"hn-post-23061491","Text":"This has happened to me. I have been able to get it to work by retrying the download until it works, it took me three tries. If that still doesn&#x27;t work, Google Takeout supports splitting the download into smaller 1 gigabyte chunks which should hopefully be downloadable fast enough. Still annoying though."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1588091931},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23008746","Id":"hn-post-23008746","Text":"When 5 rounds up, you can easily implement rounding as floor(x + 0.5)."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1587470540},"Comments":37,"Uri":"https://news.ycombinator.com/item?id=22934126","Id":"hn-post-22934126","Title":"SYN cookies ate my dog ‚Äì breaking TCP on Linux (2018)","Score":130},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1586710503},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22849427","Id":"hn-post-22849427","Text":"Their Terms of Service (<a href=\"https:&#x2F;&#x2F;help.github.com&#x2F;en&#x2F;github&#x2F;site-policy&#x2F;github-terms-of-service\" rel=\"nofollow\">https:&#x2F;&#x2F;help.github.com&#x2F;en&#x2F;github&#x2F;site-policy&#x2F;github-terms-o...</a>) say:\nOne person or legal entity may maintain no more than one free Account (if you choose to control a machine account as well, that&#x27;s fine, but it can only be used for running a machine)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1586218651},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22799219","Id":"hn-post-22799219","Text":"Just tested this, I was able to create an account without a phone number. I think it doesn&#x27;t require a phone number if Botguard is highly confident you aren&#x27;t a bot. (it does recommend adding a phone number for 2FA though) Also, I created the account through ChromeOS settings, which perhaps is a signal that I&#x27;m not a bot?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1586092226},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22785399","Id":"hn-post-22785399","Text":"&gt; If you wish to make more than 1k calls per second or 1m calls per month, you must use reCAPTCHA Enterprise or fill out this form and wait for an exception approval.<p>According to <a href=\"https:&#x2F;&#x2F;developers.google.com&#x2F;recaptcha&#x2F;docs&#x2F;faq#are-there-any-qps-or-daily-limits-on-my-use-of-recaptcha\" rel=\"nofollow\">https:&#x2F;&#x2F;developers.google.com&#x2F;recaptcha&#x2F;docs&#x2F;faq#are-there-a...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1583963341},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22551147","Id":"hn-post-22551147","Text":"You can bypass hard HSTS errors in Chrome by typing in &quot;thisisunsafe&quot;. There is no textbox to type it into, you have the press the letters on your keyboard blindly."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1583451995},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22499691","Id":"hn-post-22499691","Text":"It is still possible for websites to access indexedDB by using Web Workers:<p><pre><code>  new Worker(&quot;data:application&#x2F;javascript,console.log(&#x27;indexedDB: &#x27;, indexedDB)&quot;)\n</code></pre>\nThis works since userscripts only run in top-level websites and frames, but the above code runs JS code in a seperate thread with no attached DOM."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1583450663},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22499497","Id":"hn-post-22499497","Text":"They used to be a reseller, but in early 2018 they completely moved off of Enom and registered domains directly: <a href=\"http:&#x2F;&#x2F;domainincite.com&#x2F;22467-namecheap-to-bring-millions-of-domains-in-house-next-week\" rel=\"nofollow\">http:&#x2F;&#x2F;domainincite.com&#x2F;22467-namecheap-to-bring-millions-of...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1581549991},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22313893","Id":"hn-post-22313893","Text":"On a related note, if you start an SMS with &quot;!&quot;, then the leading exclamation point will be stripped, and a delivery confirmation SMS will automatically be sent (not sure if it&#x27;s from the mobile network or the receiving phone). This makes it possible to send zero-character SMSes."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1579006395},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22044308","Id":"hn-post-22044308","Text":"It is still possible to determine what browser caused an exception. The &quot;sec-ch-ua&quot; header is used by Chrome (but only to HTTPS websites) to send the &quot;real&quot; user agent, which for me is &quot;Google Chrome 79&quot; (and I am indeed running Google Chrome 79)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1577831664},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21925233","Id":"hn-post-21925233","Text":"Since GH URLs are github.com&#x2F;&lt;name&gt;, you also can&#x27;t register usernames like @login, since that would cause a conflict. However, @case-studies and @customer-stories both are content pages (well &#x2F;case-studies redirects to &#x2F;customer-stories) and users. Those two users also cause weird things when interacting with the website and API."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1575486526},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21705785","Id":"hn-post-21705785","Text":"On most lyric search results, Google cites LyricFind as the source: <a href=\"https:&#x2F;&#x2F;www.lyricfind.com\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lyricfind.com</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1573129657},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21472550","Id":"hn-post-21472550","Text":"It doesn&#x27;t appear they have a CLA. The old license was BSD 3-clause, which states:\n&gt; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n&gt; 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and&#x2F;or other materials provided with the distribution.<p>And nowhere is that list to be found. So it appears Sentry is violating the license for external contributions."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1573002415},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21458748","Id":"hn-post-21458748","Text":"For those interested, the demo instance is at <a href=\"https:&#x2F;&#x2F;sandbox.ebay.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;sandbox.ebay.com&#x2F;</a> The message at the top says &quot;eBay and PayPal will be separate companies soon&quot;, even though they became seperate companies 4 years ago."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1572210642},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21372425","Id":"hn-post-21372425","Text":"The recent Canada federal election used paper ballots (all of them have), and those attacks are mostly preventable. Ballots are counted by two people from Elections Canada, and all candidates can watch. The match up the number of ballots with the number of people crossed off on the list of people who were eligible to vote at that polling station. They also compare it to the number of ballots at the start of polling and end of polling. If votes were added or removed, those checks wouldn&#x27;t work out (and there would probably be a re-vote for people who voted at that polling station). Adding marks before people vote wouldn&#x27;t work since voters would probably notice, and it&#x27;d be hard to add marks between marking the ballot and it being put in the ballot box. Ballots also need to be signed by the chief returning officer."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1570894974},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21233988","Id":"hn-post-21233988","Text":"The Canadian Human Rights Act states:<p>&gt; Every person who is an employee has a right to freedom from harassment in the workplace because of sex, sexual orientation, gender identity or gender expression by his or her employer or agent of the employer or by another employee.<p>(there is also a similar paragraph for landlords)<p>&gt; ‚Äúharassment‚Äù means engaging in a course of vexatious comment or conduct that is known or ought reasonably to be known to be unwelcome"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1570388179},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21174131","Id":"hn-post-21174131","Text":"Amusement ride tickets have inherient utility: you can redeem them for a ride. What utility can you get from BAT, other than selling it?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568984317},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21026167","Id":"hn-post-21026167","Text":"&gt; the repo &quot;network&quot;<p>This is actually an optimization done by GitHub. It would take up  a lot of space if GitHub copied the entire repo every time someone forked it, so they keep all the commits in the original repo. As a side effect, commits in forks are accessible from the original repo since commits from both repos are stored in the same place."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568846309},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21011174","Id":"hn-post-21011174","Text":"Probably the upcoming Area 51 raid: <a href=\"https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Storm_Area_51,_They_Can%27t_Stop_All_of_Us\" rel=\"nofollow\">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Storm_Area_51,_They_Can%27t_...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568846227},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21011156","Id":"hn-post-21011156","Text":"When I read the headline I assumed it meant that GitHub was hiring an employee named Semmle, which confused me until I realized Semmle was a business."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568467978},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20970659","Id":"hn-post-20970659","Text":"Stripe Issuing lets you specify a webhook can approve&#x2F;decline transactions [1], so you could use that to only approve transactions at a certain movie theater.<p>[1] <a href=\"https:&#x2F;&#x2F;stripe.com&#x2F;docs&#x2F;issuing&#x2F;authorizations\" rel=\"nofollow\">https:&#x2F;&#x2F;stripe.com&#x2F;docs&#x2F;issuing&#x2F;authorizations</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568146217},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20933092","Id":"hn-post-20933092","Text":"&gt; couldn&#x27;t find nofollows on either HN or Reddit links\nHN nofollows job ads and posts under ~10 points (it&#x27;s 5 in the opensource code, but it seems HN has been modified there). \nOld reddit has rel=&quot;nofollow&quot; but then removes it via JavaScript for some reason. NewReddit displays OldReddit if it detects Googlebot is asking."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1567876464},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20905111","Id":"hn-post-20905111","Text":"The ipfs.io is just a web-based way to access IPFS, called a gateway. There are a bunch of different gateways. In addition, you can run an IPFS node locally, and then as long as just one node holds the content you&#x27;re looking for you are looking for you&#x27;re good. There are also browser extensions to re-write gateway URIs to localhost URIs."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1567368393},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20854528","Id":"hn-post-20854528","Text":"Fixed, thanks!"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1567361282},"Comments":30,"Uri":"https://news.ycombinator.com/item?id=20853707","Id":"hn-post-20853707","Title":"Show HN: Square Game","Score":60},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1567259984},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20846291","Id":"hn-post-20846291","Text":"The Metanet protocol isn&#x27;t Bitcoin SV specific. Any immutable datastore could serve as the backend for a Metanet."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1565800997},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20697286","Id":"hn-post-20697286","Title":"'The' Ohio State University Wants to Trademark the Word 'The'","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1565652950},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20681289","Id":"hn-post-20681289","Text":"This is because it&#x27;s illegal to require a Canadian to provide their SIN, unless the use is on the list of exceptions [1].<p>One can still ask a Canadian for their SIN for reasons not on that list, but it is illegal to refuse service for not providing a SIN [2].<p>[1] <a href=\"https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;services&#x2F;sin&#x2F;reports&#x2F;code-of-practice&#x2F;annex-2.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;servi...</a><p>[2] <a href=\"https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;programs&#x2F;sin&#x2F;protect.html#a4\" rel=\"nofollow\">https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;progr...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1565113500},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20627571","Id":"hn-post-20627571","Text":"Couldn&#x27;t a bad actor abuse liveTr() and call it with a ton of random strings to make me pay to translate a ton of garbage data?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1563891001},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20506835","Id":"hn-post-20506835","Text":"That wouldn&#x27;t comply with the license terms, which require the first two paragraphs (The above copyright notice and this permission notice) to be included in copies. LibreJS tags don&#x27;t include that."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561740238},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20306204","Id":"hn-post-20306204","Text":"If the details of a ranking algorithm are open source, it would be easy to manipulate them."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561734545},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20305063","Id":"hn-post-20305063","Text":"I think they mean &quot;the data of Google users&quot;, not &quot;Google&#x27;s data about users&quot;."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561734430},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20305031","Id":"hn-post-20305031","Text":"Both the app and the website have ads, I just checked. They look like normal email messages, but they start with an advertisement indicator. I only see them in the &quot;Promotions&quot; and &quot;Social&quot; tab though."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561312308},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20257355","Id":"hn-post-20257355","Text":"&gt; all US COMmercial entities<p>.com isn&#x27;t US-specific."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561115375},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20241445","Id":"hn-post-20241445","Text":"Most articles are free, but some articles are designated by their authors as member articles. Authors get paid when members read member articles."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1560531032},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20184446","Id":"hn-post-20184446","Text":"GCC has the GCC Runtime Library Exception: the resulting binary of code compiled with GCC doesn&#x27;t need to licensed under GPL."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1558288169},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19954478","Id":"hn-post-19954478","Text":"Stack Overflow Enterprise is either self hosted or hosted by SO, but on a individual Azure server instance, so each instance would probably need to be compromised individually. SO will probably release an update for Enterprise customers that scans server logs to check if that Enterprise customer was affected."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1557260438},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19853084","Id":"hn-post-19853084","Title":"Improving Privacy and Security on the Web","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1557102554},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19835977","Id":"hn-post-19835977","Text":"It seems weird that they would ask survey respondents to check their browser settings to determine if they had Do Not Track enabled. DNT status is transmitted over HTTP headers, and is available to JavaScript. Couldn&#x27;t they have just checked DNT status automatically to get more accurate data?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1555100645},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19648625","Id":"hn-post-19648625","Text":"That incentivize upvoting everything, since there is no punishment for upvoting posts that don&#x27;t make it to the frontpage. That could be solved by making votes a limited resource, but that approach has many downsides."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1554933445},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19629182","Id":"hn-post-19629182","Title":"Kodi users blocked by CloudFlare, showing no sources","Score":3},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1549030882},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19054254","Id":"hn-post-19054254","Text":"The location-based filtering is easily evaded. It doesn&#x27;t check your IP address, just uses the HTML5 geolocation API, which is client-side. In Chrome, it&#x27;s very easy to spoof your location. Open DevTools, click the three dots, click Sensors, input coordinates of a valid location (Lat: 40.7128, Long: -74.0060 works for me), hit enter, and reload. Chrome will then spoof the location to New York, and I have been able able to watch New York videos despite not being there."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1547211397},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=18883203","Id":"hn-post-18883203","Text":"HSTS errors can be bypassed on Chrome by entering &quot;thisisunsafe&quot;, if anyone wants to bypass these HSTS errors. Of course you probably shouldn&#x27;t have to this: it <i>is</i> unsafe."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1544745237},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=18677243","Id":"hn-post-18677243","Text":"It seems like they moved the article to tkrunning.com, which is a Medium custom domain created before Medium custom domains were disallowed. From there, tkrunning.com is behind CloudFlare, so I would guess they used CloudFlare&#x27;s Page Rules, which lets you (among other things) setup 301 redirects at the CloudFlare reverse-proxy level."},
{"Type":"itch","ItchType":"game","Id":"itch-640033","Text":"Shoot the red enemies with your duel-sided laser, while avoiding the good guys!","Thumb":"https://img.itch.zone/aW1nLzM0MjYwMTMucG5n/315x250%23c/H3yk6W.png","Date":{"Unix":1589165600},"Uri":"https://smitop.itch.io/doubleshoot","Title":"Doubleshoot"},
{"Type":"itch","ItchType":"game","Id":"itch-653142","Text":"Defend the pencil in the middle!","Thumb":"https://img.itch.zone/aW1nLzM1MDYyMTYucG5n/315x250%23c/8K91Cj.png","Date":{"Unix":1590376204},"Uri":"https://smitop.itch.io/pencil-defense","Title":"Pencil Defense"},
{"Type":"itch","ItchType":"game","Id":"itch-694159","Text":"You can freeze time for a few seconds","Thumb":"https://img.itch.zone/aW1nLzM4MzUxNTIucG5n/315x250%23c/5mWtCE.png","Date":{"Unix":1597714207},"Uri":"https://smitop.itch.io/time-freezer","Title":"Time Freezer"},
{"Type":"itch","ItchType":"game","Id":"itch-630707","Text":"You have a limited amount of movement to beat 4 levels.","Thumb":"https://img.itch.zone/aW1nLzMzNjY2NDMucG5n/315x250%23c/5v4dgM.png","Date":{"Unix":1588386122},"Uri":"https://smitop.itch.io/use-your-distance","Title":"Use your distance"},
{"Type":"scrproj","Title":"fave detector","Id":"scr494037481","Text":"","Thumb":"/scr-thumbs/494037481.png","Uri":"https://scratch.mit.edu/projects/494037481/","Date":{"Unix":1614466908},"Verbose":1},
{"Type":"scrproj","Title":"Unthrottled recursion demo","Id":"scr483168949","Text":"","Thumb":"/scr-thumbs/483168949.png","Uri":"https://scratch.mit.edu/projects/483168949/","Date":{"Unix":1612396576},"Verbose":1},
{"Type":"scrproj","Title":"Find me!","Id":"scr162301151","Text":"","Thumb":"/scr-thumbs/162301151.png","Uri":"https://scratch.mit.edu/projects/162301151/","Date":{"Unix":1533831930},"Verbose":1},
{"Type":"scrproj","Title":"Follow the instructions!","Id":"scr78343148","Text":"","Thumb":"/scr-thumbs/78343148.png","Uri":"https://scratch.mit.edu/projects/78343148/","Date":{"Unix":1533736796},"Verbose":1},
{"Type":"scrproj","Title":"Check/X Animation","Id":"scr102442046","Text":"","Thumb":"/scr-thumbs/102442046.png","Uri":"https://scratch.mit.edu/projects/102442046/","Date":{"Unix":1533736447},"Verbose":1},
{"Type":"scrproj","Title":"Collect The Apples","Id":"scr152397556","Text":"","Thumb":"/scr-thumbs/152397556.png","Uri":"https://scratch.mit.edu/projects/152397556/","Date":{"Unix":1500893831},"Verbose":1},
{"Type":"scrproj","Title":"Infinity Jumper v2 with restart button","Id":"scr165434982","Text":"Like the original (by @sohan2), but with a restart button.\n","Thumb":"/scr-thumbs/165434982.png","Uri":"https://scratch.mit.edu/projects/165434982/","Date":{"Unix":1497044063},"Verbose":1},
{"Type":"scrproj","Title":"test","Id":"scr53263894","Text":"","Thumb":"/scr-thumbs/53263894.png","Uri":"https://scratch.mit.edu/projects/53263894/","Date":{"Unix":1461961744},"Verbose":1},
{"Type":"scrproj","Title":"Drag the scripts","Id":"scr97804016","Text":"","Thumb":"/scr-thumbs/97804016.png","Uri":"https://scratch.mit.edu/projects/97804016/","Date":{"Unix":1455404144},"Verbose":1},
{"Type":"scrproj","Title":"Cool Shapes","Id":"scr94459860","Text":"","Thumb":"/scr-thumbs/94459860.png","Uri":"https://scratch.mit.edu/projects/94459860/","Date":{"Unix":1453127358},"Verbose":1},
{"Type":"scrproj","Title":"Cool Spinny Thing","Id":"scr93017305","Text":"","Thumb":"/scr-thumbs/93017305.png","Uri":"https://scratch.mit.edu/projects/93017305/","Date":{"Unix":1452204247},"Verbose":1},
{"Type":"scrproj","Title":"B-Ball hoops test","Id":"scr90883744","Text":"just a test to see if @cartoonnetwork is a bot.","Thumb":"/scr-thumbs/90883744.png","Uri":"https://scratch.mit.edu/projects/90883744/","Date":{"Unix":1449702383},"Verbose":1},
{"Type":"scrproj","Title":"Clickbait topic titles","Id":"scr87308243","Text":"","Thumb":"/scr-thumbs/87308243.png","Uri":"https://scratch.mit.edu/projects/87308243/","Date":{"Unix":1447448542},"Verbose":1},
{"Type":"scrproj","Title":"Trying to get search to find this","Id":"scr86493133","Text":"Testing...","Thumb":"/scr-thumbs/86493133.png","Uri":"https://scratch.mit.edu/projects/86493133/","Date":{"Unix":1446640372},"Verbose":1},
{"Type":"scrproj","Title":"Custom Blocks with same name ","Id":"scr79617554","Text":"","Thumb":"/scr-thumbs/79617554.png","Uri":"https://scratch.mit.edu/projects/79617554/","Date":{"Unix":1443649372},"Verbose":1},
{"Type":"scrproj","Title":"Harder Pong","Id":"scr77518176","Text":"Based on the 2014 Hour Of Code pong game.","Thumb":"/scr-thumbs/77518176.png","Uri":"https://scratch.mit.edu/projects/77518176/","Date":{"Unix":1442666267},"Verbose":1},
{"Type":"scrproj","Title":"testing...","Id":"scr75148760","Text":"-just testing remixing\n-removed everything from @Glitterglamz101's project","Thumb":"/scr-thumbs/75148760.png","Uri":"https://scratch.mit.edu/projects/75148760/","Date":{"Unix":1441286518},"Verbose":1},
{"Type":"scrproj","Title":"Square Game","Id":"scr72765066","Text":"","Thumb":"/scr-thumbs/72765066.png","Uri":"https://scratch.mit.edu/projects/72765066/","Date":{"Unix":1439418035},"Verbose":1},
{"Type":"scrproj","Title":"Text Display","Id":"scr72898794","Text":"","Thumb":"/scr-thumbs/72898794.png","Uri":"https://scratch.mit.edu/projects/72898794/","Date":{"Unix":1439409713},"Verbose":1},
{"Type":"scrproj","Title":"5 broadcasts","Id":"scr71348908","Text":"","Thumb":"/scr-thumbs/71348908.png","Uri":"https://scratch.mit.edu/projects/71348908/","Date":{"Unix":1437737662},"Verbose":1},
{"Type":"scrproj","Title":"Avoid the black","Id":"scr71277988","Text":"Made levels 1-8\n","Thumb":"/scr-thumbs/71277988.png","Uri":"https://scratch.mit.edu/projects/71277988/","Date":{"Unix":1437673520},"Verbose":1},
{"Type":"scrproj","Title":"ask and move","Id":"scr71095788","Text":"","Thumb":"/scr-thumbs/71095788.png","Uri":"https://scratch.mit.edu/projects/71095788/","Date":{"Unix":1437514794},"Verbose":1},
{"Type":"scrproj","Title":"Typewriter Scripts","Id":"scr45029810","Text":"","Thumb":"/scr-thumbs/45029810.png","Uri":"https://scratch.mit.edu/projects/45029810/","Date":{"Unix":1436565846},"Verbose":1},
{"Type":"scrproj","Title":"Gravity1 - Bounce Working","Id":"scr69974858","Text":"Just a demo that it does work - only one time per flag press, though. Uses the same code made by @KEGroovn","Thumb":"/scr-thumbs/69974858.png","Uri":"https://scratch.mit.edu/projects/69974858/","Date":{"Unix":1436473214},"Verbose":1},
{"Type":"scrproj","Title":"Canoe Game","Id":"scr69621500","Text":"-attempting to make AI for this","Thumb":"/scr-thumbs/69621500.png","Uri":"https://scratch.mit.edu/projects/69621500/","Date":{"Unix":1436274223},"Verbose":1},
{"Type":"scrproj","Title":"Scratch in backround demo","Id":"scr69610416","Text":"","Thumb":"/scr-thumbs/69610416.png","Uri":"https://scratch.mit.edu/projects/69610416/","Date":{"Unix":1436215584},"Verbose":1},
{"Type":"scrproj","Title":"Crack the Passkey! cracker","Id":"scr69221456","Text":"Original by @iamunknown2.\nAttempts to crack a hash made by it. Just brute forces it.\n-updated to allow for 10 digits\n-uses new algorithm ","Thumb":"/scr-thumbs/69221456.png","Uri":"https://scratch.mit.edu/projects/69221456/","Date":{"Unix":1435872234},"Verbose":1},
{"Type":"scrproj","Title":"Cool Unicode Characters","Id":"scr68404874","Text":" characters from http://unicode-table.com/en/","Thumb":"/scr-thumbs/68404874.png","Uri":"https://scratch.mit.edu/projects/68404874/","Date":{"Unix":1435323804},"Verbose":1},
{"Type":"scrproj","Title":"Cloning Game","Id":"scr51757910","Text":"","Thumb":"/scr-thumbs/51757910.png","Uri":"https://scratch.mit.edu/projects/51757910/","Date":{"Unix":1429965730},"Verbose":1},
{"Type":"scrproj","Title":"Dollar Words","Id":"scr58609260","Text":"Word list made using @jgatcomb's word list","Thumb":"/scr-thumbs/58609260.png","Uri":"https://scratch.mit.edu/projects/58609260/","Date":{"Unix":1429822399},"Verbose":1},
{"Type":"scrproj","Title":"Ball Game","Id":"scr51243710","Text":"","Thumb":"/scr-thumbs/51243710.png","Uri":"https://scratch.mit.edu/projects/51243710/","Date":{"Unix":1425848250},"Verbose":1},
{"Type":"scrproj","Title":"Text Based Game","Id":"scr49997260","Text":"Still making the villagers.","Thumb":"/scr-thumbs/49997260.png","Uri":"https://scratch.mit.edu/projects/49997260/","Date":{"Unix":1425426595},"Verbose":1},
{"Type":"scrproj","Title":"When stop sign pressed...","Id":"scr50149638","Text":"","Thumb":"/scr-thumbs/50149638.png","Uri":"https://scratch.mit.edu/projects/50149638/","Date":{"Unix":1425216206},"Verbose":1},
{"Type":"scrproj","Title":"Text Platformer","Id":"scr48112714","Text":"","Thumb":"/scr-thumbs/48112714.png","Uri":"https://scratch.mit.edu/projects/48112714/","Date":{"Unix":1425077268},"Verbose":1},
{"Type":"scrproj","Title":"Dance Thing","Id":"scr48751006","Text":"","Thumb":"/scr-thumbs/48751006.png","Uri":"https://scratch.mit.edu/projects/48751006/","Date":{"Unix":1424383320},"Verbose":1},
{"Type":"scrproj","Title":"Make stuff lowercase","Id":"scr41337248","Text":"","Thumb":"/scr-thumbs/41337248.png","Uri":"https://scratch.mit.edu/projects/41337248/","Date":{"Unix":1424295157},"Verbose":1},
{"Type":"scrproj","Title":"The Clones","Id":"scr44783242","Text":"Uses @Lirex's text to number converter.","Thumb":"/scr-thumbs/44783242.png","Uri":"https://scratch.mit.edu/projects/44783242/","Date":{"Unix":1423175529},"Verbose":1},
{"Type":"scrproj","Title":"User ID thing","Id":"scr45646374","Text":"Playing around with cloud variables.","Thumb":"/scr-thumbs/45646374.png","Uri":"https://scratch.mit.edu/projects/45646374/","Date":{"Unix":1422625769},"Verbose":1},
{"Type":"scrproj","Title":"Cloud Art","Id":"scr45581484","Text":"Uses relrel's cloud list system. If you're a New Scratcher, your work won't be saved.","Thumb":"/scr-thumbs/45581484.png","Uri":"https://scratch.mit.edu/projects/45581484/","Date":{"Unix":1422573671},"Verbose":1},
{"Type":"scrproj","Title":"Favourite Cookie Type","Id":"scr45575544","Text":"Trying out cloud variables. Uses relrel's cloud list engine.","Thumb":"/scr-thumbs/45575544.png","Uri":"https://scratch.mit.edu/projects/45575544/","Date":{"Unix":1422570896},"Verbose":1},
{"Type":"scrproj","Title":"There's no going back!  remix","Id":"scr43785486","Text":"This project was made by zondareeds - I just added some improvements.\nAdded:\n-better jumping\n-not starting in ground\n-touching the bottom of the scree","Thumb":"/scr-thumbs/43785486.png","Uri":"https://scratch.mit.edu/projects/43785486/","Date":{"Unix":1421593338},"Verbose":1},
{"Type":"scrproj","Title":"Box Game","Id":"scr41559936","Text":"The game is very laggy. If you find out why, could you tell me?","Thumb":"/scr-thumbs/41559936.png","Uri":"https://scratch.mit.edu/projects/41559936/","Date":{"Unix":1421586947},"Verbose":1},
{"Type":"scrproj","Title":"A Game","Id":"scr40979712","Text":"After some time, it's impossible to win.","Thumb":"/scr-thumbs/40979712.png","Uri":"https://scratch.mit.edu/projects/40979712/","Date":{"Unix":1421537243},"Verbose":1},
{"Type":"scrproj","Title":"Tokenizer","Id":"scr43688036","Text":"","Thumb":"/scr-thumbs/43688036.png","Uri":"https://scratch.mit.edu/projects/43688036/","Date":{"Unix":1421500237},"Verbose":1},
{"Type":"scrproj","Title":"Make A Maze","Id":"scr42843872","Text":"If you see inside, broadcasting \"clear\" resets it.","Thumb":"/scr-thumbs/42843872.png","Uri":"https://scratch.mit.edu/projects/42843872/","Date":{"Unix":1421238609},"Verbose":1},
{"Type":"scrproj","Title":"Random Game","Id":"scr42596484","Text":"","Thumb":"/scr-thumbs/42596484.png","Uri":"https://scratch.mit.edu/projects/42596484/","Date":{"Unix":1421188767},"Verbose":1},
{"Type":"scrproj","Title":"Color Saver","Id":"scr42432182","Text":"I made this so I could save levels in \"The Swimming Ball\". It works best in turbo mode (the level maker needs to go threw each letter of the input)","Thumb":"/scr-thumbs/42432182.png","Uri":"https://scratch.mit.edu/projects/42432182/","Date":{"Unix":1420823665},"Verbose":1},
{"Type":"scrproj","Title":"Pong Game","Id":"scr41721734","Text":"This was my attempt at making a good gravity simulator. If you go to the \"Paddle\" sprite, you can make the cursor control the platform.","Thumb":"/scr-thumbs/41721734.png","Uri":"https://scratch.mit.edu/projects/41721734/","Date":{"Unix":1420408654},"Verbose":1},
{"Type":"scrproj","Title":"Drawing API","Id":"scr41588758","Text":"I put a comment about how to use it in the code. \n","Thumb":"/scr-thumbs/41588758.png","Uri":"https://scratch.mit.edu/projects/41588758/","Date":{"Unix":1420224328},"Verbose":1},
{"Type":"scrproj","Title":"Test Computer Speed","Id":"scr41442332","Text":"This works best in turbo mode. Basically, what it does is find how long it takes to wait 1 second.","Thumb":"/scr-thumbs/41442332.png","Uri":"https://scratch.mit.edu/projects/41442332/","Date":{"Unix":1419966344},"Verbose":1},
{"Type":"scrproj","Title":"The Yellow Line","Id":"scr40729312","Text":"","Thumb":"/scr-thumbs/40729312.png","Uri":"https://scratch.mit.edu/projects/40729312/","Date":{"Unix":1419171254},"Verbose":1},
{"Type":"scrproj","Title":"The Swimming Ball","Id":"scr39649930","Text":"   ","Thumb":"/scr-thumbs/39649930.png","Uri":"https://scratch.mit.edu/projects/39649930/","Date":{"Unix":1418679289},"Verbose":1},
{"Type":"scrproj","Title":"How fast are you?","Id":"scr39608648","Text":"","Thumb":"/scr-thumbs/39608648.png","Uri":"https://scratch.mit.edu/projects/39608648/","Date":{"Unix":1418566062},"Verbose":1},
{"Type":"scrproj","Title":"Santa Game","Id":"scr39249726","Text":"","Thumb":"/scr-thumbs/39249726.png","Uri":"https://scratch.mit.edu/projects/39249726/","Date":{"Unix":1418508643},"Verbose":1},
{"Type":"scrproj","Title":"Ball Vs. Beetles","Id":"scr38959532","Text":"","Thumb":"/scr-thumbs/38959532.png","Uri":"https://scratch.mit.edu/projects/38959532/","Date":{"Unix":1418334005},"Verbose":1},
{"Type":"scrproj","Title":"Math Game","Id":"scr38888724","Text":"","Thumb":"/scr-thumbs/38888724.png","Uri":"https://scratch.mit.edu/projects/38888724/","Date":{"Unix":1418256165},"Verbose":1},
{"Type":"SePost","Id":"se-meta-370548","Title":"My stackexchange.com \"Activity\" tab gives a server error","Uri":"https://meta.stackexchange.com/q/370548/14004262","Date":{"Unix":1633392909},"Text":"Going to [my \"Activity\" tab on stackexchange.com][1] results in an \"Oops! Something Bad Happened!\" server error. This only happens on my page, not that of anyone else. Other tabs are unaffected. I can view my inbox and achievements in the top bar normally.\r\n[![Oops! Something Bad Happened! We apologize for any inconvenience, but an unexpected error occurred while you were browsing our site. It's not you, it's us. This is our fault. Detailed information about this error has automatically been recorded and we have been notified. Yes, we do look at every error. We even try to fix some of them. It's not strictly necessary, but if you'd like to give us additional information about this error, do so at our feedback site, https://meta.stackexchange.com.][2]][2]\r\n\r\nThis has been happening since Oct. 1, 2021 at least (I don't check that page often enough to know when it started). I've done a lot of weird stuff with the Stack Exchange software, but I can't think of anything that would cause this page to error out. Maybe it was because I tried to send a CM message from a Team?\r\n\r\n\r\n  [1]: https://stackexchange.com/users/17341075/smitop?tab=activity\r\n  [2]: https://i.stack.imgur.com/cekbJ.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-370230","Title":"Updates to Privacy Policy (September 2021)","Uri":"https://meta.stackexchange.com/a/370230/14004262","Date":{"Unix":1632533017},"Text":"The [previous privacy policy stated](https://web.archive.org/web/20210602083702/https://stackoverflow.com/legal/privacy-policy):\r\n> We may amend or update this policy from time to time and will notify you of any material changes to this policy.\r\n\r\nI see that the privacy policy has been updated, but I haven't been \"notify\"ed of the privacy policy changes, which seem to have already taken effect. The changes to the privacy policy seem decidedly material: where is my notification that changes have been made?\r\n\r\nMy understanding of the terms of service is that email, real mail, and personal delivery are the allowed ways that SE can \"notify\" users. I have not gotten any mail about this, electronic or otherwise. (And I definitely did not encounter an SE employee telling me about these changes IRL!)","Verbose":1},
{"Type":"SePost","Id":"se-meta-370114","Title":"Formatting Sandbox","Uri":"https://meta.stackexchange.com/a/370114/14004262","Date":{"Unix":1632273052},"Text":"[192.168.1.1](http://192.168.1.1)","Verbose":1},
{"Type":"SePost","Id":"se-meta-370110","Title":"Is there any user data that can be used to infer how many answers are read on individual posts?","Uri":"https://meta.stackexchange.com/a/370110/14004262","Date":{"Unix":1632261365},"Text":"There will be! Later this week, Stack Overflow [will start tracking which answers are viewed on posts][1], and this data can be used to determine how many answers people tend to read (on Stack Overflow, at least). \"there are no immediate plans to display this data on the site, make it available in SEDE, or expose it via the API\", but there will likely be some stats published that answer this question.\r\n\r\n\r\n  [1]: https://meta.stackoverflow.com/q/411662/14004262","Verbose":1},
{"Type":"SePost","Id":"se-meta-369475","Title":"Could moderators actually review-ban the Community user, and what would happen if they did?","Uri":"https://meta.stackexchange.com/a/369475/14004262","Date":{"Unix":1630886570},"Text":"No, Community is special-cased to be unbannable: \"don‚Äôt mess with the Community User!\"\r\n\r\n[![User not eligible for review suspension: don‚Äôt mess with the Community User!][1]][1]\r\n\r\nModerators are likewise unbannable:\r\n\r\n[![User not eligible for review suspension: user is a moderator][2]][2]\r\n\r\n(Users without a privilege that grants access to review queues also can't be banned, which might lead one to believe that Community wouldn't need to be special cased since it lacks reputation. However, Community [always has all privileges](https://meta.stackexchange.com/help/privileges/user/-1) despite only having 1 rep.)\r\n\r\nModerators *can* put Community in timed suspension though, which is a roundabout way to review ban it. It doesn't seem to have any effects.\r\n\r\n[![This account is temporarily suspended for rule violations. The suspension period ends in 7 days.][3]][3]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/zquVR.png\r\n  [2]: https://i.stack.imgur.com/8fGfr.png\r\n  [3]: https://i.stack.imgur.com/7fFwV.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-368731","Title":"Can't see revision history for returned migrations","Uri":"https://meta.stackexchange.com/q/368731/14004262","Date":{"Unix":1629295148},"Text":"When a migration is rejected after a post is migrated, the post migrates back to the original site. \r\n\r\nNormally with migrations you can see the revision history of the migrated post (to give attribution to the editors under CC-BY-SA), but when a post is migrated away and subsequently \"returned\", one can't see the revision history on the site it was originally migrated to; the page 404's.\r\n\r\nI can see this behaviour with [this question][1], which was migrated from Electrical Engineering Stack Exchange to Stack Overflow, then back again, where the links in the top notice and revisions page 404 for me:\r\n\r\n[![Post returned-migration banner above post-closure banner with \"returned\" link circled][2]][2]\r\n\r\n[![Post timeline page with \"revisions\" link in migration even circled][3]][3]\r\n\r\n\r\n[![Electronics.SE 404 page][4]][4]\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/68673949/need-recommendations-for-image-processing-software-for-short-video-clips\r\n  [2]: https://i.stack.imgur.com/1F7v9.png\r\n  [3]: https://i.stack.imgur.com/2kMT7.png\r\n  [4]: https://i.stack.imgur.com/lSYwd.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-367477","Title":"Why does SE track post referrers?","Uri":"https://meta.stackexchange.com/q/367477/14004262","Date":{"Unix":1626383277},"Text":"I exported my SE data, and in `/qa/[site]\\PostReferralsInbound.json` there are entries like\r\n\r\n```json\r\n{\"postId\":1732454,\"ipAddress\":\"...\",\"creationDate\":\"2021-05-09T21:12:27.533Z\",\"referrer\":\"https://www.cargocultcode.com/solving-the-zalgo-regex/\"}\r\n```\r\n\r\nHow is this data used? I can't seem to find any place that the referral URIs for posts are displayed back to me. \r\n\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-meta-362343","Title":"Area 51 uses insecure avatar generation","Uri":"https://meta.stackexchange.com/q/362343/14004262","Date":{"Unix":1616250757},"Text":"Area 51 uses [a different system for avatars][1] than the rest of the network. While on every other site [Gravatar URIs are salted][2], on Area 51 they aren't because it hasn't been updated (Area 51 uses a really old fork of the SE engine). This could allows determining the email address associated with any user who has an Area 51 account. Avatars on Area 51 should be salted to prevent this.\r\n\r\nArea 51 avatars should be salted the same way as the rested of the network to prevent this information leakage.\r\n\r\nSee also [this deferred request][3] for the whole avatar system to be updated (I don't want a whole revamp, just this one bug fixed).\r\n\r\n\r\n  [1]: https://meta.stackexchange.com/questions/210703/no-avatar-on-area-51/210836\r\n  [2]: https://meta.stackexchange.com/questions/204523/unexpectedly-changing-identicon/204540#204540\r\n  [3]: https://meta.stackexchange.com/questions/263486/remove-gravatar-requirement-from-area-51-please","Verbose":1},
{"Type":"SePost","Id":"se-meta-362388","Title":"Anyone is able to see ‚ô¶ moderator announcements","Uri":"https://meta.stackexchange.com/q/362388/14004262","Date":{"Unix":1616373533},"Text":"There is a way for anyone to see ‚ô¶ moderator announcements despite not being one:\r\n\r\n[![A list of moderator announcements][1]][1]  \r\n\r\nThis can be done by creating a Stack Overflow team (which is now free!), then going to `https://stackoverflow.com/c/{team-id}/topbar/mod-inbox`. (I added in a few stylesheets in the screenshot to make the above screenshot look good). Avoid doing anything remotely like a moderator action in this new team, since having done moderator actions can make this page 500.\r\n\r\nIt doesn't seem like any of the announcements have any particularly secret info in them (they seemed pretty mundane to me), but it seems like making these public is a Bad Idea.\r\n\r\nThis is happening because Teams admins are actually moderators in disguise (with a bunch of stuff changed).\r\n\r\n  [1]: https://i.stack.imgur.com/AIPSa.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-362582","Title":"Anyone is able to see ‚ô¶ moderator announcements","Uri":"https://meta.stackexchange.com/a/362582/14004262","Date":{"Unix":1616764778},"Text":"This appears to be fixed. The mod inbox now 404s on teams:\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/UXfzh.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-362214","Title":"Upvotes on passed review audits disappear","Uri":"https://meta.stackexchange.com/q/362214/14004262","Date":{"Unix":1616000207},"Text":"I upvoted a [review audit that I passed][1], but after I was told that I passed, the upvote I cast disappeared. Shouldn't upvotes on passed review audits like this remain?\r\n\r\n\r\n  [1]: https://stackoverflow.com/review/triage/28554140","Verbose":1},
{"Type":"SePost","Id":"se-math-4249499","Title":"What is Roberts's method for gradient estimation?","Uri":"https://math.stackexchange.com/q/4249499/14004262","Date":{"Unix":1631553747},"Text":"[*Graphics Gems II*](https://www.sciencedirect.com/book/9780080507545/graphics-gems-ii), [chapter II.9 (*Image File Compression Made Easy*)](https://doi.org/10.1016/B978-0-08-050754-5.50029-3) says:\r\n\r\n> These constraints are easily met for arithmetic prediction using\r\nRoberts‚Äôs method L.R., a ‚Äúpoor man‚Äôs Lapacian‚Äù (gradient estimator),\r\nwhich finds the slope along the NW/SE diagonal: G(a, b, c) = b + c ‚Äì\r\n2a. Adding this slope step to the variable a yields the estimate: (*) =\r\na + G(a, b, c). The predictor thus is P(a, b, c) = b + c ‚Äì a. For images\r\nthat ramp in linear fashion along any axis, the prediction is exact.\r\nViewing the predictor output for an entire forms an image reminiscent of\r\nan unsharp mask convolution (Hall et al., 1971).\r\n\r\nBut I can't figure out where the mentioned \"Roberts's method\" for gradient estimation came from: it turns out there are several mathematicians named Roberts, which makes tracking down the one mentioned hard. Where did Roberts originally introduce his method for gradient estimation?","Verbose":1},
{"Type":"SePost","Id":"se-math-4250323","Title":"What is Roberts's method for gradient estimation?","Uri":"https://math.stackexchange.com/a/4250323/14004262","Date":{"Unix":1631636671},"Text":"It was originally described in [*Machine Perception Of Three-Dimensional Solids*](https://archive.is/5kw0) by Lawrence G. Roberts as a method for creating differential images to do edge dection, and is also called the [Roberts cross](https://en.wikipedia.org/wiki/Roberts_cross) differential operator.","Verbose":1},
{"Type":"SePost","Id":"se-math-4074652","Title":"Numerically compute intersection of infinite line and rectangle","Uri":"https://math.stackexchange.com/q/4074652/14004262","Date":{"Unix":1616595804},"Text":"I'm trying to numerically compute where an infinite line defined by two points intersects a (finite) rectangle also defined by two points. Here's a illustration of the various ways that the line can intersect the rectangle:\r\n![A diagram showing \"No intersections\", \"One intersection\", \"Two intersections\", and \"‚àû intersections\"](https://smitop.com/demo.svg)\r\nHow can I determine the number and location of the places where the infinite line intersects the rectangle? I know how to do this [when the line is finite][1], but I can't figure out how to generalize that to an infinite context.\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Liang%E2%80%93Barsky_algorithm","Verbose":1},
{"Type":"SePost","Id":"se-math-4103294","Title":"Closed form expression for eigenvectors of 2x2 matrix?","Uri":"https://math.stackexchange.com/q/4103294/14004262","Date":{"Unix":1618494951},"Text":"Is there a closed form expression for the eigenvalues/eigenvectors of an arbitrary 2x2 matrix $  \\begin{bmatrix}\r\n    a & b \\\\\r\n    c & d\r\n  \\end{bmatrix}\r\n$?\r\n\r\nWolfram|Alpha tries to provide an expression, but it seems wrong since it produces undefined results when $c = 0$, but all matrices have at least one (possibly complex) eigenvector.\r\n\r\n[![WA eigenvectors of 2x2 matrix][1]][1]\r\n\r\nIs there an actual closed form expression for the eigenvectors and eigenvalues of a matrix?\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/WNSec.png","Verbose":1},
{"Type":"SePost","Id":"se-webapps-153722","Title":"What are the GitHub achievements?","Uri":"https://webapps.stackexchange.com/a/153722/14004262","Date":{"Unix":1618927610},"Text":"According to [a GitHub blog post](https://github.blog/2021-04-19-open-source-goes-to-mars/#:~:text=Achievements%20include,space), there are currently three:\r\n> Right now, Achievements include the Mars 2020 Helicopter Mission badge, the [Arctic Code Vault](https://archiveprogram.github.com/arctic-vault/) badge, and a badge for sponsoring open source work via [GitHub Sponsors](https://github.com/sponsors). Watch this space!","Verbose":1},
{"Type":"SePost","Id":"se-webapps-153678","Title":"Is the other person notified if I follow then unfollow a person on github?","Uri":"https://webapps.stackexchange.com/a/153678/14004262","Date":{"Unix":1618843387},"Text":"No. I have set my [notification settings](https://github.com/settings/notifications) such that I receive all types of notifications. Despite this, I have never received a notification about someone following me (despite seeing followers in my followers list). The only way to tell if someone is following you is to check the list on your profile page.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67650170","Title":"How to implement serde::Deserialize on struct containing &'static str?","Uri":"https://stackoverflow.com/q/67650170/14004262","Date":{"Unix":1621690963},"Text":"I'm trying to implement `serde::Deserialize` on a `SourceConfig` struct, which wraps a struct containing an `&'static str` along with having some data of its own:\r\n```rust\r\nuse serde::{Serialize, Deserialize};\r\n\r\n#[derive(Serialize, Deserialize)]\r\npub struct Config {\r\n    pub name: &'static str,\r\n}\r\n\r\n#[derive(Serialize, Deserialize)]\r\nstruct SourceConfig {\r\n    config: Config,\r\n    id: u32,\r\n}\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c3b738fd09f12645d733e631bc9be67c)\r\n\r\nBut that gives me a lifetime error:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'de` due to conflicting requirements\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime `'de` as defined on the impl at 8:21...\r\n  --> src/lib.rs:8:21\r\n   |\r\n8  | #[derive(Serialize, Deserialize)]\r\n   |                     ^^^^^^^^^^^\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `SeqAccess<'_>`\r\n              found `SeqAccess<'de>`\r\n   = note: but, the lifetime must be valid for the static lifetime...\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `Deserialize<'_>`\r\n              found `Deserialize<'static>`\r\n   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'de` due to conflicting requirements\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime `'de` as defined on the impl at 8:21...\r\n  --> src/lib.rs:8:21\r\n   |\r\n8  | #[derive(Serialize, Deserialize)]\r\n   |                     ^^^^^^^^^^^\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `MapAccess<'_>`\r\n              found `MapAccess<'de>`\r\n   = note: but, the lifetime must be valid for the static lifetime...\r\nnote: ...so that the types are compatible\r\n  --> src/lib.rs:10:5\r\n   |\r\n10 |     config: Config,\r\n   |     ^^^^^^\r\n   = note: expected `Deserialize<'_>`\r\n              found `Deserialize<'static>`\r\n   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nI tried adding `#[serde(borrow)]` to the `config` in `SourceConfig`, but that doesn't work since `Config` isn't borrowed. Adding it to the `name` in `Config` doesn't work either. How can I correctly implement `Deserialize` on `SourceConfig`?","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69440248","Title":"Location of data in PNG chunks","Uri":"https://stackoverflow.com/a/69440248/14004262","Date":{"Unix":1633369321},"Text":"Yes. Note that the `PLTE` chunk has multiple fields: it specifies the whole palette, not just a single colour. Also, if the image uses a different color scheme (such as grayscale or RGBA) then the data stored in the PLTE chunk will be different due to encoding different types of colors. Here's the `PLTE` chunk looks like in a PNG image:\r\n\r\n```\r\n[LENGTH] [  NAME  ]  [       DATA       ] [CRC]\r\n         P  L  T  E  Color1 Color2 ColorN \r\n00000288 50 4c 54 45 000000 000033 [...]  000000e5\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69380884","Title":"Why does LLVM appear to ignore Rust's assume intrinsic?","Uri":"https://stackoverflow.com/a/69380884/14004262","Date":{"Unix":1632935978},"Text":"This [now compiles to just a `ret`](https://rust.godbolt.org/z/sKxWWG5vz) on recent versions of rustc due to improvements in rustc and LLVM. LLVM ignored the intrinsic because it wasn't able to optimize it before, but now it has the ability to optimize this better.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69362080","Title":"Google Sheets' Lambda Function","Uri":"https://stackoverflow.com/a/69362080/14004262","Date":{"Unix":1632833377},"Text":"You can't use it. The Google Sheets source code *does* seem to have a (perhaps partial?) implementation of `LAMBDA`, but there is no way to use it. It appears Google started working on implementing Excel's `LAMBDA` in Google Sheets, but accidentally gave it documentation before it was complete, resulting in it being documented, but unusable. Presumably it is enabled for Google Sheets developers only right now.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69353504","Title":"Displaying raw pixel array on a web page using image tag","Uri":"https://stackoverflow.com/a/69353504/14004262","Date":{"Unix":1632778450},"Text":"Relevant links: the [zlib RFC](https://www.ietf.org/rfc/rfc1950.txt), the [DEFLATE RFC](https://datatracker.ietf.org/doc/html/rfc1951), and the [PNG spec](https://www.w3.org/TR/PNG/). You may wish to consult these while reading.\r\n\r\nLet's make a PNG!\r\nStart with the image data as an RGBA image, for example for a 2x2 image:\r\n```\r\n12 34 56 78  9a bc de f0\r\ncd ef 01 23  45 67 89 ab \r\n```\r\n## Specify filters\r\nFor each row of the image, add a null byte to the beginning to set the PNG filter to none. For example,\r\n```\r\n00  12 34 56 78  9a bc de f0 # row 1 of image\r\n00  cd ef 01 23  45 67 89 ab # row 2 of image\r\n```\r\n## DEFLATE encode it\r\nWhile this is a compression format, we don't actually need to compress it! DEFLATE provides a way to encode data without compressing it (see section 3.2.4 of the DEFLATE spec). Find the length of the filtered image data from above as a 16-bit integer (if it is bigger than 65535, then split the image data into 65535-sized chunks, and do this step for each chunk). Create an empty array to hold the DEFLATE data stream. Insert that size as a 16-bit integer in big-endian format into the currently empty DEFLATE data stream. Next, append the bitwise inverse of the length. Finally, insert the filtered image data into the data stream.\r\n\r\n## Wrap it in zlib\r\nNext, we need to zlib-encode the data. Start with an empty zlib data stream, and insert 2 null bytes for the header. Next, insert the DEFLATEd data from above. Finally, insert the Adler32 checksum of the **uncompressed** data. Specifically, the Adler32 checksum should be created from the filtered image data.\r\n\r\n## Wrap it in a PNG format\r\nFinally, let's wrap this into a PNG. Replace the width and height values, specify the length of the `IDAT` chunk as the length of the zlib-encoded data, and replace the CRCs of the `IDHR` and `IDAT` chunks by taking the CRC32 checksum of the the chunk name concatenated with the data.\r\n```\r\n# PNG signature\r\n137 80 78 71 13 10 26 10\r\n\r\n# IDHR chunk\r\n00 00 00 0d # IDHR length\r\n73 72 68 82 # IDHR type\r\n00 00 00 02 # width: COMPUTE THIS\r\n00 00 00 02 # height: COMPUTE THIS\r\n08 # bit depth: 8\r\n06 # colour type: truecolour with alpha\r\n00 # compression method: zlib\r\n00 # filter method: normal\r\n00 # no interlacing\r\n55 55 55 55 # CRC: COMPUTE THIS from \"IDHR\" + data\r\n\r\n# IDAT chunk\r\n55 55 55 55 # IDAT length: COMPUTE THIS\r\n73 68 65 84 # IDAT type\r\n[zlib data]\r\n55 55 55 55 # CRC: COMPUTE THIS from the \"IDAT\" + data\r\n\r\n# IEND chunk\r\n00 00 00 00 # IEND length\r\n73 69 78 68 # IEND type\r\nAE 42 60 82 # CRC (always the same value, doesn't need to be computed)\r\n```\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69345261","Title":"Cargo says \"test failed, to rerun pass '--lib\" - What does it mean?","Uri":"https://stackoverflow.com/a/69345261/14004262","Date":{"Unix":1632739410},"Text":"That error message means that in order to rerun the tests that failed, you should pass `--lib`. What `--lib` does is (from the help) \"Test only this package's library unit tests\". So a library unit test failed, and Cargo is telling you how to rerun only the library unit tests, since you don't need to bother re-running the tests that just passed, but instead usually want to focus on the tests that failed and rerun those only.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69340069","Title":"How to satisfy strict mime type checking for wasm?","Uri":"https://stackoverflow.com/a/69340069/14004262","Date":{"Unix":1632703421},"Text":"`application/wasm` is indeed the correct MIME type to use for WASM files. The problem is that the WASM isn't being imported the proper way, through `WebAssembly.instantiate[Streaming]`. Instead, it is imported with:\r\n```lang-js\r\nimport { add } from \"./add.wasm\";\r\n```\r\nNormally, this gets transpiled to a `WebAssembly.instantiate` call, but this isn't happening. Instead, the module is being served without the `import`s being transpiled to proper importing. Make sure you are transpiling the JavaScript, and not just serving it as a static file, as seems to be the case in that code. Alternatively, you could make the `WebAssembly.instantiate` call yourself.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69338687","Title":"Dereferencing a pointer to a dropped value and the memory is still there","Uri":"https://stackoverflow.com/a/69338687/14004262","Date":{"Unix":1632687902},"Text":"When a String is dropped in Rust, ultimately what ends up getting called is [`Allocator::deallocate`](https://doc.rust-lang.org/stable/std/alloc/trait.Allocator.html#tymethod.deallocate) on the system allocator. After this, using the data is undefined behaviour, so anything could happen! But in practice what tends to happen if there aren't any funky compiler optimizations is that you just get whatever data is stored in memory there. If there aren't any new allocations at that place, then you just get whatever data was there before.\r\n\r\nWhen a memory allocation is freed, nothing happens to the allocation. Clearing the data by setting it to all zero (or some other value) would be pointless, since any newly allocated memory always needs to be initialized by the user of that memory.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69335282","Title":"Javascript regex to match JSDoc tags inside a documentation block","Uri":"https://stackoverflow.com/a/69335282/14004262","Date":{"Unix":1632662102},"Text":"Yep, the problem is that the description matcher is greedy. Changing `*` to `*?` to make it non-greedy fixes it. But it still has the problem of knowing when to stop. You can do that by checking if the input is over, or if there is  a `/// @` ahead. Note that this includes the `///` at the start of each description line: I don't think it's possible to filter them out directly in the regex, so you'd have to post-process the output to remove `///`s in `desc`.\r\n\r\n`/^\\/{3} @(?<tag>\\w+)(?:[ \\t]+{(?<type>.*)})?(?:[ \\t]+(?<name>\\w+))((?:[ \\t]+(?<desc>[\\s\\S]*?)((?=\\/\\/\\/ @)|\\s*\\z)))?/gm`","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69331051","Title":"Certbot failed to authenticate some domains","Uri":"https://stackoverflow.com/a/69331051/14004262","Date":{"Unix":1632617600},"Text":"When using the `webroot` method with Certbot, a web server is spun up that serves a single file, so that Let's Encrypt can verify the ownership of the server at a domain. But when LE accessed your domain, it got a different server that served a 404 page. It seems that the DNS for your domain isn't pointing to the EC2 instance that is requesting a certificate. (or perhaps it has been updated but just hasn't propagated yet). You need to update the DNS records to point to the server requesting a certificate with certbot. Alternatively, you can use a different challenge type that doesn't require running a server to prove ownership (such as `dns-01`).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69329560","Title":"APNG gets out of sync after second page refresh","Uri":"https://stackoverflow.com/a/69329560/14004262","Date":{"Unix":1632599788},"Text":"Browsers don't have any built-in support for treating APNGs as anything other than an image: there is no way to determine when an APNG has started or stopped playing. You could probably fix the issue by just converting the APNGs to an actual video file format, and embedding the images with `<video>` instead, since [that has an API for controlling playback](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement). Alas, it doesn't seem that any browsers support treating APNGs as video so you'll need to convert it to another video format, such as WebM.\r\n\r\nIf you are *really* committed to not converting your APNGs to a video file format, you could work around the limitation in browsers by using a library such as [pngjs](https://github.com/arian/pngjs) to decode the APNG, extracting [the `fdAT` chunks](https://wiki.mozilla.org/APNG_Specification#.60fdAT.60:_The_Frame_Data_Chunk), and then manually animating through those extracted frames (each frame in an APNG is itself a (non-animated) PNG).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69326833","Title":"Generate random using button using JavaScript","Uri":"https://stackoverflow.com/a/69326833/14004262","Date":{"Unix":1632578245},"Text":"You need to store your emojis as their hex values, not as their HTML entity encoded form. Also, it seems the Unicode values you picked map to Japanese characters, not emojis. Here's a working (except for actually using Japanese characters) script that I cleaned up a bit:\r\n\r\n```lang-js\r\nvar emojis = [0x128512, 0x128516, 0x128513, 0x128514];\r\nvar display = document.getElementById('emojiDisplay');\r\n\r\nfunction displayEmoji(){\r\n  var random = Math.floor(Math.random() * emojis.length);\r\n  var emoji = emojis[random];         \r\n  display.innerHTML=`<h2>${String.fromCharCode(emoji)}</h2>`;\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69326022","Title":"Why is there no logical negation for atomic operations?","Uri":"https://stackoverflow.com/a/69326022/14004262","Date":{"Unix":1632571890},"Text":"The x86 assembly for `fetch_or` looks like:\r\n\r\n```asm\r\nlock\r\nor byte ptr [rsp], 51\r\n```\r\n\r\nThat's actually one instruction: `lock` is an instruction prefix that modifies the next instruction. Specifically, `lock` makes the instruction be executed atomically. [Intel's x86 manual](https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf) specifies what instructions support the `lock` prefix. Bitwise `not` supports the `lock` prefix\r\n> This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically.\r\n\r\nSo if there's an x86 instruction for it, why isn't there an atomic operation for it? [LLVM](https://llvm.org/) doesn't have an intrinsic for it. In Rust, the `Atomic*` functions all forward directly to an LLVM intrinsic, so only the operations that had a corresponding LLVM intrinsic got a function. The memory model for JavaScript atomics [\"takes significant inspiration from LLVM\"](https://github.com/tc39/ecmascript_sharedmem/blob/5acab4636ead3cc9fe13b0d97a40c7dadab2fed9/LLVM_LIKE.md), so it doesn't seem like a stretch to guess that the `Atomics` functions were just copied from what LLVM had.\r\n\r\n[LLVM supports 6 intrinsic operations](https://llvm.org/docs/Atomics.html#libcalls-atomic): `add`, `sub`, `and`, `or`, `xor`, and `nand`. It supports those ones because [GCC has intrinsic operations with the same names](https://gcc.gnu.org/wiki/Atomic/GCCMM/LIbrary#line-238) (except for the type). Atomic `and`, `sub`, `and`, `or`, and `xor` operations [were added to GCC](https://gcc.gnu.org/pipermail/gcc-patches/2011-August/320670.html) ([`nand` was added later](https://gcc.gnu.org/pipermail/gcc-patches/2011-September/323038.html)) as a part of adding support for `std::atomic` in C++11.\r\n\r\nC++11 has 5 bitwise atomic operations in `std::atomic`: add, sub, and, or, xor. (but not nand, which gets an intrinsic in GCC but no actual support in `std::atomic`). Why? Because that is what was suggested in the [2007 paper](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2324.html) originally proposing atomics in C++, which defines the operations \"fetch-and-{add,sub,and,or,xor}\". They don't provide a reason for only having those 5 opreations, but my guess is that they wanted to minimise the amount of implementation work for compiler implementors, since you can get a NOT operation by XORing against all ones. Or maybe they just didn't think about it.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69319348","Title":"How do I programmatically taint the Linux kernel?","Uri":"https://stackoverflow.com/q/69319348/14004262","Date":{"Unix":1632506216},"Text":"Is it possible to taint a running Linux kernel programatically? I want to be able to test things with a tainted kernel, without recompiling it to make it tainted or finding a proprietary kernel module to load.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69319349","Title":"How do I programmatically taint the Linux kernel?","Uri":"https://stackoverflow.com/a/69319349/14004262","Date":{"Unix":1632506216},"Text":"The `root` user can taint the kernel [by writing a taint value to `/proc/sys/kernel/tainted`](https://github.com/torvalds/linux/commit/34f5a39899f3f3e815da64f48ddb72942d86c366). Taint flags can only be set (not removed) in this way: there is no way to untaint a running kernel. When writing a value to indicate that userspace has done something weird, you should use `TAINT_USER` (which has a value of `32`). For example (as `root`):\r\n```\r\n# cat /proc/sys/kernel/tainted\r\n64\r\n# echo 32 > /proc/sys/kernel/tainted\r\n# cat /proc/sys/kernel/tainted\r\n96\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69317844","Title":"Cannot push to GitHub: Gist does not support directories","Uri":"https://stackoverflow.com/a/69317844/14004262","Date":{"Unix":1632498394},"Text":"There is a way to work around Gist's prohibition on directories: only the *latest* commit on each branch is checked for the presence of directories. If you create a commit with directories, then remove the directories in the next commit, you can push both commits together, then create a link to the commit with directories by appending `/[commit]` to the Gist URI.\r\n\r\nThe Gist UI handles this a bit weird: it seems to flatten out the directory structure, and display files across all directories. You *can* push branches, but branches other than `master` aren't linked to in the Gist UI anywhere. Commit URIs still work correctly though.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69273385","Title":"Is it possible to check if `panic` is set to `abort` while a library is compiling?","Uri":"https://stackoverflow.com/a/69273385/14004262","Date":{"Unix":1632246484},"Text":"You can use this unstable code in your binary or library to cause an error when `-C panic=abort` is specified:\r\n```lang-rust\r\n#![feature(panic_unwind)]\r\nextern crate panic_unwind;\r\n```\r\nWhich causes this helpful error when the wrong panic strategy is used:\r\n```lang-text\r\nerror: the linked panic runtime `panic_unwind` is not compiled with this crate's panic strategy `abort`\r\n```\r\n\r\nWhen the panic strategy is correct, the `extern crate` declaration is redundant, but does nothing. When the panic strategy is wrong, it causes a linking error since you can't have two different panic strategy crates in the same binary. Since this check happens when crates are linked, note that if the library is never actually used by the terminal crate, then the check isn't run. (but this is a good thing: if your library is unused, then there is no need for this check anyways!)\r\n\r\nAlso, this error happens very late in the compilation process, so while `cargo build` will error out, `cargo check` won't complain since `cargo check` doesn't check for linking errors for performance reasons.\r\n\r\nUnfortunately, there doesn't seem to be a way to do this on stable.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69256632","Title":"How to add SSL certificate inside binary file?","Uri":"https://stackoverflow.com/a/69256632/14004262","Date":{"Unix":1632149984},"Text":"There is probably a way to do this that doesn't involve modifying compiled binaries (if you can access the key at compile time you can do `include_str!` and if you have file system access you can read it from disk at run time), but there is a fairly hacky way to do this if you must:\r\n\r\n1. Put a dummy key in a `const` or `static`, and read from that in the binary.\r\n2. Replace the dummy key with the real key in the binary, **making sure that you don't change the size of the binary**.\r\n3. Run the modified binary, it will use the new key now.\r\n\r\nThis works because you can modify strings in binaries and it usually won't cause any issues as long as don't change the size of the binary. But keep in mind that the compiler doesn't expect the compiled binaries to be modified, so make sure that there aren't compiler optimisations that fail when the value of the key is changed.\r\n\r\nFor example, put this in `x.rs`\r\n```lang-rust\r\nconst KEY: &str = \"PRIVATEKEYEXAMPLE\";\r\nfn main() {\r\n    println!(\"{}\", KEY);\r\n}\r\n```\r\n\r\nand run:\r\n\r\n```lang-bash\r\n$ rustc x.rs\r\n$ sed s/PRIVATEKEYEXAMPLE/REALLYPRIVATEKEYY/g < x > y # replace the string in the binary\r\n$ chmod +x y\r\n$ ./y\r\nREALLYPRIVATEKEYY\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69185103","Title":"Insert PNG comment block (iTXt) using javascript","Uri":"https://stackoverflow.com/a/69185103/14004262","Date":{"Unix":1631658164},"Text":"Chunk names are case-sensitive, `tEXt` is the name of the chunk, `TEXt` is not. And since the first letter is uppercase, making the chunk critical, no PNG tools can understand the image since there is now an unknown critical chunk.\r\n\r\nThe `iTXt` one is broken because the compression flag and method are stored directly, not as the ASCII representation of the numbers. Changing it to:\r\n```lang-js\r\nmetadata.createChunk(\"iTXt\", \"Source\"+String.fromCharCode(0x00)+String.fromCharCode(0x00)+String.fromCharCode(0x00)+\"fr\"+String.fromCharCode(0x00)+\"Source\"+String.fromCharCode(0x00)+\"\"+JSON.stringify(txt));\r\n```\r\nmakes it work.\r\n\r\n`metadata.createChunk(\"tEXt\", \"Comment\"+String.fromCharCode(0x00)+\"heremycommentl\")` doesn't cause any issues with `pnginfo`, perhaps you confused the error there with the `iTXt` one?\r\n\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69184854","Title":"What do these FFmpeg APNG encoder prediction methods mean?","Uri":"https://stackoverflow.com/a/69184854/14004262","Date":{"Unix":1631656075},"Text":"The [PNG specification](https://www.w3.org/TR/PNG/#9-table91) specifies 5 different filter types that are used to make the image data more compressible before it is compressed: none, sub, up, average, and Paeth. The idea with each of the filters is to derive to current pixel from nearby pixels, and then only store how much to adjust that estimate by to get the true value. Each scanline of an image has a filter specified for it. Each filter works best in different circumstances. Filters don't affect the actual image data, only how it is stored.\r\n\r\n`mixed` isn't a filter, but instead tells ffmpeg to choose the best filter for every line. This is also called *dynamic filtering*. This makes encoding slower, since 5 different filters need to be tried for every line, but can result in better compression. The best filter is found using the [minimum sum of absolute differences method](http://www.libpng.org/pub/png/book/chapter09.html#INDEX-688).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69143080","Title":"How to use Cargo commands programmatically in Rust?","Uri":"https://stackoverflow.com/a/69143080/14004262","Date":{"Unix":1631363654},"Text":"Add the [`cargo`](https://crates.io/crates/cargo) ([docs](https://docs.rs/cargo/)) crate to your dependencies, and you can use Cargo as a library! It doesn't have any stability guarantees or much documentation though, so you might want to read through [how the Cargo CLI tool uses the library](https://github.com/rust-lang/cargo/tree/master/src/bin/cargo) to figure out how to use it. To do a build, [`cargo::ops::compile`](https://docs.rs/cargo/0.56.0/cargo/ops/fn.compile.html) is the function to call.\r\n\r\nBut do keep in mind that the Cargo library will still run `rustc` in another process using `Command::new`, so this is really just moving where the process boundary is, not eliminating it entirely.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69048758","Title":"Rust: Including dependenies in LLVM Bitcode","Uri":"https://stackoverflow.com/a/69048758/14004262","Date":{"Unix":1630690544},"Text":"Expanding on [Aiden4](https://stackoverflow.com/users/15131491/aiden4)s comment:\r\n\r\n- Delete the current target directory to prevent any old artifacts from being used: `rm -r target/`\r\n- Compile it with `RUSTFLAGS=\"--emit=llvm-bc\" cargo build --release`\r\n- Link the bitcode files together with `llvm-link target/release/deps/*.bc > withdeps.bc`\r\n\r\nThat will get you *almost* all dependencies. It turns out all Rust programs have an implict dependency on either `core` or `std` though (although you can avoid this with the unstable `#![no_core]`, but good luck actually getting anything to compile that way), so you probably want to get the bitcode for that too.\r\n\r\nThe easiest way to do that is to compile the standard library from source to bitcode. [`cargo` has experimental support for building the standard libraries from source](https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std), so just append `-Z build-std --target x86_64-unknown-linux-gnu` (and update the target if needed) to your `cargo` build command. When using `--target`, which is required by `-Z build-std`, the build files are put in a target-specific directory, `target/x86_64-unknown-linux-gnu/release/deps/` in this case. The targetless directory contains build-dependencies for the standard libraries: we don't want that!\r\n\r\nWe don't want to link *all* of the standard libraries. We really only need `std` and its dependencies: `proc_macro` isn't needed here since we are compiling to a binary, not a proc-macro. We also need to link with either `proc_abort` or `panic_unwind`, matching it up with the unwind codegen setting we chose. The default is unwinding, so let's delete the other one, `proc_abort`. Let's send those libraries to the chopping block: `rm target/x86_64-unknown-linux-gnu/release/deps/{panic_abort,proc_macro}-*.bc`.\r\n\r\nLet's try linking for real this time:\r\n```lang-bash\r\nrm -r target/\r\nRUSTFLAGS=\"--emit=llvm-bc\" cargo build --release -Z build-std --target x86_64-unknown-linux-gnu\r\nrm target/x86_64-unknown-linux-gnu/release/deps/{panic_abort,proc_macro}-*.bc\r\nllvm-link target/x86_64-unknown-linux-gnu/release/deps/*.bc > withalldeps.bc\r\n```\r\n\r\nYay, it worked! Well, except for the calls to undefined functions in there that still managed to slip through. `__rust_alloc`, `__rust_dealloc`, `__rust_realloc`, and `__rust_alloc_zeroed` are magic functions that are defined if you use Rust's LLVM fork. The standard library also depends on `libpthread` and [`dlsym`](https://linux.die.net/man/3/dlsym) which are language-asnostic libraries/functions that are usually implemented in C. You can use `clang` and a `libc` implementation that supports being compiled with Clang (GNU libc doesn't, I think musl might work here?) to get that if needed. Also if you are compiling to an executable it has trouble finding `main` from `_start`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-69015417","Title":"How can I Display an enum in lowercase?","Uri":"https://stackoverflow.com/a/69015417/14004262","Date":{"Unix":1630505497},"Text":"Here is a way to do that without needing to manually update `Display::fmt` every time you add a new colour by using the derived `Debug` implementation and lowercasing that:\r\n```lang-rust\r\n#[derive(Debug)]\r\npub enum BoxColour {\r\n    Red,\r\n    Blue,\r\n}\r\n\r\nimpl fmt::Display for BoxColour {\r\n    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\r\n        write!(formatter, \"{}\", format!(\"{:?}\", self).to_lowercase())\r\n    }\r\n}\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=12e634dd9a7a5f51aabcf238007593d0)\r\n\r\nNote that `write!` returns a `Result<(), fmt::Error>` (which is a `fmt::Result`), *not* a raw `()`.\r\n\r\nBut consider if it would just be better to manually update the list, or use a macro to specify that. Also consider how colours with multiple words (such as `LightBlue`) should be lowercased: is `lightblue` what you want there?","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68924653","Title":"Displaying New tab after clicking a tag","Uri":"https://stackoverflow.com/a/68924653/14004262","Date":{"Unix":1629901255},"Text":"You can [adjust the global Markdown rendering settings](https://gohugo.io/getting-started/configuration-markup#blackfriday) to make links in Markdown always open in a new tab by using the Blackfriday Markdown renderer and setting the `hrefTargetBlank` flag. Add this to your `config.toml` (or the equivalent in YAML/JSON)\r\n```lang-toml\r\n[markup]\r\ndefaultMarkdownHandler = 'blackFriday'\r\n[blackFriday]\r\nhrefTargetBlank = true\r\n```\r\n\r\nIf you need more complicated logic to determine when to make links open in a new tab or need to use the Goldmark Markdown renderer, you can use the [`render-link` render hook](https://gohugo.io/getting-started/configuration-markup/#markdown-render-hooks) to override the output of the Markdown renderer with a template. The simplest render hook to do this would be this (in `layouts/_default/_markup/render-link.html`). See the documentation for the full details on this.\r\n\r\n```html\r\n<a href=\"{{ .Destination | safeURL }}\" {{ with .Title}}title=\"{{ . }}\"{{ end }} target=\"_blank\">{{ .Text | safeHTML }}</a>\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68964456","Title":"How to ensure consistent display of fonts?","Uri":"https://stackoverflow.com/a/68964456/14004262","Date":{"Unix":1630154485},"Text":"None of the fonts in that font stack have emoji glpyhs in them. As such, the browser looks for emoji fonts on the system and tries to use them to render the emojis. If the system doesn't have any applicable fonts, then the browser is unable to render emojis. You can remedy this by adding an emoji font to your font stack, such as [Noto Emoji](https://github.com/googlefonts/noto-emoji/blob/main/fonts/NotoColorEmoji.ttf). Add it to your font stack like so:\r\n```lang-css\r\nfont-family: \"Roboto\", \"-apple-system\", \"Helvetica Neue\", Helvetica, Arial, \"Noto Emoji\", sans-serif;\r\n```\r\nFont lookup is done on a per-character basis, so browsers will look for the emoji in each font on the list, until they try `Noto Emoji` and find it there.\r\n\r\nBut keep in mind that emoji fonts tend to be big. The color version of Noto emoji is ~9 MiB. If you only display a few emoji, you should probably just convert them to an image and render the image instead. This is what Twitter does: it converts all emojis in Tweets to images, ensuring that only the emojis needed to render the Tweet get downloaded.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68522961","Title":"Data types in Rust","Uri":"https://stackoverflow.com/a/68522961/14004262","Date":{"Unix":1627252010},"Text":"The maximum value a i128 can store is 2<sup>127</sup> - 1, and the minimum is -(2<sup>127</sup>). The first bit is used for tracking if the number is negative, leaving the remaining 127 bits to represent the actual number. 2<sup>127</sup> values are used to represent negative numbers, 1 value is used to represent zero, and the remaining 2<sup>127</sup> - 1 values are used to represent positive numbers. When evaluating `-x.pow(amount_bits - 1)`, the negation is done *after* calculating the power. 2<sup>127</sup>  is 1 greater than the maximum value of an i128, so it panics. While the result would be in bounds if it got to doing the negation, Rust panics before the negation can even occur.\r\n\r\nThe simplest solution would be to use the `i128::{MAX, MIN}` constants instead of manually calculating them. Alternatively, you could use a library that supports arbitrary-sized numbers, such as [`num`](https://crates.io/crates/num).","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68510603","Title":"Why True value returns True with membership in function in python","Uri":"https://stackoverflow.com/a/68510603/14004262","Date":{"Unix":1627134456},"Text":"`True` is implictly converted to a number, `1`. (`False` would be converted to `0`) The `in` operator checks if any element is equal to the left operand, and `True` is equal to the first element, `1`.\r\n\r\n```python\r\n>>> True == 1\r\nTrue\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68510448","Title":"What does \"package foo in Cargo.lock is yanked in registry\" mean?","Uri":"https://stackoverflow.com/a/68510448/14004262","Date":{"Unix":1627133477},"Text":"It means that the package has been marked as [\"yanked\"](https://doc.rust-lang.org/cargo/reference/publishing.html#cargo-yank). This is usually done when the authors of have package have a very compelling reason that a certain version of a package should not be used at all, and to very strongly suggest that the package should not be used. You can ignore yanks with `--force` to force yanked packages to be used, but that is usually a bad idea: packages were usually yanked for a good reason.\r\n\r\nIn your case: The yanked `cachedir` 0.1.X version is a completely different package with a different author than the newer versions. The older versions are unmaintained and cannot be updated (since `cachedir` now has a different owner who publishes a different package), so the new owner of `cachedir` yanked the older versions. `smallvec` 1.4.0 has a bug where it causes Undefined Behaviour when used with zero-sized types, and that UB is bad enough that it is exceedingly unlikely that you actually want to use that version. The fix to this is to update to a later version of `smallvec` that doesn't have that bug.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68505669","Title":"Why there is no `shutdown` method for TcpListener and UdpSocket in Rust","Uri":"https://stackoverflow.com/a/68505669/14004262","Date":{"Unix":1627080247},"Text":"You can use `std::mem::drop` to drop a value early:\r\n```rust\r\nlet listener = TcpListener::bind(\"127.0.0.1:80\")?;\r\n// ...\r\ndrop(listener);\r\n// ...\r\n```\r\nThere is no `shutdown` method because it isn't needed. The existing ownership system is already good enough for keeping track of if a socket is usable, and there is nothing you can *do* with a closed socket anyways.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68500797","Title":"Remove default linker flags in Rust","Uri":"https://stackoverflow.com/a/68500797/14004262","Date":{"Unix":1627050366},"Text":"Start by making sure that you are [passing the right `linker-flavor`](https://doc.rust-lang.org/rustc/codegen-options/index.html#linker-flavor). rustc might have misidentified what linker you are using, and specifying that might help. Also ensure you are using the right linker. But if you really want to remove that argument, it is possible using some unstable features.\r\n\r\nThere isn't a general way to remove individual linker arguments. The `eh_frame_header` target attribute indicates if the linker should insert a EH (exception handling) frame header. Unstable rustc does have support for changing individual target options, but it is a bit complicated and can only handle `#![no_std]` binaries on some platforms. You might want to consider just calling the linker manually.\r\n\r\nFirst, [dump the JSON target metadata](https://doc.rust-lang.org/rustc/targets/custom.html) (using a nightly compiler) for the target you are compiling *to*, replacing `[target]` with a target triple like `thumbv7neon-unknown-linux-musleabihf`:\r\n```bash\r\n$ rustc -Z unstable-options --print target-spec-json --target [target] > target.json\r\n```\r\n`target.json` now has target-specific compilation information. On some targets (such as WASM), EH frame headers are disabled by default. If you see a line like this in `target.json`, you are already done (and shouldn't be getting that error):\r\n```json\r\n  \"eh-frame-header\": false,\r\n```\r\nIf you don't see that line, then add it to `target.json` right after opening brace, like\r\n```json\r\n{\r\n  \"eh-frame-header\": false,\r\n  ...\r\n```\r\nYou can now specify the path to `target.json` wherever a target triple would normally be. However, you now need to recompile the standard libraries (such as `core` and `std`) with the new target information. Otherwise, the compiler will tell you that ``the `target-17676080659170949227` target may not be installed``. On unstable Cargo, you can use `-Z build-std`\r\n to do that:\r\n```bash\r\n$ cargo +nightly run -Z build-std=core --target target.json\r\n```\r\nIt will take a bit longer than normal, since it needs to recompile the `core` standard library. Not all platforms support compiling the fuller `std` library this way, but you can change the `build-std=core` to just `build-std` if you want to try to build the whole `std` standard library as well.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-68500298","Title":"Can I keep \"unused css selector\"?","Uri":"https://stackoverflow.com/a/68500298/14004262","Date":{"Unix":1627048309},"Text":"You probably want to wrap the selector in `:global(...)`, like\r\n```css\r\n:global(.red) {\r\n    color: red;\r\n}\r\n```\r\nThis forces Svelte to keep the class around, and also makes it so the selector isn't scoped to that single component. This is usually what you want when Svelte is removing selectors that you want to keep.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67520304","Title":"Can we implement the Copy and Clone traits to Command struct?","Uri":"https://stackoverflow.com/a/67520304/14004262","Date":{"Unix":1620913418},"Text":"No, implementing `Copy` and `Clone` is impossible, since `Command` does not implement `Copy` or `Clone` itself. It wouldn't make sense for `Command` to implement any of those types either, since it holds owned data and closures. Here's what `Command` is a wrapper around on Unix platforms:\r\n```\r\npub struct Command {\r\n    program: CString,\r\n    args: Vec<CString>,\r\n    argv: Argv,\r\n    env: CommandEnv,\r\n    cwd: Option<CString>,\r\n    uid: Option<uid_t>,\r\n    gid: Option<gid_t>,\r\n    saw_nul: bool,\r\n    closures: Vec<Box<dyn FnMut() -> io::Result<()> + Send + Sync>>,\r\n    groups: Option<Box<[gid_t]>>,\r\n    stdin: Option<Stdio>,\r\n    stdout: Option<Stdio>,\r\n    stderr: Option<Stdio>,\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67512746","Title":"importing winston causes 'process is not defined'","Uri":"https://stackoverflow.com/a/67512746/14004262","Date":{"Unix":1620868326},"Text":"You [can't use Winston in the browser](https://github.com/winstonjs/winston/issues/287) right now, although support for it is currently on roadmap. ","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67493318","Title":"How do I get a value from a `HashMap::<&'static str, u32>` using a String as the key?","Uri":"https://stackoverflow.com/a/67493318/14004262","Date":{"Unix":1620761914},"Text":"Use `&s[..]` to convert the `String` into a `&str`:\r\n```\r\nprintln!(\"foo={}\", map.get(&s[..]).unwrap());\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=34a2b5307c2cb2395c19244ac6e1d793)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67458650","Title":"Why would std::process::Command::ouput fail?","Uri":"https://stackoverflow.com/a/67458650/14004262","Date":{"Unix":1620569371},"Text":"- There could be some issue opening the binary being executed (i.e. access denied, doesn't exist)\r\n- When waiting for the process to finish, the `waitpid` syscall could be [interrupted](https://stackoverflow.com/questions/41474299/checking-if-errno-eintr-what-does-it-mean)\r\n- Getting the output involves creating a pipe, which will fail if the file descriptor limit is hit (`cat /proc/sys/fs/file-max` to check)\r\n- It also involves opening a file, which will fail if the limit on open files is reached (`ulimit -n` to check)\r\n\r\nYou probably only need to worry about the first two: you can't do anything about hitting limits in the kernel.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67409479","Title":"How can I test my Boxed error for a specific type?","Uri":"https://stackoverflow.com/a/67409479/14004262","Date":{"Unix":1620253433},"Text":"Dereference the `Box` before doing the `assert_eq`:\r\n```\r\nlet err = tlv.downcast::<BridgeError>().unwrap();\r\nassert_eq!(*err, BridgeError::TLVLength{expected: 12, received: 14});\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4e4bf58e73ddb84242dd4fb6a00a466d)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67393829","Title":"Why doesn't converting a raw pointer to a u8 into a raw pointer to an array of 8 booleans print the right result?","Uri":"https://stackoverflow.com/a/67393829/14004262","Date":{"Unix":1620175285},"Text":"The behavior of that program is undefined (so the output is meaningless). From Miri:\r\n\r\n```none\r\nerror: Undefined Behavior: memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc1381 which has size 1\r\n  --> src/main.rs:11:31\r\n   |\r\n11 |         println!(\"{:?} {:b}\", *x, *y);\r\n   |                               ^^ memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc1381 which has size 1\r\n   |\r\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\r\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\r\n```\r\nBoolean arrays are stored byte-by-byte, not bit-by-bit. Use the [`bitvec`](https://crates.io/crates/bitvec) or [`bitfield`](https://crates.io/crates/bitfield) crate if you want bit-by-bit storage. There is no way for a pointer to point to an individual bit: pointers always point to bytes (pointers to bits aren't supported by basically any ISAs). `bool`s are 1 byte long, and cannot safely have any value other than `0_u8` or `1_u8`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67257737","Title":"Malicious javascript code in querystring for my website in google analytics","Uri":"https://stackoverflow.com/a/67257737/14004262","Date":{"Unix":1619380936},"Text":"Someone *is* trying to do something malicious. There's no reason to believe that they're succeeding, though. They [appear to be automatically trying attacks like that](https://www.google.com/search?q=%22protossbb%22) across many websites, in the hopes that it will happen to succeed on one of them. Prototype pollution is a fairly common vulnerability in JavaScript, so they are probably hoping that they will happen to find such a vulnerability by chance.\r\n\r\nIf you want to be sure you're okay, you can go to those URIs and make sure that nothing bad happens.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67237335","Title":"Rust - Is repr(C) a preprocessor directive?","Uri":"https://stackoverflow.com/a/67237335/14004262","Date":{"Unix":1619215523},"Text":"`#[repr(C)]` is not a preprocessor directive, since Rust doesn't use a preprocessor <sup>1</sup>. It is an [attribute](https://doc.rust-lang.org/stable/reference/attributes.html). Rust doesn't have a complete specification, but the `repr` attribute [is mentioned in the Rust reference](https://doc.rust-lang.org/stable/reference/type-layout.html#representations), so it is absolutely a part of the language. Implementation-wise, attributes are parsed the same way all other Rust code is, and are stored in the same AST. Rust has no \"attribute pass\": attributes are an actual part of the language. If someone else were to implement a Rust compiler, they would need to implement `#[repr(C)]`. \r\n\r\nFurthermore, `#[repr(C)]` *can't* be implemented without some compiler magic. In the absence of a `#[repr(...)]`, Rust compilers are free to arrange the fields of a `struct`/`enum` however they want to (and they do take advantage of this for optimization purposes!).\r\n\r\nRust does have a good reason for using it's own memory layout. If compilers aren't tied to how a `struct` is written in the source code, they [can do optimisations like](https://doc.rust-lang.org/nomicon/repr-rust.html) not storing `struct` fields that are never read from, reordering fields for better performance, `enum` tag pooling<sup>2</sup>, and using spare bits throughout [`NonZero*`](https://doc.rust-lang.org/stable/std/num/index.html)s in the struct to store data (the last one isn't happening yet, but might in the future). But the main reason is that Rust has things that just don't make sense in C. For instance, Rust has zero-sized types (like `()` and `[i8; 0]`) [which can't exist in C](https://stackoverflow.com/a/9723093/14004262), `trait` vtables, `enum`s with fields, generic types, all of which cause problems when trying to translate them to C.\r\n\r\n---\r\n\r\n<sup>1</sup> Okay, you could use the C preprocessor with Rust if you really wanted to. Please don't.\r\n\r\n<sup>2</sup> For example, `enum Food { Apple, Pizza(Topping) } enum Topping { Pineapple, Mushroom, Garlic }` can be stored in just 1 byte since there are only 4 possible `Food` values that can be created.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67154715","Title":"How to group elements of a vector by a pattern?","Uri":"https://stackoverflow.com/a/67154715/14004262","Date":{"Unix":1618793078},"Text":"Iterate over the elements of the `nums` to build up the split. For every number, compare it to the last number to decide whether to create a sublist, or append to the existing one:\r\n\r\n```rust\r\nlet nums = vec![9,7,6,3,4,0,1,7,3,9];\r\nlet mut split: Vec<Vec<i32>> = vec![vec![]];\r\nfor num in nums.iter().filter(|n| **n != 0) {\r\n    let sublist = split.last_mut().unwrap();\r\n    match sublist.last_mut() {\r\n        Some(x) if num > x => {\r\n            split.push(vec![*num]);\r\n        }\r\n        _ => sublist.push(*num),\r\n    }\r\n}\r\nlet split = split; // make split immmutable\r\nlet summed: Vec<i32> = split.iter().map(|v| v.iter().sum()).collect();\r\n```\r\n\r\n([try in playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=81f92bc4a3dd4a27c7db178a7c8b60aa))\r\n\r\nIt's probably possible to make a more elegant solution using [`Iterator::partition_in_place`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partition_in_place), but that `fn` is sadly unstable for now.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67129518","Title":"How to check if specified char exists on Android ? (jss/css/whatever/‚Ä¶)","Uri":"https://stackoverflow.com/a/67129518/14004262","Date":{"Unix":1618593219},"Text":"`FontFaceSet.check` [does not check if a specific character exists in a font](https://lists.w3.org/Archives/Public/www-style/2015Aug/0330.html), only if *any* character in the range of that character exists. You can try rendering the text to a canvas and checking if the rendering is the same as a Unicode character that is known not to exist:\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n    function isLetterRenderable(letter) {\r\n      if (!document.fonts.check('700 24px / 36px Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif', letter)) return false;\r\n      let can;\r\n      if (window.OffscreenCanvas) {\r\n        can = new OffscreenCanvas(50, 50);\r\n      } else {\r\n        can = document.createElement(\"canvas\");\r\n        can.height = 50;\r\n        can.width = 50;\r\n      }\r\n      const ctx = can.getContext(\"2d\");\r\n      ctx.font = '700 10px Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\r\n      ctx.fillText(letter, 10, 10);\r\n      const imgData1 = ctx.getImageData(0, 0, 50, 50);\r\n      ctx.clearRect(0, 0, 50, 50);\r\n      ctx.fillText(\"·øø\", 10, 10);\r\n      const imgData2 = ctx.getImageData(0, 0, 50, 50);\r\n      // drawing of character must differ from drawing of known invalid character\r\n      return !imgData1.data.every((x, i) => imgData2.data[i] === x);\r\n    }\r\n\r\n    console.log(\"a ->\", isLetterRenderable(\"a\"));\r\n    console.log(\"ÍØÉ ->\", isLetterRenderable(\"ÍØÉ\"));\r\n    console.log(\"ÚØå° ->\", isLetterRenderable(\"ê∫Ä\"));\r\n    console.log(\"‚Æù ->\", isLetterRenderable(\"‚Æù\"));\r\n    console.log(\"üç© ->\", isLetterRenderable(\"üç©\"));\r\n\r\n<!-- end snippet -->\r\n\r\nNote that some browsers (Firefox does it on my system) will automatically generate \"pseudo-letters\" that look like [![010EB0 in a square][1]][1]. These look like actual unique letters to `isLetterRenderable` above, so it first checks using `document.fonts.check` since while that function returning `true` is meaningless in this context, if it returns `false` we know for sure that the glyph can't be rendered. But if some letters in a range are renderable, and some are pseduo-letters, then it is very hard to detect which ones have associated glyphs.\r\n\r\n  [1]: https://i.stack.imgur.com/tptqa.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66880234","Title":"What does use crate::body::Body; mean?","Uri":"https://stackoverflow.com/a/66880234/14004262","Date":{"Unix":1617152093},"Text":"It refers to to the crate currently being compiled. So in this example, it is resolved as `rtsp_server::body::Body`. The `body::Body` part is refering to the `Body` struct/enum of the `body` module.\r\n\r\nThe [Rust documentation says](https://doc.rust-lang.org/std/keyword.crate.html):\r\n> `crate` is also used to represent the absolute path of a module, where `crate` refers to the\r\n> root of the current crate. For instance, `crate::foo::bar` refers to the name `bar` inside the\r\n> module `foo`, from anywhere else in the same crate.\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66831375","Title":"How to find the git commit id of an included crate?","Uri":"https://stackoverflow.com/a/66831375/14004262","Date":{"Unix":1616848273},"Text":"You can't. Crates on crates.io don't need to be built from a Git repo, and there is no built-in way to determine what commit a crate was built from. Most crates tag commits in their history where versions came from, but in this case looking at the Git history of `Cargo.toml` is your only option.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66805797","Title":"Check if the lines of a file contains given pattern without regex in Rust","Uri":"https://stackoverflow.com/a/66805797/14004262","Date":{"Unix":1616697834},"Text":"You can loop over all possible values:\r\n\r\n```rust\r\nlet line = line.unwrap();\r\nfor i in 0..=9 {\r\n    if line.contains(&format!(\"PerfectSwitch-{}: Message:\", i)) {\r\n        println!(\"{}\", line);\r\n    }\r\n}\r\n```\r\n\r\nAlthough you probably want to rethink your assumption that regexes are bad. Rust's `regex` library is very fast, and I doubt any small performance gains you get here will outweigh the lack of maintainability that comes with rolling your own parsing code.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66673790","Title":"How to delete a contributor on GitHub repository page?","Uri":"https://stackoverflow.com/a/66673790/14004262","Date":{"Unix":1615986670},"Text":"I tested this, GitHub appears to treat the list of \"Contributors\" as append-only: whenever it sees a new one, it adds it to the list, but it never removes from that list. See [this repo][1] which lists someone who never committed in the Contributors list, despite only having one commit (that they didn't author). I did this by pushing a commit as myself, then pushing one as torvalds, then force-pushing back to my commit. Despite this, GitHub still shows torvalds as a contributor.\r\n\r\nGo to the full \"Contributors\" graph in the insights tab, and check if `B` listed there. The data for this graph is always calculated using the actual commit graph. If `B` is listed there, then GitHub still thinks `B` *did* make some commits. In that case, you should double-check that you fixed all commits belonging to `B`. Click on \"N commits\" to see what commits GitHub thinks `B` did:\r\n[![Arrow pointing to \"1 commit\" on top of a graph][2]][2]\r\n\r\nIf no commits are attributed to `B`, [contact GitHub support][3] (I think *Remove data from a repository I own or control* would be the right topic to select) and ask them to re-generate the Contributors list.\r\n\r\n\r\n  [1]: https://github.com/Smittyvb/wrong-contribs\r\n  [2]: https://i.stack.imgur.com/NSCbx.png\r\n  [3]: https://support.github.com/request","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66662055","Title":"GitHub: problem pushing a local branch to the remote","Uri":"https://stackoverflow.com/a/66662055/14004262","Date":{"Unix":1615922568},"Text":"The repo URI you are trying to push to doesn't exist, or you don't have permission to access it (GitHub pretends that private repos you don't have access to don't exist). Run\r\n```bash\r\ngit remote get-url origin\r\n```\r\nand make sure what you see is *exactly* what GitHub shows you after clicking the green Code button:\r\n\r\n[![Screenshot of GitHub UI displaying a clone URI][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ylnVO.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66661621","Title":"When we click \"accept both changes\" in vscode, Which command will be executed during merge conflict?","Uri":"https://stackoverflow.com/a/66661621/14004262","Date":{"Unix":1615920731},"Text":"You can check exactly what commands are run in the \"Git\" console, under the \"Output\" tab:\r\n\r\n[![A screenshot of a Git console window. At the top are 4 tabs: Problems, Output, Debug Console, and Console. The Output tab is selected. To the right of the tabs is a dropdown, with \"Git\" selected. There are 5 icons the the right of the drowdown. Below the header various Git commands are shown.][1]][1]\r\n\r\nIn this case, VSCode doesn't run *any* Git commands to accept both changes: it just removes the conflict markers by itself.\r\n\r\n  [1]: https://i.stack.imgur.com/2mLQg.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66638254","Title":"Destructuring an Option<Box<_>> inside a match statement in Rust","Uri":"https://stackoverflow.com/a/66638254/14004262","Date":{"Unix":1615812207},"Text":"Dereference the box after matching:\r\n```rust\r\nif let Some(inner) = self.pending_removal.take() {\r\n    let (temp_structure, some_boolean) = *inner;\r\n    // Do something with temp_structure and some_boolean\r\n}\r\n```\r\n[(playground)][1]\r\n\r\nIf you think this is a bit clunky, you're right. On nightly you can use the unstable `box_patterns` feature to enable a better syntax for this (although [this might never be stabilized][2]):\r\n\r\n```rust\r\nif let Some(box (temp_structure, some_boolean)) = self.pending_removal.take() {\r\n    // Do something with temp_structure and some_boolean\r\n}\r\n```\r\n[(playground)][3]\r\n\r\n\r\n  [1]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=0a86e2e8e5404856fcb40dd437ff217a\r\n  [2]: https://github.com/rust-lang/rust/issues/29641\r\n  [3]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=c660bffdc36a267f04c84d01a9cd3694","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66602512","Title":"In Github, how do you determine which branch the release came from","Uri":"https://stackoverflow.com/a/66602512/14004262","Date":{"Unix":1615561907},"Text":"Releases are created from the branch you select when creating the release:\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/re9Dz.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66602334","Title":"Why can't I access enum fields directly?","Uri":"https://stackoverflow.com/a/66602334/14004262","Date":{"Unix":1615561241},"Text":"It is because `weight` isn't part of the `Animal` enum, it's part of the `Cat` type of the enum. Say in the future you add another type of animal that doesn't have weight information:\r\n```rust\r\nenum Animal {\r\n    Cat { name: String, weight: f64 },\r\n    Insect { species: String, height: f64 },\r\n}\r\n```\r\nThen `a.weight` wouldn't always have a value. You can use `if let` or `match` to conditionally get data from an `enum` if it exists:\r\n```rust\r\nif let Animal::Cat { weight, .. } = a {\r\n    println!(\"Your cat weights {} kg.\", weight);\r\n} else {\r\n    println!(\"get a cat\");\r\n};\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66588638","Title":"Rust: Implicitly convert from usize to the corresponding int type","Uri":"https://stackoverflow.com/a/66588638/14004262","Date":{"Unix":1615488316},"Text":"You can use the [`TryInto`][1] trait in function arguments to do implicit conversions from the perspective of callers. It still involves conversion, but it moves the complexity to the function being called:\r\n\r\n```rust\r\nuse std::convert::TryInto;\r\n\r\nfn stuff(val: impl TryInto<i32>) {\r\n    // use try_into trait method\r\n    let val = match val.try_into() {\r\n        Ok(v) => v,\r\n        Err(_) => panic!(\"couldn't fit in i32\"),\r\n    };\r\n    println!(\"in stuff: val has {} leading zeros\", val.leading_zeros());\r\n}\r\n\r\nfn main() {\r\n    let letters = ['a', 'b', 'c'];\r\n    let len = letters.len();\r\n    println!(\"in main: len has {} leading zeros\", len.leading_zeros());\r\n    stuff(len); // implict conversion\r\n}\r\n```\r\noutputs\r\n```\r\nin main: len has 62 leading zeros\r\nin stuff: val has 30 leading zeros\r\n```\r\n[Try on the playground][2]\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/stable/std/convert/trait.TryInto.html\r\n  [2]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9a8889b4750752c64a570368a0f61f6d","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66573126","Title":"Rust: Write stdout into a buffer or String","Uri":"https://stackoverflow.com/a/66573126/14004262","Date":{"Unix":1615411673},"Text":"`Command` output is represented as a series of bytes. Use [`std::str::from_utf8`][1] to convert it to a `str`:\r\n\r\n```rust\r\nuse std::str;\r\nlog.push_str(match str::from_utf8(&output.stdout) {\r\n    Ok(val) => val,\r\n    Err(_) => panic!(\"got non UTF-8 data from git\"),\r\n});\r\n```\r\n[Try it in the playground][2]\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/stable/std/str/fn.from_utf8.html\r\n  [2]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5ec59d316ef16e96718af1ecb1ebe9a3","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66570257","Title":"GitHub what causes gaps in issue #Number (404 This is Not...)","Uri":"https://stackoverflow.com/a/66570257/14004262","Date":{"Unix":1615398755},"Text":"From experience, I've seen that issues and pull requests will 404 if GitHub's filtering system or moderators decide that a PR/issue is spam.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66566283","Title":"Why mutable reference on `const` is not an error?","Uri":"https://stackoverflow.com/a/66566283/14004262","Date":{"Unix":1615384801},"Text":"Taking a mutable reference to a constant creates a new, temporary variable. Your code is treated by the compiler as:\r\n```\r\nfn main() {\r\n    const VALUE : u64 = 0;\r\n    println!(\"{:p}\", &VALUE);      // 0x10622ed78 // same\r\n    println!(\"{:p}\", &VALUE);      // 0x10622ed78\r\n    let mut tmp1 = VALUE;\r\n    println!(\"{:p}\", &mut tmp1);  // 0x7ffee9a08890 // different\r\n    let mut tmp2 = VALUE;\r\n    println!(\"{:p}\", &mut tmp2);  // 0x7ffee9a088e8\r\n}\r\n```\r\n[Try in playground][1]\r\n\r\nThis seems like a weird way to do things, there are legitimate use cases for this behaviour when constants are [function pointers][2] or [have interior mutability][3].\r\n\r\n\r\n  [1]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=094d80acfd09f9880bbf08ccd0171a7a\r\n  [2]: https://github.com/rust-lang/rust/issues/55721#issuecomment-643452554\r\n  [3]: https://github.com/rust-lang/rust/issues/55721#issuecomment-643454340","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66565925","Title":"svelte : embedded github gist throws Failed to execute 'write' on 'Document'","Uri":"https://stackoverflow.com/a/66565925/14004262","Date":{"Unix":1615383612},"Text":"You can work around this by rendering the Gist in an `<iframe>`:\r\n\r\n```html\r\n<!-- Gist.svelte -->\r\n<script>\r\n  export let gistUrl = \"\"\r\n\r\n  import { onMount } from 'svelte'\r\n\r\n  let frame;\r\n  onMount(() => {\r\n    frame.srcdoc = `<script src='${gistUrl}.js'><${\"\"}/script>`;\r\n  });\r\n</script>\r\n<style>\r\n  iframe {\r\n    border: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n</style>\r\n<iframe src=\"about:blank\" bind:this={frame} title=\"Gist\"></iframe>\r\n```\r\n\r\n[Try it in the REPL][1]\r\n\r\n\r\n  [1]: https://svelte.dev/repl/2d4d41df9f404b2d896bb81c55cb75c0?version=3.35.0","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66551804","Title":"How do I get a bytes::bytes::Bytes from a std::string::String?","Uri":"https://stackoverflow.com/a/66551804/14004262","Date":{"Unix":1615310593},"Text":"[`Bytes`][1] implements [`From`][2]/[`Into`][3] for [`String`][4] to allow conversion from strings to the bytes representing that string in [UTF-8][5]:\r\n\r\n```rust\r\nuse bytes::Bytes;\r\nfn main() {\r\n    let string = \"d√©monstration\".to_string();\r\n    println!(\"{:?}\", string); // \"d√©monstration\"\r\n    let bytes: Bytes = string.into();\r\n    println!(\"{:?}\", bytes); // b\"d\\xc3\\xa9monstration\"\r\n}\r\n```\r\n[Try it in the playground][6]\r\n\r\n\r\n  [1]: https://docs.rs/bytes/1.0.1/bytes/struct.Bytes.html\r\n  [2]: https://doc.rust-lang.org/stable/std/convert/trait.From.html\r\n  [3]: https://doc.rust-lang.org/stable/std/convert/trait.Into.html\r\n  [4]: https://doc.rust-lang.org/stable/std/string/struct.String.html\r\n  [5]: https://en.wikipedia.org/wiki/UTF-8\r\n  [6]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f3bf56875a29331656f343e864b37654","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66521444","Title":"macos clipboard is parsing \"/n\" as \"‚èé\"","Uri":"https://stackoverflow.com/a/66521444/14004262","Date":{"Unix":1615151305},"Text":"When [eagerly evaluating][1] expressions, Chrome puts the entire output on one line. Hit enter to (uneagerly) evaluate the expression for real  to get the actual value without ‚èés.\r\n\r\n\r\n  [1]: https://developers.google.com/web/updates/2018/05/devtools#eagerevaluation","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66511613","Title":"Rust trying to maintain self-defined list: cannot borrow `self.array` as mutable more than once at a time","Uri":"https://stackoverflow.com/a/66511613/14004262","Date":{"Unix":1615072081},"Text":"Rust doesn't allow multiple mutable references to the same variable at the same time. The easiest way to fix this would be to interleave the borrows, and borrow `n` immutably, since you never mutate it:\r\n\r\n```rust\r\npub fn move_black_to_red(& mut self, idx: i32){\r\n    let n: Node = self.data[idx as usize];\r\n\r\n    let prev: & mut Node = & mut self.data[n.get_prev() as usize];\r\n    prev.set_next(n.get_next());\r\n\r\n    let next: & mut Node = & mut self.data[n.get_next() as usize];\r\n    next.set_prev(n.get_prev());\r\n\r\n    //other stuff...\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66457303","Title":"Error selenium wire linux with dependency cryptography","Uri":"https://stackoverflow.com/a/66457303/14004262","Date":{"Unix":1614775272},"Text":"`rustc` failed compilation with a `SIGKILL`. This probably happened as a result of it using up too much memory, and the [OOM manager deciding to kill it][1], since the `syn` crate is quite large and requires a lot of RAM to compile. Getting more RAM, or increasing the amount of swap space will allow the compilation to finish.\r\n\r\n\r\n  [1]: https://www.kernel.org/doc/gorman/html/understand/understand016.html#htoc102","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66422468","Title":"How to run a single doc test in Rust?","Uri":"https://stackoverflow.com/a/66422468/14004262","Date":{"Unix":1614602945},"Text":"You can run doc-tests at the granularity of individual documented items.\r\n\r\nIf you have some source code like this:\r\n```rust\r\n/// ## Example\r\n/// ```\r\n/// panic!(\"doctest #1\");\r\n/// ```\r\n/// ```\r\n/// panic!(\"doctest #2\");\r\n/// ```\r\npub fn first() {}\r\n\r\n/// ## Example\r\n/// ```\r\n/// panic!(\"doctest #3\");\r\n/// ```\r\npub fn second() {}\r\n```\r\n\r\nThen you can run `cargo test --doc first` to run `doctest #1` and `doctest #2`, and `cargo test --doc second` to run `doctest #3`. Any tests with a path matching the string after `--doc` will be run.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66410261","Title":"Function that gets slice of strings and extracts them as arguments to shell command in Rust","Uri":"https://stackoverflow.com/a/66410261/14004262","Date":{"Unix":1614523547},"Text":"Use [`Command::args`][1]:\r\n\r\n```rust\r\nfn apt_install(package_name: &str, options: &[&str]) {\r\n    let mut c = Command::new(\"apt-get\")\r\n        .arg(\"install\")\r\n        .args(options)\r\n        .spawn()\r\n        .expect(format!(\"Failed to install {}\", package_name).as_str());\r\n    c.wait().unwrap();\r\n}\r\n```\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/stable/std/process/struct.Command.html#method.args","Verbose":1},
{"Type":"SePost","Id":"se-codegolf-220170","Title":"Convert Gemtext to HTML","Uri":"https://codegolf.stackexchange.com/a/220170/14004262","Date":{"Unix":1614794454},"Text":"# [sed 4.2.2], 160 bytes\r\n\r\n```sed\r\ns!&!&amp;!g\r\ns!<!\\&lt;!g\r\ns!>!\\&gt;!g\r\ns!\"!\\&#34;!g\r\nta\r\n:a\r\ns!^*\\(.*\\)!<li>\\1</li>!\r\ns!^#\\(.*\\)!<h1>\\1</h1>!\r\ns!=&gt; \\([^ ]*\\)\\(.*\\)!<a href=\"\\1\">\\2</a>!\r\nt\r\ni<p>\r\na</p>\r\n```\r\n\r\n[Try it online!][TIO-kltqsjy9]\r\n\r\n[sed 4.2.2]: https://www.gnu.org/software/sed/\r\n[TIO-kltqsjy9]: https://tio.run/##TZDBasMwEETv@oqVAybNwSZtT6ks0lNpDy2U9FQ3sIk3lqltGUkB/326SmJSEGj0ZjRa5Kk6nbxMZYrd8CRr4aWSZdqGi9as66tOWM8eHuMhoFgho@2inGeL8k6qttHlUuW8ychnEzfLM@ct8iKWQTn/3sIP21MIwTg6FEm5THR5r3LkcBCNGrRAlQ/6dJrBxjQeeHGWsGr6GhBRKKWEFqlIxOQHQ3BonA8woMPa4WCymFzwzbZh3ATqrqC3nHY3fK78X@Rpb/vq1gQpoz5QvyeQOhOFBhPCsMpzGvn/Wsqsq3N43nnbHgPB1@drzFxtNfnvFvzeUHcLOLuzwWdhDPB25GmQ3wwm2kqvP9bJOo2xF@o2NF7cmnju/jfiURTgjT22FezobDoUxQgeO/oD \"sed 4.2.2 ‚Äì Try It Online\"","Verbose":1},
{"Type":"SePost","Id":"se-codegolf-219993","Title":"Print A-Z and their alphabet index without using 1,2,4,6","Uri":"https://codegolf.stackexchange.com/a/219993/14004262","Date":{"Unix":1614549180},"Text":"# [Rust][1], 56 bytes\r\n```rust\r\n||for(i,x)in(9..).zip('A'..'['){print!(\"{}. {}\r\n\",i-8,x)}\r\n```\r\n\r\n\r\n  [1]: https://rust-lang.org/","Verbose":1},
{"Type":"SePost","Id":"se-codegolf-219932","Title":"Collatz Conjecture (OEIS A006577)","Uri":"https://codegolf.stackexchange.com/a/219932/14004262","Date":{"Unix":1614470889},"Text":"# Rust, 62 bytes\r\n```rust\r\nfn c(x:u8)->u8{if x==1{0}else{c(if x%2==0{x/2}else{x*3+1})+1}}\r\n```\r\n\r\nThis recursively determines the total. For 2 extra bytes `u8` can be changed to `u64` to support all 64-bit integers instead of just 8-bit ones.","Verbose":1},
{"Type":"note","Date":{"Unix":1615179600},"Title":"First note","Text":"\nIf you are reading this, then I've sucessfully set up my notes system. This is for notes with less content than full blog posts.\n\n", "Verbose": 1, "Id": "allsh-first-note"}
]
