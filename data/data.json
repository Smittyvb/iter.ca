[
{"Type":"note","Id":"note-0friction","NoteType":"Game","Date":{"Unix":1567915200},"Uri":"https://smitop.com/no-friction.html","Title":"0friction","Verbose":0,"Text":"\nA game with slippery controls.\n"},
{"Type":"note","Id":"note-int-mod-n","NoteType":"Math demo","Title":"Integers mod ùëõ under multiplication","Date":{"Unix":1617926400},"Uri":"https://smitop.com/int-mod-n.html","Thumb":"/intmod200.png","Verbose":0,"Text":"\n"},
{"Type":"note","Id":"note-learnlake","NoteType":"Game","Title":"LearnLake","Date":{"Unix":1523577600},"Uri":"https://learnlake.com/","Verbose":0,"Text":"A small educational website.\n\n"},
{"Type":"note","Id":"note-mova","NoteType":"Game","Date":{"Unix":1578027600},"Uri":"https://smitop.com/mova.html","Title":"Mova","Verbose":0,"Text":"\nA game where you avoid tiny squares.\n\n"},
{"Type":"note","Id":"note-nini","Title":"Nini","Date":{"Unix":1547442000},"Uri":"https://nini.smitop.com/","NoteType":"Website","Verbose":0,"Text":"Tools for the Nimiq blockchain.\n\n"},
{"Type":"note","Id":"note-shift-key","Date":{"Unix":1571889600},"Uri":"https://smitop.com/shift-key.html","Title":"Is your shift key pressed?","NoteType":"Web app","Verbose":0,"Text":"\nWondering if your shift key is pressed? Not anymore.\n"},
{"Type":"note","Id":"note-speakscribe","NoteType":"Web app","Date":{"Unix":1561593600},"Uri":"https://speakscribe.com/","Title":"SpeakScribe","Verbose":0,"Text":"\nA dictation website that uses Web APIs.\n"},
{"Type":"note","Id":"note-sqgame","NoteType":"Game","Date":{"Unix":1567310400},"Uri":"https://smitop.com/square-game/","Title":"Square game","Verbose":0,"Text":"\nA game that involves squares.\n\n"},
{"Type":"note","Id":"note-transform","NoteType":"Web app","Date":{"Unix":1615611600},"Uri":"https://smitop.com/transform-playground/","Title":"Linear transformation playground","Verbose":0,"Text":"\nPlay with some linear transformations in your browser!\n\n"},
{"Type":"note","Id":"note-ttw","Title":"TagTime Web","Uri":"https://ttw.smitop.com/","NoteType":"Web app","Date":{"Unix":1597896000},"Verbose":-1,"Text":"Time tracking that randomly samples you.\n\n"},
{"Type":"note","Id":"note-upload2ipfs","Title":"Upload2IPFS","Uri":"https://upload2ipfs.smitop.com/","NoteType":"Web app","Date":{"Unix":1559606400},"Verbose":0,"Text":"Upload files to the IPFS network online.\n\n"},
{"Type":"video","Thumb":"/yt-thumbs/LnNSImhEOpE.jpg","Uri":"https://youtube.com/watch?v=LnNSImhEOpE","Title":"Visualizing expression parsing","Date":{"Unix":1617580800},"Id":"yt-vid-LnNSImhEOpE"},
{"Type":"video","Thumb":"/yt-thumbs/z7OpLXpj0xg.jpg","Uri":"https://youtube.com/watch?v=z7OpLXpj0xg","Title":"Transition with object across the screen in Blender","Date":{"Unix":1599177600},"Id":"yt-vid-z7OpLXpj0xg"},
{"Type":"video","Thumb":"/yt-thumbs/hWXPaYslq7k.jpg","Uri":"https://youtube.com/watch?v=hWXPaYslq7k","Title":"Taking a screenshot of a scrolling webpage in Chrome","Date":{"Unix":1597276800},"Id":"yt-vid-hWXPaYslq7k"},
{"Type":"video","Thumb":"/yt-thumbs/FwpF0fqh7uU.jpg","Uri":"https://youtube.com/watch?v=FwpF0fqh7uU","Title":"TagTime Web - basic usage","Date":{"Unix":1597795200},"Id":"yt-vid-FwpF0fqh7uU"},
{"Type":"video","Thumb":"/yt-thumbs/HE-t5aj8BvA.jpg","Uri":"https://youtube.com/watch?v=HE-t5aj8BvA","Title":"UUIDv3/5 generation","Date":{"Unix":1593734400},"Id":"yt-vid-HE-t5aj8BvA"},
{"Type":"video","Thumb":"/yt-thumbs/THrlm3_c_YA.jpg","Uri":"https://youtube.com/watch?v=THrlm3_c_YA","Title":"Understanding Polish notation","Date":{"Unix":1584489600},"Id":"yt-vid-THrlm3_c_YA"},
{"Type":"video","Thumb":"/yt-thumbs/yr-rNnk-4Gw.jpg","Uri":"https://youtube.com/watch?v=yr-rNnk-4Gw","Title":"Ship lock","Date":{"Unix":1600128000},"Id":"yt-vid-yr-rNnk-4Gw"},
{"Type":"video","Thumb":"/yt-thumbs/GT6qpwlFhq0.jpg","Uri":"https://youtube.com/watch?v=GT6qpwlFhq0","Title":"How big is the set of subsets?","Date":{"Unix":1611014400},"Id":"yt-vid-GT6qpwlFhq0"},
{"Type":"video","Thumb":"/yt-thumbs/-xAFdVqwTn4.jpg","Uri":"https://youtube.com/watch?v=-xAFdVqwTn4","Title":"What changed in Google Drive on Sept. 30","Date":{"Unix":1595894400},"Id":"yt-vid--xAFdVqwTn4"},
{"Type":"video","Thumb":"/yt-thumbs/dOQMqa86NF0.jpg","Uri":"https://youtube.com/watch?v=dOQMqa86NF0","Title":"Using proxies in Blender 2.82+ VSE","Date":{"Unix":1585008000},"Id":"yt-vid-dOQMqa86NF0"},
{"Type":"video","Thumb":"/yt-thumbs/5fh2oeugfbk.jpg","Uri":"https://youtube.com/watch?v=5fh2oeugfbk","Title":"Log-me-in challenge for Google CTF 2020","Date":{"Unix":1600041600},"Id":"yt-vid-5fh2oeugfbk"},
{"Type":"video","Thumb":"/yt-thumbs/NV4IQLs-WIs.jpg","Uri":"https://youtube.com/watch?v=NV4IQLs-WIs","Title":"UUIDv4 in 40 seconds","Date":{"Unix":1597017600},"Id":"yt-vid-NV4IQLs-WIs"},
{"Type":"video","Thumb":"/yt-thumbs/aLYKd7h7vgY.jpg","Uri":"https://youtube.com/watch?v=aLYKd7h7vgY","Title":"How Snowflake IDs work","Date":{"Unix":1601510400},"Id":"yt-vid-aLYKd7h7vgY"},
{"Type":"video","Thumb":"/yt-thumbs/46AKWNOJ3-Y.jpg","Uri":"https://youtube.com/watch?v=46AKWNOJ3-Y","Title":"How HOTP and TOTP work","Date":{"Unix":1604102400},"Id":"yt-vid-46AKWNOJ3-Y"},
{"Type":"video","Thumb":"/yt-thumbs/cJpE018QEkQ.jpg","Uri":"https://youtube.com/watch?v=cJpE018QEkQ","Title":"What is stochastic time tracking?","Date":{"Unix":1598313600},"Id":"yt-vid-cJpE018QEkQ"},
{"Type":"video","Thumb":"/yt-thumbs/_KzQqfhQsck.jpg","Uri":"https://youtube.com/watch?v=_KzQqfhQsck","Title":"Why perfect squares have an odd number of factors","Date":{"Unix":1585785600},"Id":"yt-vid-_KzQqfhQsck"},
{"Type":"video","Thumb":"/yt-thumbs/jqorVoYEd68.jpg","Uri":"https://youtube.com/watch?v=jqorVoYEd68","Title":"The Rendezvous Problem","Date":{"Unix":1576627200},"Id":"yt-vid-jqorVoYEd68"},
{"Type":"video","Thumb":"/yt-thumbs/9sXEBzI1R5Q.jpg","Uri":"https://youtube.com/watch?v=9sXEBzI1R5Q","Title":"What's the Pareto frontier?","Date":{"Unix":1609718400},"Id":"yt-vid-9sXEBzI1R5Q"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1618882019},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26869777","Id":"hn-post-26869777","Text":"Using SO data for purposes like that is allowed under the CC licence used. You don&#x27;t even need to do any scraping, since you can download an offical data dump of all SO answers at <a href=\"https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;stackexchange\" rel=\"nofollow\">https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;stackexchange</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1618752596},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26852264","Id":"hn-post-26852264","Text":"There is work on integrating Cranelift into rustc (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;bjorn3&#x2F;rustc_codegen_cranelift\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;bjorn3&#x2F;rustc_codegen_cranelift</a>) so that rustc can compile to bytecode for the Cranelift JIT."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1618498862},"Comments":85,"Uri":"https://news.ycombinator.com/item?id=26821298","Id":"hn-post-26821298","Title":"The Sisyphean Task of DNS Client Config on Linux","Score":167},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617669038},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26706551","Id":"hn-post-26706551","Text":"&gt; CNBC has learned<p>This isn&#x27;t new information. Google has already been saying this on a (very obscure) blog months ago: <a href=\"https:&#x2F;&#x2F;support.google.com&#x2F;corporate-suppliers&#x2F;announcements&#x2F;9954400\" rel=\"nofollow\">https:&#x2F;&#x2F;support.google.com&#x2F;corporate-suppliers&#x2F;announcements...</a><p>They are changing over on May 3."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617319008},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26667492","Id":"hn-post-26667492","Text":"Just got another email from them, apparently &quot;the issue appears to have been resolved with Microsoft Azure&quot;. Looks like the problem is resolved"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617317739},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26667304","Id":"hn-post-26667304","Text":"Looks like this took down the national emergency alert system in Canada. I&#x27;m registered as an alert LMD (last mile distributor), and Pelmorex (corporation running the system) just emailed me to say &quot;Please note that currently there is an unexpected significant outage on Microsoft Azure that is affecting the availability of the NAADS system and other clients globally. The NAAD System feeds are currently not accessible. We are following up on this and we will update you as soon as the issue is resolved.&quot;.<p>I sure hope there aren&#x27;t any emergencies in Canada until this is resolved..."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1617035670},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26624355","Id":"hn-post-26624355","Text":"CloudFlare has a &quot;Auto&quot; TTL option, which is the default, and required to be used when reverse proxying through CloudFlare. There is nothing magical about &quot;Auto&quot; TTL, though: it appears to literally always be 299 seconds. A lot of low TTLs you see are probably caused by CloudFlare."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1616269103},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26525555","Id":"hn-post-26525555","Text":"IIRC you have to use their more expensive Tesla cards for these use cases. These cards are basically the same as consumer GPUs with more permissive driver licensing"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615939561},"Comments":1,"Uri":"https://news.ycombinator.com/item?id=26484918","Id":"hn-post-26484918","Title":"The next generation of WHOIS is born","Score":1},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615741722},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26456865","Id":"hn-post-26456865","Title":"How to Safely Implement ‚ÄúUsing Uninitialized Memory for Fun and Profit‚Äù?","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615490869},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26427954","Id":"hn-post-26427954","Title":"GitHub Blocked in China","Score":4},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1615412001},"Comments":95,"Uri":"https://news.ycombinator.com/item?id=26416553","Id":"hn-post-26416553","Title":"netaddr.IP: a new IP address type for Go","Score":368},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1615233925},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26390778","Id":"hn-post-26390778","Text":"Recently I was curious as to how the wireless emergency alert systems work. But the actual specifications [1] from ATIS (another standardisation body) that carriers are required to implement are paywalled with ridiculous prices. $145 for a 35 page PDF is way too much, and makes the whole system way less transparent.<p>[1] e.g. <a href=\"https:&#x2F;&#x2F;www.techstreet.com&#x2F;standards&#x2F;atis-0700036-v002?product_id=2044512\" rel=\"nofollow\">https:&#x2F;&#x2F;www.techstreet.com&#x2F;standards&#x2F;atis-0700036-v002?produ...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1614704568},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26317457","Id":"hn-post-26317457","Text":"The Firebase Data Processing and Security Terms [1] (section 5.2.1)  limit Google&#x27;s usage of any data they obtain through Firebase and would seem to prevent that sort of tracking.<p>[1] <a href=\"https:&#x2F;&#x2F;firebase.google.com&#x2F;terms&#x2F;data-processing-terms#5.processing-of-data\" rel=\"nofollow\">https:&#x2F;&#x2F;firebase.google.com&#x2F;terms&#x2F;data-processing-terms#5.pr...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1614605270},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26302540","Id":"hn-post-26302540","Text":"I think you misread the sentence. It&#x27;s not the largest value JS can represent, it&#x27;s the largest value it can &quot;reliably represent&quot;. After 2^53 - 1 you get incorrect results when dealing with integers, making the results not &quot;reliable&quot;."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1614116682},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26243309","Id":"hn-post-26243309","Title":"Repl.it user content detected as Dangerous by Google Safe Browsing","Score":1},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1613867459},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26209573","Id":"hn-post-26209573","Title":"Child protection nonprofit alleges 'manipulative' upselling in math game Prodigy","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1612879111},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26077467","Id":"hn-post-26077467","Text":"They tried that at one point, and it didn&#x27;t work out very well for them: <a href=\"https:&#x2F;&#x2F;blog.nearlyfreespeech.net&#x2F;2013&#x2F;12&#x2F;27&#x2F;member_support_points_out&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;blog.nearlyfreespeech.net&#x2F;2013&#x2F;12&#x2F;27&#x2F;member_support_...</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1612574126},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26043203","Id":"hn-post-26043203","Title":"What Is WofCompressedData?","Score":2},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1612483281},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=26031266","Id":"hn-post-26031266","Title":"Avoiding FAQs, with One Exception","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1610826322},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=25804840","Id":"hn-post-25804840","Text":"Some web hosts use Safe Browsing to automatically perm-ban any sites on the list. I&#x27;ve been banned from Heroku for a couple years at this point because one of my sites got added to Safe Browsing as malware and Heroku&#x27;s systems just automatically perm-banned me (and to make things worse, in the ban email they tell you to send ban appeals to just bounces)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1609705088},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=25624848","Id":"hn-post-25624848","Text":"Here&#x27;s a list of implementations: <a href=\"http:&#x2F;&#x2F;doc.beeminder.com&#x2F;tagtime\" rel=\"nofollow\">http:&#x2F;&#x2F;doc.beeminder.com&#x2F;tagtime</a> (I also wrote a web implementation: <a href=\"https:&#x2F;&#x2F;ttw.smitop.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;ttw.smitop.com&#x2F;</a>)"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1599942502},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=24455343","Id":"hn-post-24455343","Title":"Show HN: Stochastic time tracking online","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1596479271},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=24041465","Id":"hn-post-24041465","Text":"No. There is no version of the env! or include_str! macro! in C++ (they are implemented in the compiler for Rust). These macros can be used to the get the values of environment variables or the contents of arbitrary files at compile time. You could of course implement them within a build system, but there isn&#x27;t a way to replicate these macros with just pure C++ being passed to a compiler, even with pre-processor macros."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1594296759},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23779312","Id":"hn-post-23779312","Text":"&gt; it&#x27;s theoretically possible for it to create an entire simulated CPU<p>A Javascript x86 implementation already exists: <a href=\"https:&#x2F;&#x2F;copy.sh&#x2F;v86&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;copy.sh&#x2F;v86&#x2F;</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1594243401},"Comments":540,"Uri":"https://news.ycombinator.com/item?id=23774394","Id":"hn-post-23774394","Title":"Reddit's website uses DRM for fingerprinting","Score":1099},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1593882407},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23733532","Id":"hn-post-23733532","Title":"The Making of an Underclass: AOL (1997)","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1593127275},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23646901","Id":"hn-post-23646901","Text":"This is probably the keyboard adjusting the tap area of the keys based on the predicted likelyhood of that key being pressed: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?time_continue=20&amp;v=wPmVKyhyl9U\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?time_continue=20&amp;v=wPmVKyhyl9U</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1592605086},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23579404","Id":"hn-post-23579404","Text":"Here are the App Store Review Guidelines, section 3 is about in-app purchases: <a href=\"https:&#x2F;&#x2F;developer.apple.com&#x2F;app-store&#x2F;review&#x2F;guidelines&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;developer.apple.com&#x2F;app-store&#x2F;review&#x2F;guidelines&#x2F;</a>"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1592602499},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23579084","Id":"hn-post-23579084","Title":"Show HN: Generating Knowledge Panels","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1592083989},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23512941","Id":"hn-post-23512941","Text":"You can pass &quot;-C overflow-checks=on&quot; to rustc to generate an optimized build with over&#x2F;underflow checks enabled, even in a release build. Also, note that over&#x2F;underflow behavior is defined to always be two&#x27;s compliment wrapping when overflow checks are disabled."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1591635588},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23458326","Id":"hn-post-23458326","Text":"DuckDuckGo pays money to Bing to use their API [1], presumably enough to outweigh any loss of revenue. DDG also uses Bing&#x27;s ad network, so Bing makes money regardless of what engine a search is made on.<p>Also, there&#x27;s speculation that Microsoft is starting to give up on getting wide adoption for Bing among consumers [2], and given Bing&#x27;s low market share, Microsoft has probably determined that Bing is <i>never</i> going to get widely adopted enough to the point where having a deal with DDG would be a bad idea.<p>[1] <a href=\"https:&#x2F;&#x2F;help.duckduckgo.com&#x2F;results&#x2F;sources&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;help.duckduckgo.com&#x2F;results&#x2F;sources&#x2F;</a>\n[2] <a href=\"https:&#x2F;&#x2F;futurism.com&#x2F;the-byte&#x2F;microsoft-giving-up-people-using-bing\" rel=\"nofollow\">https:&#x2F;&#x2F;futurism.com&#x2F;the-byte&#x2F;microsoft-giving-up-people-usi...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1591185251},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23402370","Id":"hn-post-23402370","Text":"Their terms of service disallow reverse-engineering or even disassembling the binaries: <a href=\"https:&#x2F;&#x2F;zoom.us&#x2F;terms\" rel=\"nofollow\">https:&#x2F;&#x2F;zoom.us&#x2F;terms</a><p>&gt; You agree that You will not use, and will not permit any End User to use, the Services to: (i) modify, disassemble, decompile, prepare derivative works of, reverse engineer or otherwise attempt to gain access to the source code of the Services"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1590440160},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23304884","Id":"hn-post-23304884","Text":"If these companies notice, they can file a UDRP (<a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Uniform_Domain-Name_Dispute-Resolution_Policy\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Uniform_Domain-Name_Dispute-Re...</a>) request, on the basis that the domains infringe their trademarks, and were registered and used in &quot;bad faith&quot;."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1590245615},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23283423","Id":"hn-post-23283423","Text":"You can sideload on Chromebooks if you enable developer mode. But enabling developer mode wipes all data on the system and displays a warning message on boot."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1589220141},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23145042","Id":"hn-post-23145042","Title":"The Power of Dijkstra Maps","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1588536590},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23061491","Id":"hn-post-23061491","Text":"This has happened to me. I have been able to get it to work by retrying the download until it works, it took me three tries. If that still doesn&#x27;t work, Google Takeout supports splitting the download into smaller 1 gigabyte chunks which should hopefully be downloadable fast enough. Still annoying though."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1588091931},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=23008746","Id":"hn-post-23008746","Text":"When 5 rounds up, you can easily implement rounding as floor(x + 0.5)."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1587470540},"Comments":37,"Uri":"https://news.ycombinator.com/item?id=22934126","Id":"hn-post-22934126","Title":"SYN cookies ate my dog ‚Äì breaking TCP on Linux (2018)","Score":130},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1586710503},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22849427","Id":"hn-post-22849427","Text":"Their Terms of Service (<a href=\"https:&#x2F;&#x2F;help.github.com&#x2F;en&#x2F;github&#x2F;site-policy&#x2F;github-terms-of-service\" rel=\"nofollow\">https:&#x2F;&#x2F;help.github.com&#x2F;en&#x2F;github&#x2F;site-policy&#x2F;github-terms-o...</a>) say:\nOne person or legal entity may maintain no more than one free Account (if you choose to control a machine account as well, that&#x27;s fine, but it can only be used for running a machine)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1586218651},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22799219","Id":"hn-post-22799219","Text":"Just tested this, I was able to create an account without a phone number. I think it doesn&#x27;t require a phone number if Botguard is highly confident you aren&#x27;t a bot. (it does recommend adding a phone number for 2FA though) Also, I created the account through ChromeOS settings, which perhaps is a signal that I&#x27;m not a bot?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1586092226},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22785399","Id":"hn-post-22785399","Text":"&gt; If you wish to make more than 1k calls per second or 1m calls per month, you must use reCAPTCHA Enterprise or fill out this form and wait for an exception approval.<p>According to <a href=\"https:&#x2F;&#x2F;developers.google.com&#x2F;recaptcha&#x2F;docs&#x2F;faq#are-there-any-qps-or-daily-limits-on-my-use-of-recaptcha\" rel=\"nofollow\">https:&#x2F;&#x2F;developers.google.com&#x2F;recaptcha&#x2F;docs&#x2F;faq#are-there-a...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1583963341},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22551147","Id":"hn-post-22551147","Text":"You can bypass hard HSTS errors in Chrome by typing in &quot;thisisunsafe&quot;. There is no textbox to type it into, you have the press the letters on your keyboard blindly."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1583451995},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22499691","Id":"hn-post-22499691","Text":"It is still possible for websites to access indexedDB by using Web Workers:<p><pre><code>  new Worker(&quot;data:application&#x2F;javascript,console.log(&#x27;indexedDB: &#x27;, indexedDB)&quot;)\n</code></pre>\nThis works since userscripts only run in top-level websites and frames, but the above code runs JS code in a seperate thread with no attached DOM."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1583450663},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22499497","Id":"hn-post-22499497","Text":"They used to be a reseller, but in early 2018 they completely moved off of Enom and registered domains directly: <a href=\"http:&#x2F;&#x2F;domainincite.com&#x2F;22467-namecheap-to-bring-millions-of-domains-in-house-next-week\" rel=\"nofollow\">http:&#x2F;&#x2F;domainincite.com&#x2F;22467-namecheap-to-bring-millions-of...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1581549991},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22313893","Id":"hn-post-22313893","Text":"On a related note, if you start an SMS with &quot;!&quot;, then the leading exclamation point will be stripped, and a delivery confirmation SMS will automatically be sent (not sure if it&#x27;s from the mobile network or the receiving phone). This makes it possible to send zero-character SMSes."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1579006395},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=22044308","Id":"hn-post-22044308","Text":"It is still possible to determine what browser caused an exception. The &quot;sec-ch-ua&quot; header is used by Chrome (but only to HTTPS websites) to send the &quot;real&quot; user agent, which for me is &quot;Google Chrome 79&quot; (and I am indeed running Google Chrome 79)."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1577831664},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21925233","Id":"hn-post-21925233","Text":"Since GH URLs are github.com&#x2F;&lt;name&gt;, you also can&#x27;t register usernames like @login, since that would cause a conflict. However, @case-studies and @customer-stories both are content pages (well &#x2F;case-studies redirects to &#x2F;customer-stories) and users. Those two users also cause weird things when interacting with the website and API."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1575486526},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21705785","Id":"hn-post-21705785","Text":"On most lyric search results, Google cites LyricFind as the source: <a href=\"https:&#x2F;&#x2F;www.lyricfind.com\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lyricfind.com</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1573129657},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21472550","Id":"hn-post-21472550","Text":"It doesn&#x27;t appear they have a CLA. The old license was BSD 3-clause, which states:\n&gt; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n&gt; 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and&#x2F;or other materials provided with the distribution.<p>And nowhere is that list to be found. So it appears Sentry is violating the license for external contributions."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1573002415},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21458748","Id":"hn-post-21458748","Text":"For those interested, the demo instance is at <a href=\"https:&#x2F;&#x2F;sandbox.ebay.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;sandbox.ebay.com&#x2F;</a> The message at the top says &quot;eBay and PayPal will be separate companies soon&quot;, even though they became seperate companies 4 years ago."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1572210642},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21372425","Id":"hn-post-21372425","Text":"The recent Canada federal election used paper ballots (all of them have), and those attacks are mostly preventable. Ballots are counted by two people from Elections Canada, and all candidates can watch. The match up the number of ballots with the number of people crossed off on the list of people who were eligible to vote at that polling station. They also compare it to the number of ballots at the start of polling and end of polling. If votes were added or removed, those checks wouldn&#x27;t work out (and there would probably be a re-vote for people who voted at that polling station). Adding marks before people vote wouldn&#x27;t work since voters would probably notice, and it&#x27;d be hard to add marks between marking the ballot and it being put in the ballot box. Ballots also need to be signed by the chief returning officer."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1570894974},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21233988","Id":"hn-post-21233988","Text":"The Canadian Human Rights Act states:<p>&gt; Every person who is an employee has a right to freedom from harassment in the workplace because of sex, sexual orientation, gender identity or gender expression by his or her employer or agent of the employer or by another employee.<p>(there is also a similar paragraph for landlords)<p>&gt; ‚Äúharassment‚Äù means engaging in a course of vexatious comment or conduct that is known or ought reasonably to be known to be unwelcome"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1570388179},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21174131","Id":"hn-post-21174131","Text":"Amusement ride tickets have inherient utility: you can redeem them for a ride. What utility can you get from BAT, other than selling it?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568984317},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21026167","Id":"hn-post-21026167","Text":"&gt; the repo &quot;network&quot;<p>This is actually an optimization done by GitHub. It would take up  a lot of space if GitHub copied the entire repo every time someone forked it, so they keep all the commits in the original repo. As a side effect, commits in forks are accessible from the original repo since commits from both repos are stored in the same place."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568846309},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21011174","Id":"hn-post-21011174","Text":"Probably the upcoming Area 51 raid: <a href=\"https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Storm_Area_51,_They_Can%27t_Stop_All_of_Us\" rel=\"nofollow\">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Storm_Area_51,_They_Can%27t_...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568846227},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=21011156","Id":"hn-post-21011156","Text":"When I read the headline I assumed it meant that GitHub was hiring an employee named Semmle, which confused me until I realized Semmle was a business."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568467978},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20970659","Id":"hn-post-20970659","Text":"Stripe Issuing lets you specify a webhook can approve&#x2F;decline transactions [1], so you could use that to only approve transactions at a certain movie theater.<p>[1] <a href=\"https:&#x2F;&#x2F;stripe.com&#x2F;docs&#x2F;issuing&#x2F;authorizations\" rel=\"nofollow\">https:&#x2F;&#x2F;stripe.com&#x2F;docs&#x2F;issuing&#x2F;authorizations</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1568146217},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20933092","Id":"hn-post-20933092","Text":"&gt; couldn&#x27;t find nofollows on either HN or Reddit links\nHN nofollows job ads and posts under ~10 points (it&#x27;s 5 in the opensource code, but it seems HN has been modified there). \nOld reddit has rel=&quot;nofollow&quot; but then removes it via JavaScript for some reason. NewReddit displays OldReddit if it detects Googlebot is asking."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1567876464},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20905111","Id":"hn-post-20905111","Text":"The ipfs.io is just a web-based way to access IPFS, called a gateway. There are a bunch of different gateways. In addition, you can run an IPFS node locally, and then as long as just one node holds the content you&#x27;re looking for you are looking for you&#x27;re good. There are also browser extensions to re-write gateway URIs to localhost URIs."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1567368393},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20854528","Id":"hn-post-20854528","Text":"Fixed, thanks!"},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1567361282},"Comments":30,"Uri":"https://news.ycombinator.com/item?id=20853707","Id":"hn-post-20853707","Title":"Show HN: Square Game","Score":60},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1567259984},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20846291","Id":"hn-post-20846291","Text":"The Metanet protocol isn&#x27;t Bitcoin SV specific. Any immutable datastore could serve as the backend for a Metanet."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1565800997},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20697286","Id":"hn-post-20697286","Title":"'The' Ohio State University Wants to Trademark the Word 'The'","Score":2},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1565652950},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20681289","Id":"hn-post-20681289","Text":"This is because it&#x27;s illegal to require a Canadian to provide their SIN, unless the use is on the list of exceptions [1].<p>One can still ask a Canadian for their SIN for reasons not on that list, but it is illegal to refuse service for not providing a SIN [2].<p>[1] <a href=\"https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;services&#x2F;sin&#x2F;reports&#x2F;code-of-practice&#x2F;annex-2.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;servi...</a><p>[2] <a href=\"https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;programs&#x2F;sin&#x2F;protect.html#a4\" rel=\"nofollow\">https:&#x2F;&#x2F;www.canada.ca&#x2F;en&#x2F;employment-social-development&#x2F;progr...</a>"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1565113500},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20627571","Id":"hn-post-20627571","Text":"Couldn&#x27;t a bad actor abuse liveTr() and call it with a ton of random strings to make me pay to translate a ton of garbage data?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1563891001},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20506835","Id":"hn-post-20506835","Text":"That wouldn&#x27;t comply with the license terms, which require the first two paragraphs (The above copyright notice and this permission notice) to be included in copies. LibreJS tags don&#x27;t include that."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561740238},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20306204","Id":"hn-post-20306204","Text":"If the details of a ranking algorithm are open source, it would be easy to manipulate them."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561734545},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20305063","Id":"hn-post-20305063","Text":"I think they mean &quot;the data of Google users&quot;, not &quot;Google&#x27;s data about users&quot;."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561734430},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20305031","Id":"hn-post-20305031","Text":"Both the app and the website have ads, I just checked. They look like normal email messages, but they start with an advertisement indicator. I only see them in the &quot;Promotions&quot; and &quot;Social&quot; tab though."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561312308},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20257355","Id":"hn-post-20257355","Text":"&gt; all US COMmercial entities<p>.com isn&#x27;t US-specific."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1561115375},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20241445","Id":"hn-post-20241445","Text":"Most articles are free, but some articles are designated by their authors as member articles. Authors get paid when members read member articles."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1560531032},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=20184446","Id":"hn-post-20184446","Text":"GCC has the GCC Runtime Library Exception: the resulting binary of code compiled with GCC doesn&#x27;t need to licensed under GPL."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1558288169},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19954478","Id":"hn-post-19954478","Text":"Stack Overflow Enterprise is either self hosted or hosted by SO, but on a individual Azure server instance, so each instance would probably need to be compromised individually. SO will probably release an update for Enterprise customers that scans server logs to check if that Enterprise customer was affected."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1557260438},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19853084","Id":"hn-post-19853084","Title":"Improving Privacy and Security on the Web","Score":1},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1557102554},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19835977","Id":"hn-post-19835977","Text":"It seems weird that they would ask survey respondents to check their browser settings to determine if they had Do Not Track enabled. DNT status is transmitted over HTTP headers, and is available to JavaScript. Couldn&#x27;t they have just checked DNT status automatically to get more accurate data?"},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1555100645},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19648625","Id":"hn-post-19648625","Text":"That incentivize upvoting everything, since there is no punishment for upvoting posts that don&#x27;t make it to the frontpage. That could be solved by making votes a limited resource, but that approach has many downsides."},
{"Type":"hn","HNType":"story","Verbose":1,"Date":{"Unix":1554933445},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19629182","Id":"hn-post-19629182","Title":"Kodi users blocked by CloudFlare, showing no sources","Score":3},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1549030882},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=19054254","Id":"hn-post-19054254","Text":"The location-based filtering is easily evaded. It doesn&#x27;t check your IP address, just uses the HTML5 geolocation API, which is client-side. In Chrome, it&#x27;s very easy to spoof your location. Open DevTools, click the three dots, click Sensors, input coordinates of a valid location (Lat: 40.7128, Long: -74.0060 works for me), hit enter, and reload. Chrome will then spoof the location to New York, and I have been able able to watch New York videos despite not being there."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1547211397},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=18883203","Id":"hn-post-18883203","Text":"HSTS errors can be bypassed on Chrome by entering &quot;thisisunsafe&quot;, if anyone wants to bypass these HSTS errors. Of course you probably shouldn&#x27;t have to this: it <i>is</i> unsafe."},
{"Type":"hn","HNType":"comment","Verbose":1,"Date":{"Unix":1544745237},"Comments":0,"Uri":"https://news.ycombinator.com/item?id=18677243","Id":"hn-post-18677243","Text":"It seems like they moved the article to tkrunning.com, which is a Medium custom domain created before Medium custom domains were disallowed. From there, tkrunning.com is behind CloudFlare, so I would guess they used CloudFlare&#x27;s Page Rules, which lets you (among other things) setup 301 redirects at the CloudFlare reverse-proxy level."},
{"Type":"itch","ItchType":"game","Id":"itch-640033","Text":"Shoot the red enemies with your duel-sided laser, while avoiding the good guys!","Thumb":"https://img.itch.zone/aW1nLzM0MjYwMTMucG5n/315x250%23c/H3yk6W.png","Date":{"Unix":1589165600},"Uri":"https://smitop.itch.io/doubleshoot","Title":"Doubleshoot"},
{"Type":"itch","ItchType":"game","Id":"itch-653142","Text":"Defend the pencil in the middle!","Thumb":"https://img.itch.zone/aW1nLzM1MDYyMTYucG5n/315x250%23c/8K91Cj.png","Date":{"Unix":1590376204},"Uri":"https://smitop.itch.io/pencil-defense","Title":"Pencil Defense"},
{"Type":"itch","ItchType":"game","Id":"itch-694159","Text":"You can freeze time for a few seconds","Thumb":"https://img.itch.zone/aW1nLzM4MzUxNTIucG5n/315x250%23c/5mWtCE.png","Date":{"Unix":1597714207},"Uri":"https://smitop.itch.io/time-freezer","Title":"Time Freezer"},
{"Type":"itch","ItchType":"game","Id":"itch-630707","Text":"You have a limited amount of movement to beat 4 levels.","Thumb":"https://img.itch.zone/aW1nLzMzNjY2NDMucG5n/315x250%23c/5v4dgM.png","Date":{"Unix":1588386122},"Uri":"https://smitop.itch.io/use-your-distance","Title":"Use your distance"},
{"Type":"scrproj","Title":"Math Game","Id":"scr38888724","Text":"","Thumb":"/scr-thumbs/38888724.png","Uri":"https://scratch.mit.edu/projects/38888724/","Date":{"Unix":1418256165},"Verbose":1},
{"Type":"scrproj","Title":"Ball Vs. Beetles","Id":"scr38959532","Text":"","Thumb":"/scr-thumbs/38959532.png","Uri":"https://scratch.mit.edu/projects/38959532/","Date":{"Unix":1418334005},"Verbose":1},
{"Type":"scrproj","Title":"Santa Game","Id":"scr39249726","Text":"","Thumb":"/scr-thumbs/39249726.png","Uri":"https://scratch.mit.edu/projects/39249726/","Date":{"Unix":1418508643},"Verbose":1},
{"Type":"scrproj","Title":"How fast are you?","Id":"scr39608648","Text":"","Thumb":"/scr-thumbs/39608648.png","Uri":"https://scratch.mit.edu/projects/39608648/","Date":{"Unix":1418566062},"Verbose":1},
{"Type":"scrproj","Title":"The Swimming Ball","Id":"scr39649930","Text":"   ","Thumb":"/scr-thumbs/39649930.png","Uri":"https://scratch.mit.edu/projects/39649930/","Date":{"Unix":1418679289},"Verbose":1},
{"Type":"scrproj","Title":"The Yellow Line","Id":"scr40729312","Text":"","Thumb":"/scr-thumbs/40729312.png","Uri":"https://scratch.mit.edu/projects/40729312/","Date":{"Unix":1419171254},"Verbose":1},
{"Type":"scrproj","Title":"A Game","Id":"scr40979712","Text":"After some time, it's impossible to win.","Thumb":"/scr-thumbs/40979712.png","Uri":"https://scratch.mit.edu/projects/40979712/","Date":{"Unix":1421537243},"Verbose":1},
{"Type":"scrproj","Title":"Make stuff lowercase","Id":"scr41337248","Text":"","Thumb":"/scr-thumbs/41337248.png","Uri":"https://scratch.mit.edu/projects/41337248/","Date":{"Unix":1424295157},"Verbose":1},
{"Type":"scrproj","Title":"Test Computer Speed","Id":"scr41442332","Text":"This works best in turbo mode. Basically, what it does is find how long it takes to wait 1 second.","Thumb":"/scr-thumbs/41442332.png","Uri":"https://scratch.mit.edu/projects/41442332/","Date":{"Unix":1419966344},"Verbose":1},
{"Type":"scrproj","Title":"Box Game","Id":"scr41559936","Text":"The game is very laggy. If you find out why, could you tell me?","Thumb":"/scr-thumbs/41559936.png","Uri":"https://scratch.mit.edu/projects/41559936/","Date":{"Unix":1421586947},"Verbose":1},
{"Type":"scrproj","Title":"Drawing API","Id":"scr41588758","Text":"I put a comment about how to use it in the code. \n","Thumb":"/scr-thumbs/41588758.png","Uri":"https://scratch.mit.edu/projects/41588758/","Date":{"Unix":1420224328},"Verbose":1},
{"Type":"scrproj","Title":"Pong Game","Id":"scr41721734","Text":"This was my attempt at making a good gravity simulator. If you go to the \"Paddle\" sprite, you can make the cursor control the platform.","Thumb":"/scr-thumbs/41721734.png","Uri":"https://scratch.mit.edu/projects/41721734/","Date":{"Unix":1420408654},"Verbose":1},
{"Type":"scrproj","Title":"Color Saver","Id":"scr42432182","Text":"I made this so I could save levels in \"The Swimming Ball\". It works best in turbo mode (the level maker needs to go threw each letter of the input)","Thumb":"/scr-thumbs/42432182.png","Uri":"https://scratch.mit.edu/projects/42432182/","Date":{"Unix":1420823665},"Verbose":1},
{"Type":"scrproj","Title":"Random Game","Id":"scr42596484","Text":"","Thumb":"/scr-thumbs/42596484.png","Uri":"https://scratch.mit.edu/projects/42596484/","Date":{"Unix":1421188767},"Verbose":1},
{"Type":"scrproj","Title":"Make A Maze","Id":"scr42843872","Text":"If you see inside, broadcasting \"clear\" resets it.","Thumb":"/scr-thumbs/42843872.png","Uri":"https://scratch.mit.edu/projects/42843872/","Date":{"Unix":1421238609},"Verbose":1},
{"Type":"scrproj","Title":"Tokenizer","Id":"scr43688036","Text":"","Thumb":"/scr-thumbs/43688036.png","Uri":"https://scratch.mit.edu/projects/43688036/","Date":{"Unix":1421500237},"Verbose":1},
{"Type":"scrproj","Title":"There's no going back!  remix","Id":"scr43785486","Text":"This project was made by zondareeds - I just added some improvements.\nAdded:\n-better jumping\n-not starting in ground\n-touching the bottom of the scree","Thumb":"/scr-thumbs/43785486.png","Uri":"https://scratch.mit.edu/projects/43785486/","Date":{"Unix":1421593338},"Verbose":1},
{"Type":"scrproj","Title":"The Clones","Id":"scr44783242","Text":"Uses @Lirex's text to number converter.","Thumb":"/scr-thumbs/44783242.png","Uri":"https://scratch.mit.edu/projects/44783242/","Date":{"Unix":1423175529},"Verbose":1},
{"Type":"scrproj","Title":"Typewriter Scripts","Id":"scr45029810","Text":"","Thumb":"/scr-thumbs/45029810.png","Uri":"https://scratch.mit.edu/projects/45029810/","Date":{"Unix":1436565846},"Verbose":1},
{"Type":"scrproj","Title":"Favourite Cookie Type","Id":"scr45575544","Text":"Trying out cloud variables. Uses relrel's cloud list engine.","Thumb":"/scr-thumbs/45575544.png","Uri":"https://scratch.mit.edu/projects/45575544/","Date":{"Unix":1422570896},"Verbose":1},
{"Type":"scrproj","Title":"Cloud Art","Id":"scr45581484","Text":"Uses relrel's cloud list system. If you're a New Scratcher, your work won't be saved.","Thumb":"/scr-thumbs/45581484.png","Uri":"https://scratch.mit.edu/projects/45581484/","Date":{"Unix":1422573671},"Verbose":1},
{"Type":"scrproj","Title":"User ID thing","Id":"scr45646374","Text":"Playing around with cloud variables.","Thumb":"/scr-thumbs/45646374.png","Uri":"https://scratch.mit.edu/projects/45646374/","Date":{"Unix":1422625769},"Verbose":1},
{"Type":"scrproj","Title":"Text Platformer","Id":"scr48112714","Text":"","Thumb":"/scr-thumbs/48112714.png","Uri":"https://scratch.mit.edu/projects/48112714/","Date":{"Unix":1425077268},"Verbose":1},
{"Type":"scrproj","Title":"Dance Thing","Id":"scr48751006","Text":"","Thumb":"/scr-thumbs/48751006.png","Uri":"https://scratch.mit.edu/projects/48751006/","Date":{"Unix":1424383320},"Verbose":1},
{"Type":"scrproj","Title":"Text Based Game","Id":"scr49997260","Text":"Still making the villagers.","Thumb":"/scr-thumbs/49997260.png","Uri":"https://scratch.mit.edu/projects/49997260/","Date":{"Unix":1425426595},"Verbose":1},
{"Type":"scrproj","Title":"When stop sign pressed...","Id":"scr50149638","Text":"","Thumb":"/scr-thumbs/50149638.png","Uri":"https://scratch.mit.edu/projects/50149638/","Date":{"Unix":1425216206},"Verbose":1},
{"Type":"scrproj","Title":"Ball Game","Id":"scr51243710","Text":"","Thumb":"/scr-thumbs/51243710.png","Uri":"https://scratch.mit.edu/projects/51243710/","Date":{"Unix":1425848250},"Verbose":1},
{"Type":"scrproj","Title":"Cloning Game","Id":"scr51757910","Text":"","Thumb":"/scr-thumbs/51757910.png","Uri":"https://scratch.mit.edu/projects/51757910/","Date":{"Unix":1429965730},"Verbose":1},
{"Type":"scrproj","Title":"test","Id":"scr53263894","Text":"","Thumb":"/scr-thumbs/53263894.png","Uri":"https://scratch.mit.edu/projects/53263894/","Date":{"Unix":1461961744},"Verbose":1},
{"Type":"scrproj","Title":"Dollar Words","Id":"scr58609260","Text":"Word list made using @jgatcomb's word list","Thumb":"/scr-thumbs/58609260.png","Uri":"https://scratch.mit.edu/projects/58609260/","Date":{"Unix":1429822399},"Verbose":1},
{"Type":"scrproj","Title":"Cool Unicode Characters","Id":"scr68404874","Text":" characters from http://unicode-table.com/en/","Thumb":"/scr-thumbs/68404874.png","Uri":"https://scratch.mit.edu/projects/68404874/","Date":{"Unix":1435323804},"Verbose":1},
{"Type":"scrproj","Title":"Crack the Passkey! cracker","Id":"scr69221456","Text":"Original by @iamunknown2.\nAttempts to crack a hash made by it. Just brute forces it.\n-updated to allow for 10 digits\n-uses new algorithm ","Thumb":"/scr-thumbs/69221456.png","Uri":"https://scratch.mit.edu/projects/69221456/","Date":{"Unix":1435872234},"Verbose":1},
{"Type":"scrproj","Title":"Scratch in backround demo","Id":"scr69610416","Text":"","Thumb":"/scr-thumbs/69610416.png","Uri":"https://scratch.mit.edu/projects/69610416/","Date":{"Unix":1436215584},"Verbose":1},
{"Type":"scrproj","Title":"Canoe Game","Id":"scr69621500","Text":"-attempting to make AI for this","Thumb":"/scr-thumbs/69621500.png","Uri":"https://scratch.mit.edu/projects/69621500/","Date":{"Unix":1436274223},"Verbose":1},
{"Type":"scrproj","Title":"Gravity1 - Bounce Working","Id":"scr69974858","Text":"Just a demo that it does work - only one time per flag press, though. Uses the same code made by @KEGroovn","Thumb":"/scr-thumbs/69974858.png","Uri":"https://scratch.mit.edu/projects/69974858/","Date":{"Unix":1436473214},"Verbose":1},
{"Type":"scrproj","Title":"ask and move","Id":"scr71095788","Text":"","Thumb":"/scr-thumbs/71095788.png","Uri":"https://scratch.mit.edu/projects/71095788/","Date":{"Unix":1437514794},"Verbose":1},
{"Type":"scrproj","Title":"Avoid the black","Id":"scr71277988","Text":"Made levels 1-8\n","Thumb":"/scr-thumbs/71277988.png","Uri":"https://scratch.mit.edu/projects/71277988/","Date":{"Unix":1437673520},"Verbose":1},
{"Type":"scrproj","Title":"5 broadcasts","Id":"scr71348908","Text":"","Thumb":"/scr-thumbs/71348908.png","Uri":"https://scratch.mit.edu/projects/71348908/","Date":{"Unix":1437737662},"Verbose":1},
{"Type":"scrproj","Title":"Square Game","Id":"scr72765066","Text":"","Thumb":"/scr-thumbs/72765066.png","Uri":"https://scratch.mit.edu/projects/72765066/","Date":{"Unix":1439418035},"Verbose":1},
{"Type":"scrproj","Title":"Text Display","Id":"scr72898794","Text":"","Thumb":"/scr-thumbs/72898794.png","Uri":"https://scratch.mit.edu/projects/72898794/","Date":{"Unix":1439409713},"Verbose":1},
{"Type":"scrproj","Title":"testing...","Id":"scr75148760","Text":"-just testing remixing\n-removed everything from @Glitterglamz101's project","Thumb":"/scr-thumbs/75148760.png","Uri":"https://scratch.mit.edu/projects/75148760/","Date":{"Unix":1441286518},"Verbose":1},
{"Type":"scrproj","Title":"Harder Pong","Id":"scr77518176","Text":"Based on the 2014 Hour Of Code pong game.","Thumb":"/scr-thumbs/77518176.png","Uri":"https://scratch.mit.edu/projects/77518176/","Date":{"Unix":1442666267},"Verbose":1},
{"Type":"scrproj","Title":"Follow the instructions!","Id":"scr78343148","Text":"","Thumb":"/scr-thumbs/78343148.png","Uri":"https://scratch.mit.edu/projects/78343148/","Date":{"Unix":1533736796},"Verbose":1},
{"Type":"scrproj","Title":"Custom Blocks with same name ","Id":"scr79617554","Text":"","Thumb":"/scr-thumbs/79617554.png","Uri":"https://scratch.mit.edu/projects/79617554/","Date":{"Unix":1443649372},"Verbose":1},
{"Type":"scrproj","Title":"Trying to get search to find this","Id":"scr86493133","Text":"Testing...","Thumb":"/scr-thumbs/86493133.png","Uri":"https://scratch.mit.edu/projects/86493133/","Date":{"Unix":1446640372},"Verbose":1},
{"Type":"scrproj","Title":"Clickbait topic titles","Id":"scr87308243","Text":"","Thumb":"/scr-thumbs/87308243.png","Uri":"https://scratch.mit.edu/projects/87308243/","Date":{"Unix":1447448542},"Verbose":1},
{"Type":"scrproj","Title":"B-Ball hoops test","Id":"scr90883744","Text":"just a test to see if @cartoonnetwork is a bot.","Thumb":"/scr-thumbs/90883744.png","Uri":"https://scratch.mit.edu/projects/90883744/","Date":{"Unix":1449702383},"Verbose":1},
{"Type":"scrproj","Title":"Cool Spinny Thing","Id":"scr93017305","Text":"","Thumb":"/scr-thumbs/93017305.png","Uri":"https://scratch.mit.edu/projects/93017305/","Date":{"Unix":1452204247},"Verbose":1},
{"Type":"scrproj","Title":"Cool Shapes","Id":"scr94459860","Text":"","Thumb":"/scr-thumbs/94459860.png","Uri":"https://scratch.mit.edu/projects/94459860/","Date":{"Unix":1453127358},"Verbose":1},
{"Type":"scrproj","Title":"Drag the scripts","Id":"scr97804016","Text":"","Thumb":"/scr-thumbs/97804016.png","Uri":"https://scratch.mit.edu/projects/97804016/","Date":{"Unix":1455404144},"Verbose":1},
{"Type":"scrproj","Title":"Check/X Animation","Id":"scr102442046","Text":"","Thumb":"/scr-thumbs/102442046.png","Uri":"https://scratch.mit.edu/projects/102442046/","Date":{"Unix":1533736447},"Verbose":1},
{"Type":"scrproj","Title":"Collect The Apples","Id":"scr152397556","Text":"","Thumb":"/scr-thumbs/152397556.png","Uri":"https://scratch.mit.edu/projects/152397556/","Date":{"Unix":1500893831},"Verbose":1},
{"Type":"scrproj","Title":"Find me!","Id":"scr162301151","Text":"","Thumb":"/scr-thumbs/162301151.png","Uri":"https://scratch.mit.edu/projects/162301151/","Date":{"Unix":1533831930},"Verbose":1},
{"Type":"scrproj","Title":"Infinity Jumper v2 with restart button","Id":"scr165434982","Text":"Like the original (by @sohan2), but with a restart button.\n","Thumb":"/scr-thumbs/165434982.png","Uri":"https://scratch.mit.edu/projects/165434982/","Date":{"Unix":1497044063},"Verbose":1},
{"Type":"scrproj","Title":"Unthrottled recursion demo","Id":"scr483168949","Text":"","Thumb":"/scr-thumbs/483168949.png","Uri":"https://scratch.mit.edu/projects/483168949/","Date":{"Unix":1612396576},"Verbose":1},
{"Type":"scrproj","Title":"fave detector","Id":"scr494037481","Text":"","Thumb":"/scr-thumbs/494037481.png","Uri":"https://scratch.mit.edu/projects/494037481/","Date":{"Unix":1614466908},"Verbose":1},
{"Type":"SePost","Id":"se-meta-362388","Title":"Anyone is able to see ‚ô¶ moderator announcements","Uri":"https://meta.stackexchange.com/q/362388","Date":{"Unix":1616373533},"Text":"There is a way for anyone to see ‚ô¶ moderator announcements despite not being one:\r\n\r\n[![A list of moderator announcements][1]][1]  \r\n\r\nThis can be done by creating a Stack Overflow team (which is now free!), then going to `https://stackoverflow.com/c/{team-id}/topbar/mod-inbox`. (I added in a few stylesheets in the screenshot to make the above screenshot look good). Avoid doing anything remotely like a moderator action in this new team, since having done moderator actions can make this page 500.\r\n\r\nIt doesn't seem like any of the announcements have any particularly secret info in them (they seemed pretty mundane to me), but it seems like making these public is a Bad Idea.\r\n\r\nThis is happening because Teams admins are actually moderators in disguise (with a bunch of stuff changed).\r\n\r\n  [1]: https://i.stack.imgur.com/AIPSa.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-362582","Title":"Anyone is able to see ‚ô¶ moderator announcements","Uri":"https://meta.stackexchange.com/a/362582","Date":{"Unix":1616764778},"Text":"This appears to be fixed. The mod inbox now 404s on teams:\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/UXfzh.png","Verbose":1},
{"Type":"SePost","Id":"se-meta-362343","Title":"Area 51 uses insecure avatar generation","Uri":"https://meta.stackexchange.com/q/362343","Date":{"Unix":1616250757},"Text":"Area 51 uses [a different system for avatars][1] than the rest of the network. While on every other site [Gravatar URIs are salted][2], on Area 51 they aren't because it hasn't been updated (Area 51 uses a really old fork of the SE engine). This could allows determining the email address associated with any user who has an Area 51 account. Avatars on Area 51 should be salted to prevent this.\r\n\r\nArea 51 avatars should be salted the same way as the rested of the network to prevent this information leakage.\r\n\r\nSee also [this deferred request][3] for the whole avatar system to be updated (I don't want a whole revamp, just this one bug fixed).\r\n\r\n\r\n  [1]: https://meta.stackexchange.com/questions/210703/no-avatar-on-area-51/210836\r\n  [2]: https://meta.stackexchange.com/questions/204523/unexpectedly-changing-identicon/204540#204540\r\n  [3]: https://meta.stackexchange.com/questions/263486/remove-gravatar-requirement-from-area-51-please","Verbose":1},
{"Type":"SePost","Id":"se-meta-362214","Title":"Upvotes on passed review audits disappear","Uri":"https://meta.stackexchange.com/q/362214","Date":{"Unix":1616000207},"Text":"I upvoted a [review audit that I passed][1], but after I was told that I passed, the upvote I cast disappeared. Shouldn't upvotes on passed review audits like this remain?\r\n\r\n\r\n  [1]: https://stackoverflow.com/review/triage/28554140","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67458650","Title":"Why would std::process::Command::ouput fail?","Uri":"https://stackoverflow.com/a/67458650","Date":{"Unix":1620569371},"Text":"- There could be some issue opening the binary being executed (i.e. access denied, doesn't exist)\r\n- When waiting for the process to finish, the `waitpid` syscall could be [interrupted](https://stackoverflow.com/questions/41474299/checking-if-errno-eintr-what-does-it-mean)\r\n- Getting the output involves creating a pipe, which will fail if the file descriptor limit is hit (`cat /proc/sys/fs/file-max` to check)\r\n- It also involves opening a file, which will fail if the limit on open files is reached (`ulimit -n` to check)\r\n\r\nYou probably only need to worry about the first two: you can't do anything about hitting limits in the kernel.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67409479","Title":"How can I test my Boxed error for a specific type?","Uri":"https://stackoverflow.com/a/67409479","Date":{"Unix":1620253433},"Text":"Dereference the `Box` before doing the `assert_eq`:\r\n```\r\nlet err = tlv.downcast::<BridgeError>().unwrap();\r\nassert_eq!(*err, BridgeError::TLVLength{expected: 12, received: 14});\r\n```\r\n[(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4e4bf58e73ddb84242dd4fb6a00a466d)","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67393829","Title":"Why doesn't converting a raw pointer to a u8 into a raw pointer to an array of 8 booleans print the right result?","Uri":"https://stackoverflow.com/a/67393829","Date":{"Unix":1620175285},"Text":"The behavior of that program is undefined (so the output is meaningless). From Miri:\r\n\r\n```none\r\nerror: Undefined Behavior: memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc1381 which has size 1\r\n  --> src/main.rs:11:31\r\n   |\r\n11 |         println!(\"{:?} {:b}\", *x, *y);\r\n   |                               ^^ memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc1381 which has size 1\r\n   |\r\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\r\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\r\n```\r\nBoolean arrays are stored byte-by-byte, not bit-by-bit. Use the [`bitvec`](https://crates.io/crates/bitvec) or [`bitfield`](https://crates.io/crates/bitfield) crate if you want bit-by-bit storage. There is no way for a pointer to point to an individual bit: pointers always point to bytes (pointers to bits aren't supported by basically any ISAs). `bool`s are 1 byte long, and cannot safely have any value other than `0_u8` or `1_u8`.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67257737","Title":"Malicious javascript code in querystring for my website in google analytics","Uri":"https://stackoverflow.com/a/67257737","Date":{"Unix":1619380936},"Text":"Someone *is* trying to do something malicious. There's no reason to believe that they're succeeding, though. They [appear to be automatically trying attacks like that](https://www.google.com/search?q=%22protossbb%22) across many websites, in the hopes that it will happen to succeed on one of them. Prototype pollution is a fairly common vulnerability in JavaScript, so they are probably hoping that they will happen to find such a vulnerability by chance.\r\n\r\nIf you want to be sure you're okay, you can go to those URIs and make sure that nothing bad happens.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67237335","Title":"Rust - Is repr(C) a preprocessor directive?","Uri":"https://stackoverflow.com/a/67237335","Date":{"Unix":1619215523},"Text":"`#[repr(C)]` is not a preprocessor directive, since Rust doesn't use a preprocessor <sup>1</sup>. It is an [attribute](https://doc.rust-lang.org/stable/reference/attributes.html). Rust doesn't have a complete specification, but the `repr` attribute [is mentioned in the Rust reference](https://doc.rust-lang.org/stable/reference/type-layout.html#representations), so it is absolutely a part of the language. Implementation-wise, attributes are parsed the same way all other Rust code is, and are stored in the same AST. Rust has no \"attribute pass\": attributes are an actual part of the language. If someone else were to implement a Rust compiler, they would need to implement `#[repr(C)]`. \r\n\r\nFurthermore, `#[repr(C)]` *can't* be implemented without some compiler magic. In the absence of a `#[repr(...)]`, Rust compilers are free to arrange the fields of a `struct`/`enum` however they want to (and they do take advantage of this for optimization purposes!).\r\n\r\nRust does have a good reason for using it's own memory layout. If compilers aren't tied to how a `struct` is written in the source code, they [can do optimisations like](https://doc.rust-lang.org/nomicon/repr-rust.html) not storing `struct` fields that are never read from, reordering fields for better performance, `enum` tag pooling<sup>2</sup>, and using spare bits throughout [`NonZero*`](https://doc.rust-lang.org/stable/std/num/index.html)s in the struct to store data (the last one isn't happening yet, but might in the future). But the main reason is that Rust has things that just don't make sense in C. For instance, Rust has zero-sized types (like `()` and `[i8; 0]`) [which can't exist in C](https://stackoverflow.com/a/9723093/14004262), `trait` vtables, `enum`s with fields, generic types, all of which cause problems when trying to translate them to C.\r\n\r\n---\r\n\r\n<sup>1</sup> Okay, you could use the C preprocessor with Rust if you really wanted to. Please don't.\r\n\r\n<sup>2</sup> For example, `enum Food { Apple, Pizza(Topping) } enum Topping { Pineapple, Mushroom, Garlic }` can be stored in just 1 byte since there are only 4 possible `Food` values that can be created.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67154715","Title":"How to group elements of a vector by a pattern?","Uri":"https://stackoverflow.com/a/67154715","Date":{"Unix":1618793078},"Text":"Iterate over the elements of the `nums` to build up the split. For every number, compare it to the last number to decide whether to create a sublist, or append to the existing one:\r\n\r\n```rust\r\nlet nums = vec![9,7,6,3,4,0,1,7,3,9];\r\nlet mut split: Vec<Vec<i32>> = vec![vec![]];\r\nfor num in nums.iter().filter(|n| **n != 0) {\r\n    let sublist = split.last_mut().unwrap();\r\n    match sublist.last_mut() {\r\n        Some(x) if num > x => {\r\n            split.push(vec![*num]);\r\n        }\r\n        _ => sublist.push(*num),\r\n    }\r\n}\r\nlet split = split; // make split immmutable\r\nlet summed: Vec<i32> = split.iter().map(|v| v.iter().sum()).collect();\r\n```\r\n\r\n([try in playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=81f92bc4a3dd4a27c7db178a7c8b60aa))\r\n\r\nIt's probably possible to make a more elegant solution using [`Iterator::partition_in_place`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partition_in_place), but that `fn` is sadly unstable for now.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-67129518","Title":"How to check if specified char exists on Android ? (jss/css/whatever/‚Ä¶)","Uri":"https://stackoverflow.com/a/67129518","Date":{"Unix":1618593219},"Text":"`FontFaceSet.check` [does not check if a specific character exists in a font](https://lists.w3.org/Archives/Public/www-style/2015Aug/0330.html), only if *any* character in the range of that character exists. You can try rendering the text to a canvas and checking if the rendering is the same as a Unicode character that is known not to exist:\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n    function isLetterRenderable(letter) {\r\n      if (!document.fonts.check('700 24px / 36px Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif', letter)) return false;\r\n      let can;\r\n      if (window.OffscreenCanvas) {\r\n        can = new OffscreenCanvas(50, 50);\r\n      } else {\r\n        can = document.createElement(\"canvas\");\r\n        can.height = 50;\r\n        can.width = 50;\r\n      }\r\n      const ctx = can.getContext(\"2d\");\r\n      ctx.font = '700 10px Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\r\n      ctx.fillText(letter, 10, 10);\r\n      const imgData1 = ctx.getImageData(0, 0, 50, 50);\r\n      ctx.clearRect(0, 0, 50, 50);\r\n      ctx.fillText(\"·øø\", 10, 10);\r\n      const imgData2 = ctx.getImageData(0, 0, 50, 50);\r\n      // drawing of character must differ from drawing of known invalid character\r\n      return !imgData1.data.every((x, i) => imgData2.data[i] === x);\r\n    }\r\n\r\n    console.log(\"a ->\", isLetterRenderable(\"a\"));\r\n    console.log(\"ÍØÉ ->\", isLetterRenderable(\"ÍØÉ\"));\r\n    console.log(\"ÚØå° ->\", isLetterRenderable(\"ê∫Ä\"));\r\n    console.log(\"‚Æù ->\", isLetterRenderable(\"‚Æù\"));\r\n    console.log(\"üç© ->\", isLetterRenderable(\"üç©\"));\r\n\r\n<!-- end snippet -->\r\n\r\nNote that some browsers (Firefox does it on my system) will automatically generate \"pseudo-letters\" that look like [![010EB0 in a square][1]][1]. These look like actual unique letters to `isLetterRenderable` above, so it first checks using `document.fonts.check` since while that function returning `true` is meaningless in this context, if it returns `false` we know for sure that the glyph can't be rendered. But if some letters in a range are renderable, and some are pseduo-letters, then it is very hard to detect which ones have associated glyphs.\r\n\r\n  [1]: https://i.stack.imgur.com/tptqa.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66880234","Title":"What does use crate::body::Body; mean?","Uri":"https://stackoverflow.com/a/66880234","Date":{"Unix":1617152093},"Text":"It refers to to the crate currently being compiled. So in this example, it is resolved as `rtsp_server::body::Body`. The `body::Body` part is refering to the `Body` struct/enum of the `body` module.\r\n\r\nThe [Rust documentation says](https://doc.rust-lang.org/std/keyword.crate.html):\r\n> `crate` is also used to represent the absolute path of a module, where `crate` refers to the\r\n> root of the current crate. For instance, `crate::foo::bar` refers to the name `bar` inside the\r\n> module `foo`, from anywhere else in the same crate.\r\n","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66831375","Title":"How to find the git commit id of an included crate?","Uri":"https://stackoverflow.com/a/66831375","Date":{"Unix":1616848273},"Text":"You can't. Crates on crates.io don't need to be built from a Git repo, and there is no built-in way to determine what commit a crate was built from. Most crates tag commits in their history where versions came from, but in this case looking at the Git history of `Cargo.toml` is your only option.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66805797","Title":"Check if the lines of a file contains given pattern without regex in Rust","Uri":"https://stackoverflow.com/a/66805797","Date":{"Unix":1616697834},"Text":"You can loop over all possible values:\r\n\r\n```rust\r\nlet line = line.unwrap();\r\nfor i in 0..=9 {\r\n    if line.contains(&format!(\"PerfectSwitch-{}: Message:\", i)) {\r\n        println!(\"{}\", line);\r\n    }\r\n}\r\n```\r\n\r\nAlthough you probably want to rethink your assumption that regexes are bad. Rust's `regex` library is very fast, and I doubt any small performance gains you get here will outweigh the lack of maintainability that comes with rolling your own parsing code.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66673790","Title":"How to delete a contributor on GitHub repository page?","Uri":"https://stackoverflow.com/a/66673790","Date":{"Unix":1615986670},"Text":"I tested this, GitHub appears to treat the list of \"Contributors\" as append-only: whenever it sees a new one, it adds it to the list, but it never removes from that list. See [this repo][1] which lists someone who never committed in the Contributors list, despite only having one commit (that they didn't author). I did this by pushing a commit as myself, then pushing one as torvalds, then force-pushing back to my commit. Despite this, GitHub still shows torvalds as a contributor.\r\n\r\nGo to the full \"Contributors\" graph in the insights tab, and check if `B` listed there. The data for this graph is always calculated using the actual commit graph. If `B` is listed there, then GitHub still thinks `B` *did* make some commits. In that case, you should double-check that you fixed all commits belonging to `B`. Click on \"N commits\" to see what commits GitHub thinks `B` did:\r\n[![Arrow pointing to \"1 commit\" on top of a graph][2]][2]\r\n\r\nIf no commits are attributed to `B`, [contact GitHub support][3] (I think *Remove data from a repository I own or control* would be the right topic to select) and ask them to re-generate the Contributors list.\r\n\r\n\r\n  [1]: https://github.com/Smittyvb/wrong-contribs\r\n  [2]: https://i.stack.imgur.com/NSCbx.png\r\n  [3]: https://support.github.com/request","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66662055","Title":"GitHub: problem pushing a local branch to the remote","Uri":"https://stackoverflow.com/a/66662055","Date":{"Unix":1615922568},"Text":"The repo URI you are trying to push to doesn't exist, or you don't have permission to access it (GitHub pretends that private repos you don't have access to don't exist). Run\r\n```bash\r\ngit remote get-url origin\r\n```\r\nand make sure what you see is *exactly* what GitHub shows you after clicking the green Code button:\r\n\r\n[![Screenshot of GitHub UI displaying a clone URI][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ylnVO.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66661621","Title":"When we click \"accept both changes\" in vscode, Which command will be executed during merge conflict?","Uri":"https://stackoverflow.com/a/66661621","Date":{"Unix":1615920731},"Text":"You can check exactly what commands are run in the \"Git\" console, under the \"Output\" tab:\r\n\r\n[![A screenshot of a Git console window. At the top are 4 tabs: Problems, Output, Debug Console, and Console. The Output tab is selected. To the right of the tabs is a dropdown, with \"Git\" selected. There are 5 icons the the right of the drowdown. Below the header various Git commands are shown.][1]][1]\r\n\r\nIn this case, VSCode doesn't run *any* Git commands to accept both changes: it just removes the conflict markers by itself.\r\n\r\n  [1]: https://i.stack.imgur.com/2mLQg.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66638254","Title":"Destructuring an Option<Box<_>> inside a match statement in Rust","Uri":"https://stackoverflow.com/a/66638254","Date":{"Unix":1615812207},"Text":"Dereference the box after matching:\r\n```rust\r\nif let Some(inner) = self.pending_removal.take() {\r\n    let (temp_structure, some_boolean) = *inner;\r\n    // Do something with temp_structure and some_boolean\r\n}\r\n```\r\n[(playground)][1]\r\n\r\nIf you think this is a bit clunky, you're right. On nightly you can use the unstable `box_patterns` feature to enable a better syntax for this (although [this might never be stabilized][2]):\r\n\r\n```rust\r\nif let Some(box (temp_structure, some_boolean)) = self.pending_removal.take() {\r\n    // Do something with temp_structure and some_boolean\r\n}\r\n```\r\n[(playground)][3]\r\n\r\n\r\n  [1]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=0a86e2e8e5404856fcb40dd437ff217a\r\n  [2]: https://github.com/rust-lang/rust/issues/29641\r\n  [3]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=c660bffdc36a267f04c84d01a9cd3694","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66602512","Title":"In Github, how do you determine which branch the release came from","Uri":"https://stackoverflow.com/a/66602512","Date":{"Unix":1615561907},"Text":"Releases are created from the branch you select when creating the release:\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/re9Dz.png","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66602334","Title":"Why can't I access enum fields directly?","Uri":"https://stackoverflow.com/a/66602334","Date":{"Unix":1615561241},"Text":"It is because `weight` isn't part of the `Animal` enum, it's part of the `Cat` type of the enum. Say in the future you add another type of animal that doesn't have weight information:\r\n```rust\r\nenum Animal {\r\n    Cat { name: String, weight: f64 },\r\n    Insect { species: String, height: f64 },\r\n}\r\n```\r\nThen `a.weight` wouldn't always have a value. You can use `if let` or `match` to conditionally get data from an `enum` if it exists:\r\n```rust\r\nif let Animal::Cat { weight, .. } = a {\r\n    println!(\"Your cat weights {} kg.\", weight);\r\n} else {\r\n    println!(\"get a cat\");\r\n};\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66588638","Title":"Rust: Implicitely convert from usize to the corresponding int type","Uri":"https://stackoverflow.com/a/66588638","Date":{"Unix":1615488316},"Text":"You can use the [`TryInto`][1] trait in function arguments to do implicit conversions from the perspective of callers. It still involves conversion, but it moves the complexity to the function being called:\r\n\r\n```rust\r\nuse std::convert::TryInto;\r\n\r\nfn stuff(val: impl TryInto<i32>) {\r\n    // use try_into trait method\r\n    let val = match val.try_into() {\r\n        Ok(v) => v,\r\n        Err(_) => panic!(\"couldn't fit in i32\"),\r\n    };\r\n    println!(\"in stuff: val has {} leading zeros\", val.leading_zeros());\r\n}\r\n\r\nfn main() {\r\n    let letters = ['a', 'b', 'c'];\r\n    let len = letters.len();\r\n    println!(\"in main: len has {} leading zeros\", len.leading_zeros());\r\n    stuff(len); // implict conversion\r\n}\r\n```\r\noutputs\r\n```\r\nin main: len has 62 leading zeros\r\nin stuff: val has 30 leading zeros\r\n```\r\n[Try on the playground][2]\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/stable/std/convert/trait.TryInto.html\r\n  [2]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9a8889b4750752c64a570368a0f61f6d","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66573126","Title":"Rust: Write stdout into a buffer or String","Uri":"https://stackoverflow.com/a/66573126","Date":{"Unix":1615411673},"Text":"`Command` output is represented as a series of bytes. Use [`std::str::from_utf8`][1] to convert it to a `str`:\r\n\r\n```rust\r\nuse std::str;\r\nlog.push_str(match str::from_utf8(&output.stdout) {\r\n    Ok(val) => val,\r\n    Err(_) => panic!(\"got non UTF-8 data from git\"),\r\n});\r\n```\r\n[Try it in the playground][2]\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/stable/std/str/fn.from_utf8.html\r\n  [2]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5ec59d316ef16e96718af1ecb1ebe9a3","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66570257","Title":"GitHub what causes gaps in issue #Number (404 This is Not...)","Uri":"https://stackoverflow.com/a/66570257","Date":{"Unix":1615398755},"Text":"From experience, I've seen that issues and pull requests will 404 if GitHub's filtering system or moderators decide that a PR/issue is spam.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66566283","Title":"Why mutable reference on `const` is not an error?","Uri":"https://stackoverflow.com/a/66566283","Date":{"Unix":1615384801},"Text":"Taking a mutable reference to a constant creates a new, temporary variable. Your code is treated by the compiler as:\r\n```\r\nfn main() {\r\n    const VALUE : u64 = 0;\r\n    println!(\"{:p}\", &VALUE);      // 0x10622ed78 // same\r\n    println!(\"{:p}\", &VALUE);      // 0x10622ed78\r\n    let mut tmp1 = VALUE;\r\n    println!(\"{:p}\", &mut tmp1);  // 0x7ffee9a08890 // different\r\n    let mut tmp2 = VALUE;\r\n    println!(\"{:p}\", &mut tmp2);  // 0x7ffee9a088e8\r\n}\r\n```\r\n[Try in playground][1]\r\n\r\nThis seems like a weird way to do things, there are legitimate use cases for this behaviour when constants are [function pointers][2] or [have interior mutability][3].\r\n\r\n\r\n  [1]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=094d80acfd09f9880bbf08ccd0171a7a\r\n  [2]: https://github.com/rust-lang/rust/issues/55721#issuecomment-643452554\r\n  [3]: https://github.com/rust-lang/rust/issues/55721#issuecomment-643454340","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66565925","Title":"svelte : embedded github gist throws Failed to execute 'write' on 'Document'","Uri":"https://stackoverflow.com/a/66565925","Date":{"Unix":1615383612},"Text":"You can work around this by rendering the Gist in an `<iframe>`:\r\n\r\n```html\r\n<!-- Gist.svelte -->\r\n<script>\r\n  export let gistUrl = \"\"\r\n\r\n  import { onMount } from 'svelte'\r\n\r\n  let frame;\r\n  onMount(() => {\r\n    frame.srcdoc = `<script src='${gistUrl}.js'><${\"\"}/script>`;\r\n  });\r\n</script>\r\n<style>\r\n  iframe {\r\n    border: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n</style>\r\n<iframe src=\"about:blank\" bind:this={frame} title=\"Gist\"></iframe>\r\n```\r\n\r\n[Try it in the REPL][1]\r\n\r\n\r\n  [1]: https://svelte.dev/repl/2d4d41df9f404b2d896bb81c55cb75c0?version=3.35.0","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66551804","Title":"How do I get a bytes::bytes::Bytes from a std::string::String?","Uri":"https://stackoverflow.com/a/66551804","Date":{"Unix":1615310593},"Text":"[`Bytes`][1] implements [`From`][2]/[`Into`][3] for [`String`][4] to allow conversion from strings to the bytes representing that string in [UTF-8][5]:\r\n\r\n```rust\r\nuse bytes::Bytes;\r\nfn main() {\r\n    let string = \"d√©monstration\".to_string();\r\n    println!(\"{:?}\", string); // \"d√©monstration\"\r\n    let bytes: Bytes = string.into();\r\n    println!(\"{:?}\", bytes); // b\"d\\xc3\\xa9monstration\"\r\n}\r\n```\r\n[Try it in the playground][6]\r\n\r\n\r\n  [1]: https://docs.rs/bytes/1.0.1/bytes/struct.Bytes.html\r\n  [2]: https://doc.rust-lang.org/stable/std/convert/trait.From.html\r\n  [3]: https://doc.rust-lang.org/stable/std/convert/trait.Into.html\r\n  [4]: https://doc.rust-lang.org/stable/std/string/struct.String.html\r\n  [5]: https://en.wikipedia.org/wiki/UTF-8\r\n  [6]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f3bf56875a29331656f343e864b37654","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66521444","Title":"macos clipboard is parsing \"/n\" as \"‚èé\"","Uri":"https://stackoverflow.com/a/66521444","Date":{"Unix":1615151305},"Text":"When [eagerly evaluating][1] expressions, Chrome puts the entire output on one line. Hit enter to (uneagerly) evaluate the expression for real  to get the actual value without ‚èés.\r\n\r\n\r\n  [1]: https://developers.google.com/web/updates/2018/05/devtools#eagerevaluation","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66511613","Title":"Rust trying to maintain self-defined list: cannot borrow `self.array` as mutable more than once at a time","Uri":"https://stackoverflow.com/a/66511613","Date":{"Unix":1615072081},"Text":"Rust doesn't allow multiple mutable references to the same variable at the same time. The easiest way to fix this would be to interleave the borrows, and borrow `n` immutably, since you never mutate it:\r\n\r\n```rust\r\npub fn move_black_to_red(& mut self, idx: i32){\r\n    let n: Node = self.data[idx as usize];\r\n\r\n    let prev: & mut Node = & mut self.data[n.get_prev() as usize];\r\n    prev.set_next(n.get_next());\r\n\r\n    let next: & mut Node = & mut self.data[n.get_next() as usize];\r\n    next.set_prev(n.get_prev());\r\n\r\n    //other stuff...\r\n}\r\n```","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66457303","Title":"Error selenium wire linux with dependency cryptography","Uri":"https://stackoverflow.com/a/66457303","Date":{"Unix":1614775272},"Text":"`rustc` failed compilation with a `SIGKILL`. This probably happened as a result of it using up too much memory, and the [OOM manager deciding to kill it][1], since the `syn` crate is quite large and requires a lot of RAM to compile. Getting more RAM, or increasing the amount of swap space will allow the compilation to finish.\r\n\r\n\r\n  [1]: https://www.kernel.org/doc/gorman/html/understand/understand016.html#htoc102","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66422468","Title":"How to run a single doc test in Rust?","Uri":"https://stackoverflow.com/a/66422468","Date":{"Unix":1614602945},"Text":"You can run doc-tests at the granularity of individual documented items.\r\n\r\nIf you have some source code like this:\r\n```rust\r\n/// ## Example\r\n/// ```\r\n/// panic!(\"doctest #1\");\r\n/// ```\r\n/// ```\r\n/// panic!(\"doctest #2\");\r\n/// ```\r\npub fn first() {}\r\n\r\n/// ## Example\r\n/// ```\r\n/// panic!(\"doctest #3\");\r\n/// ```\r\npub fn second() {}\r\n```\r\n\r\nThen you can run `cargo test --doc first` to run `doctest #1` and `doctest #2`, and `cargo test --doc second` to run `doctest #3`. Any tests with a path matching the string after `--doc` will be run.","Verbose":1},
{"Type":"SePost","Id":"se-stackoverflow-66410261","Title":"Function that gets slice of strings and extracts them as arguments to shell command in Rust","Uri":"https://stackoverflow.com/a/66410261","Date":{"Unix":1614523547},"Text":"Use [`Command::args`][1]:\r\n\r\n```rust\r\nfn apt_install(package_name: &str, options: &[&str]) {\r\n    let mut c = Command::new(\"apt-get\")\r\n        .arg(\"install\")\r\n        .args(options)\r\n        .spawn()\r\n        .expect(format!(\"Failed to install {}\", package_name).as_str());\r\n    c.wait().unwrap();\r\n}\r\n```\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/stable/std/process/struct.Command.html#method.args","Verbose":1},
{"Type":"SePost","Id":"se-webapps-153722","Title":"What are the github achievements?","Uri":"https://webapps.stackexchange.com/a/153722","Date":{"Unix":1618927610},"Text":"According to [a GitHub blog post](https://github.blog/2021-04-19-open-source-goes-to-mars/#:~:text=Achievements%20include,space), there are currently three:\r\n> Right now, Achievements include the Mars 2020 Helicopter Mission badge, the [Arctic Code Vault](https://archiveprogram.github.com/arctic-vault/) badge, and a badge for sponsoring open source work via [GitHub Sponsors](https://github.com/sponsors). Watch this space!","Verbose":1},
{"Type":"SePost","Id":"se-webapps-153678","Title":"Is the other person notified if I follow then unfollow a person on github?","Uri":"https://webapps.stackexchange.com/a/153678","Date":{"Unix":1618843387},"Text":"No. I have set my [notification settings](https://github.com/settings/notifications) such that I receive all types of notifications. Despite this, I have never received a notification about someone following me (despite seeing followers in my followers list). The only way to tell if someone is following you is to check the list on your profile page.","Verbose":1},
{"Type":"SePost","Id":"se-math-4103294","Title":"Closed form expression for eigenvectors of 2x2 matrix?","Uri":"https://math.stackexchange.com/q/4103294","Date":{"Unix":1618494951},"Text":"Is there a closed form expression for the eigenvalues/eigenvectors of an arbitrary 2x2 matrix $  \\begin{bmatrix}\r\n    a & b \\\\\r\n    c & d\r\n  \\end{bmatrix}\r\n$?\r\n\r\nWolfram|Alpha tries to provide an expression, but it seems wrong since it produces undefined results when $c = 0$, but all matrices have at least one (possibly complex) eigenvector.\r\n\r\n[![WA eigenvectors of 2x2 matrix][1]][1]\r\n\r\nIs there an actual closed form expression for the eigenvectors and eigenvalues of a matrix?\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/WNSec.png","Verbose":1},
{"Type":"SePost","Id":"se-math-4074652","Title":"Numberically compute intersection of infinite line and rectangle","Uri":"https://math.stackexchange.com/q/4074652","Date":{"Unix":1616595804},"Text":"I'm trying to numerically compute where an infinite line defined by two points intersects a (finite) rectangle also defined by two points. Here's a illustration of the various ways that the line can intersect the rectangle:\r\n![A diagram showing \"No intersections\", \"One intersection\", \"Two intersections\", and \"‚àû intersections\"](https://smitop.com/demo.svg)\r\nHow can I determine the number and location of the places where the infinite line intersects the rectangle? I know how to do this [when the line is finite][1], but I can't figure out how to generalize that to an infinite context.\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Liang%E2%80%93Barsky_algorithm","Verbose":1},
{"Type":"SePost","Id":"se-codegolf-220170","Title":"Convert Gemtext to HTML","Uri":"https://codegolf.stackexchange.com/a/220170","Date":{"Unix":1614794454},"Text":"# [sed 4.2.2], 160 bytes\r\n\r\n```sed\r\ns!&!&amp;!g\r\ns!<!\\&lt;!g\r\ns!>!\\&gt;!g\r\ns!\"!\\&#34;!g\r\nta\r\n:a\r\ns!^*\\(.*\\)!<li>\\1</li>!\r\ns!^#\\(.*\\)!<h1>\\1</h1>!\r\ns!=&gt; \\([^ ]*\\)\\(.*\\)!<a href=\"\\1\">\\2</a>!\r\nt\r\ni<p>\r\na</p>\r\n```\r\n\r\n[Try it online!][TIO-kltqsjy9]\r\n\r\n[sed 4.2.2]: https://www.gnu.org/software/sed/\r\n[TIO-kltqsjy9]: https://tio.run/##TZDBasMwEETv@oqVAybNwSZtT6ks0lNpDy2U9FQ3sIk3lqltGUkB/326SmJSEGj0ZjRa5Kk6nbxMZYrd8CRr4aWSZdqGi9as66tOWM8eHuMhoFgho@2inGeL8k6qttHlUuW8ychnEzfLM@ct8iKWQTn/3sIP21MIwTg6FEm5THR5r3LkcBCNGrRAlQ/6dJrBxjQeeHGWsGr6GhBRKKWEFqlIxOQHQ3BonA8woMPa4WCymFzwzbZh3ATqrqC3nHY3fK78X@Rpb/vq1gQpoz5QvyeQOhOFBhPCsMpzGvn/Wsqsq3N43nnbHgPB1@drzFxtNfnvFvzeUHcLOLuzwWdhDPB25GmQ3wwm2kqvP9bJOo2xF@o2NF7cmnju/jfiURTgjT22FezobDoUxQgeO/oD \"sed 4.2.2 ‚Äì Try It Online\"","Verbose":1},
{"Type":"SePost","Id":"se-codegolf-219993","Title":"Print A-Z and their alphabet index without using 1,2,4,6","Uri":"https://codegolf.stackexchange.com/a/219993","Date":{"Unix":1614549180},"Text":"# [Rust][1], 56 bytes\r\n```rust\r\n||for(i,x)in(9..).zip('A'..'['){print!(\"{}. {}\r\n\",i-8,x)}\r\n```\r\n\r\n\r\n  [1]: https://rust-lang.org/","Verbose":1},
{"Type":"SePost","Id":"se-codegolf-219932","Title":"Collatz Conjecture (OEIS A006577)","Uri":"https://codegolf.stackexchange.com/a/219932","Date":{"Unix":1614470889},"Text":"# Rust, 62 bytes\r\n```rust\r\nfn c(x:u8)->u8{if x==1{0}else{c(if x%2==0{x/2}else{x*3+1})+1}}\r\n```\r\n\r\nThis recursively determines the total. For 2 extra bytes `u8` can be changed to `u64` to support all 64-bit integers instead of just 8-bit ones.","Verbose":1},
{"Type":"note","Date":{"Unix":1615179600},"Title":"First note","Text":"\nIf you are reading this, then I've sucessfully set up my notes system. This is for notes with less content than full blog posts.\n\n", "Verbose": 1, "Id": "allsh-first-note"}
]
